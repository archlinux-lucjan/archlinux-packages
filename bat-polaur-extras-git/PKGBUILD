# Maintainer: Piotr GÃ³rski <lucjan.lucjanov@gmail.com>
# Maintainer: Mark Wagie <mark dot wagie at tutanota dot com>
# Contributor: desbma

pkgname=bat-polaur-extras-git
_pkgname=bat-extras
pkgver=2021.08.21.r1.g8ad00bd
pkgrel=4
pkgdesc="Bash scripts that integrate bat with various command line tools."
arch=('any')
url="https://github.com/eth-p/bat-extras"
license=('MIT')
depends=('bash' 'bat' 'git' 'man-db' 'ripgrep')
makedepends=('git')
optdepends=('ncurses: optional for batdiff script'
            'git-delta: optional for batdiff script'
            'fzf: optional for batman script'
            'exa: optional for batpipe script'
            'entr: optional for batwatch script'
            'prettier: various code formatting for prettybat script'
            'shfmt: bash formatting for prettybat script'
            'rustfmt: Rust formatting for prettybat script'
            'clang: C / C++ / Objective-C formatting for prettybat script'
            'python-black: Python formatting for prettybat script')
provides=("bat-extras")
conflicts=("bat-extras")
source=('git+https://github.com/eth-p/bat-extras.git'
        'git+https://github.com/eth-p/best.git'
        'git+https://github.com/eth-p/best-tests.git'
        '0001-batman-Fix-error-when-using-fzf-to-pick-manpages.patch'
        '0002-batdiff-Fix-use-of-deprecated-hunk-style.patch'
        '0003-batdiff-Fix-line-too-long-80-chars.patch')
sha256sums=('SKIP'
            'SKIP'
            'SKIP'
            'd1b0b4b144ce62529fa4f61b8d1f3d9876412ed98a08bc572082c80a610bc227'
            '76a00b4bfab441ae887e78f365fa58d477ba09d23f7aa275894b3e2b6e5c81cf'
            '2e8f44de9ab595808cb2cc1aa56ed3a3573945ddb0ffeb3fe81a3e0ba13f48a9')

prepare() {
  cd $_pkgname

  local src
   for src in "${source[@]}"; do
     src="${src%%::*}"
     src="${src##*/}"
     [[ $src = *.patch ]] || continue
     echo "Applying patch $src..."
     patch -Np1 < "../$src"
   done

  git submodule init .test-framework
  git config submodule.best.url "$srcdir/best"
  git submodule update

  cd .test-framework
  git submodule init tests
  git config submodule.best-tests.url "$srcdir/best-tests"
  git submodule update
}

pkgver() {
  cd $_pkgname
  git describe --long --tags | sed 's/^v//;s/\([^-]*-g\)/r\1/;s/-/./g'
}

check() {
  cd $_pkgname
  ./test.sh
}

package() {
  cd $_pkgname
  
  ./build.sh \
    --minify=none \
    --no-verify \
    --prefix="$pkgdir/usr" \
    --install

  # documentation
  install -vDm644 -t "$pkgdir/usr/share/doc/$pkgname" \
    CONTRIBUTING.md README.md doc/*
  install -vDm644 -t "$pkgdir/usr/share/man/man1" man/*

  # license
  install -vDm644 -t "$pkgdir/usr/share/licenses/$pkgname" LICENSE.md
}
