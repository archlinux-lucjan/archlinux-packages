# Maintainer: Peter Jung ptr1337 <admin@ptr1337.dev>
# Maintainer: Piotr GÃ³rski <lucjan.lucjanov@gmail.com>
# Contributor: Tejun Heo <tj@kernel.org>

pkgname=scx-scheds-git
_gitname=scx
pkgver=1.0.16.r74.g504facd0
pkgrel=1
pkgdesc='sched_ext schedulers and tools'
url='https://github.com/sched-ext/scx'
arch=('x86_64')
license=('GPL-2.0-only')
depends=(
  jq
  libseccomp
  libelf
  zlib
)
makedepends=(
  clang
  git
  llvm
  llvm-libs
  python
  rust
)
options=(!lto)
provides=("scx-scheds" "scxctl")
conflicts=("scx-scheds" "scxctl")
source=("git+https://github.com/sched-ext/scx")
sha256sums=('SKIP')

_backports=(
3175ac73adb5e727f1fcb69f238d489e94077885 # scx_loader: Add chaos scheduler
56030f0623e162814153cf0bde0eaea748ea6dfa # scx_loader: Add mitosis scheduler
95210c51f5604cf8b689518e49fe39af4b0ae120 # scx_loader: Add wd40 scheduler
8cd28ed3cda407fffef5a7387b71e22e669b015e # scxctl: cache DBUS results to eliminate redundant calls
d8c28355592f8754e2948f4cbcb3d283b901ebe2 # scxctl: optimize scheduler list display with iterator patterns
71fee4083e52fbff2c6d5ca5e19ffdbae19ce7f6 # scxctl: use &str parameters for string utility functions
54b8c9aec9470a18b417564df1e015514a629dee # scxctl: replace unwrap() calls with proper error handling
06318fdb406055dc56ed9536380c0d36f7ef0079 # scxctl: extract helper functions to reduce duplication
013ca45b131f5be867634f611df13cbb4445be6f # scxctl: simplify string processing utility functions
70aa475f0809670174e6436d9a499640b9e3c921 # scxctl: some Rust formatting changes to satisfy the CI
)

_reverts=(
)

pkgver() {
  cd $_gitname
  git describe --long --tags | sed 's/^v//;s/\([^-]*-g\)/r\1/;s/-/./g'
}

prepare() {
  cd $_gitname

  local _c _l
   for _c in "${_backports[@]}"; do
     if [[ "${_c}" == *..* ]]; then _l='--reverse'; else _l='--max-count=1'; fi
     git log --oneline "${_l}" "${_c}"
     git cherry-pick --mainline 1 --no-commit "${_c}"
   done
   for _c in "${_reverts[@]}"; do
     if [[ "${_c}" == *..* ]]; then _l='--reverse'; else _l='--max-count=1'; fi
     git log --oneline "${_l}" "${_c}"
     git revert --mainline 1 --no-commit "${_c}"
   done

   cargo fetch --locked --target "$(rustc -vV | sed -n 's/host: //p')"
}

build() {
  cd $_gitname
  export CARGO_TARGET_DIR=target
  cargo build \
     --release \
     --workspace \
     --locked \
     --frozen \
     --exclude scx_rlfifo \
     --exclude vmlinux_docify \
     --exclude arenalib_selftests
}

#check() {
#  cd $_gitname
#  cargo test \
#     --workspace \
#     --locked \
#     --frozen \
#     --exclude scx_rlfifo \
#     --exclude vmlinux_docify \
#     --exclude arenalib_selftests
#}

package() {
  cd $_gitname

  # binary files
  find target/release -maxdepth 1 -type f -executable ! -name '*.so' \
    -exec install -Dm755 -t "$pkgdir/usr/bin/" {} +

  # systemd service
  install -Dm644 services/systemd/scx_loader.service \
    "$pkgdir/usr/lib/systemd/system/scx_loader.service"

  # dbus service
  install -Dm644 services/systemd/org.scx.Loader.service\
    "$pkgdir/usr/share/dbus-1/system-services/org.scx.Loader.service"

  # dbus config
  install -Dm644 tools/scx_loader/org.scx.Loader.conf \
    "$pkgdir/usr/share/dbus-1/system.d/org.scx.Loader.conf"

  # scx_loader config
  install -Dm644 services/scx_loader.toml \
    "$pkgdir/usr/share/scx_loader/config.toml"
}
