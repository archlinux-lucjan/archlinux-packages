# Maintainer: Peter Jung ptr1337 <admin@ptr1337.dev>
# Maintainer: Piotr GÃ³rski <lucjan.lucjanov@gmail.com>

pkgname=scx-scheds-git
_gitname=scx
pkgver=1.0.13.r444.g77229cbd
pkgrel=2
pkgdesc='sched_ext schedulers and tools'
arch=('x86_64')
url="https://github.com/sched-ext/scx"
license=('GPL-2.0-only')
depends=('libelf' 'zlib' 'jq' 'protobuf' 'libseccomp' 'bpf' 'libbpf')
makedepends=('git' 'python' 'meson' 'clang' 'llvm' 'llvm-libs' 'rust')
backup=('etc/default/scx')
source=("git+https://github.com/sched-ext/scx")
sha256sums=('SKIP')
options=(!lto)
provides=("scx-scheds" "scxctl")
conflicts=("scx-scheds" "scxctl")

_backports=(
b0f6b18fae863264d972fe754c6a7429403e5e95 # scx_flash: Track precise CPU load
5b9969d9777243ec7da9a378092f30ce807a606c # scx_flash: Normalize CPU utilization in the capacity range
917e3cf8139a337d9c0b354e9ddb987c5ef985e0 # scx_flash: Introduce --slice-lag-scaling
3e554b313f076062b7b87cda3d021fb32c092714 # scx_flash: Add --direct-dispatch and revise --local-pcpu behavior
88a872b0c2109545501aeebdcb65e045cfdb1bd3 # scx_flash: Introduce --no-builtin-idle
701bc4dfdb21b7d87e5aa5911eeb3b8688010f8e # scx_flash: Refactoring to avoid unnecessary task lookup
b68dcbe0dee9d06a92769961f4b0eaa52cfeda3c # scx_flash: Always direct dispatch in round-robin mode
1a0cbc4ef94bb1fd9ecad3fd7bcf2ee659ef40dc # scx_flash: Always scale time slice in function of the waiting tasks
c6d74281ae4e0049aafe894cf855ab118eea20f1 # scx_loader: Update profiles for scx_flash with direct dispatch
4d8fb5409c7ca62ecc1f6509d6abf923707cedb1 # meson: install scx_mitosis and scx_wd40
ab28abe933d467b306b0b4aacb422804aa23260f # scx_loader: Add wd40 scheduler
f185f267a4e0b5bb009456d5ee220d92bdd9d255 # scx_loader: Add chaos scheduler
7aedc95559c808ecb64bbf23871f08bc4546edfd # scx_loader: Add mitosis scheduler
)

_reverts=(
)

pkgver() {
  cd $_gitname
  # git describe
  git describe --long --tags | sed 's/^v//;s/\([^-]*-g\)/r\1/;s/-/./g'
  # alternative
  # _ver="$(cat meson.build | grep -m1 version: | cut -d "'" -f2 | tr - .)"
  # echo "${_ver}.r$(git rev-list --count HEAD).g$(git rev-parse --short HEAD)"
}

prepare() {
 cd $_gitname

 local _c _l
  for _c in "${_backports[@]}"; do
    if [[ "${_c}" == *..* ]]; then _l='--reverse'; else _l='--max-count=1'; fi
    git log --oneline "${_l}" "${_c}"
    git cherry-pick --mainline 1 --no-commit "${_c}"
  done
  for _c in "${_reverts[@]}"; do
    if [[ "${_c}" == *..* ]]; then _l='--reverse'; else _l='--max-count=1'; fi
    git log --oneline "${_l}" "${_c}"
    git revert --mainline 1 --no-commit "${_c}"
  done

  local src
  for src in "${source[@]}"; do
    src="${src%%::*}"
    src="${src##*/}"
    [[ $src = *.patch ]] || continue
    echo "Applying patch $src..."
    patch -Np1 < "../$src"
  done
}

build() {
  cd $_gitname
  arch-meson . build -D openrc=disabled \
    -D libbpf_a=disabled \
    -D bpftool=disabled \
    -D b_lto=true \
    -D b_lto_mode=thin \
    -D cargo_home="$srcdir"/scx
  meson compile -C build
}

package() {
  cd $_gitname
  meson install -C build --destdir "${pkgdir}"
}
