# Maintainer: Peter Jung ptr1337 <admin@ptr1337.dev>
# Maintainer: Piotr GÃ³rski <lucjan.lucjanov@gmail.com>

pkgname=scx-scheds-git
_gitname=scx
pkgver=1.0.5.r43.ga673dcf
pkgrel=5
pkgdesc='sched_ext schedulers and tools'
arch=('x86_64')
url="https://github.com/sched-ext/scx"
license=('GPL-2.0-only')
depends=('libelf' 'zlib' 'jq')
makedepends=('git' 'python' 'meson' 'clang' 'llvm' 'llvm-libs' 'rust')
backup=('etc/default/scx')
source=("git+https://github.com/sched-ext/scx")
sha256sums=('SKIP')
options=(!lto)
provides=("scx-scheds")
conflicts=("scx-scheds")

_backports=(
9a29547e5ba24166f4959afa54343b516eacde2b # scx_bpfland: rework lowlatency mode
189473356f8eb3ea8387726777ba638c1cfb392f # WIP: scx_bpfland: handle user-space futex critical sections
efb9fdbb3c7a12168e24fcdeea64ab7373d0a89d # scheds: introduce scx_fair
d1ad85da1cde56841a226e14bd1b27581db426ab # scx_fair: introduce lowlatency mode
107a520f6bb1ba510c5391215aa7dd7d0ca1b050 # scx_fair: use cast_mask() from common.bpf.h
7b0d6434b87066d5024b1ed9ed4f83314a64e3a1 # scx_fair: always give tasks a chance to run on an idle CPU
ea349dba659bb83b4a2b85d2bd618e9adee10187 # scx_fair: introduce per-CPU DSQs
2ba87a29b0c88aa86db80e0b54c678243067444b # scx_fair: apply minimum vruntime when task is dispatched
d41a15759af2584f2ff9cafa7a17b89d4d744ac1 # scx_fair: do not scale the assigned time slice based on task priority
4eec7605e0a323be53ee795c9c814b182f835f4f # scx_fair: make lowlatency default and drop it as an option
10e45f4fed45f05b99656fe2768759554242feff # WIP: scx_fair: handle user-space futex critical sections
7bd61f43342143838deb0dc1c5db280890c8143e # scx_loader: Add SwitchScheduler methods to DBUS interface
5414d052f16f520da68cb831185678c7978a409a # Drop journald from libalpn hooks
)

_reverts=(
)

pkgver() {
  cd $_gitname
  # git describe
  git describe --long --tags | sed 's/^v//;s/\([^-]*-g\)/r\1/;s/-/./g'
  # alternative
  # _ver="$(cat meson.build | grep -m1 version: | cut -d "'" -f2 | tr - .)"
  # echo "${_ver}.r$(git rev-list --count HEAD).g$(git rev-parse --short HEAD)"
}

prepare() {
 cd $_gitname

 local _c _l
  for _c in "${_backports[@]}"; do
    if [[ "${_c}" == *..* ]]; then _l='--reverse'; else _l='--max-count=1'; fi
    git log --oneline "${_l}" "${_c}"
    git cherry-pick --mainline 1 --no-commit "${_c}"
  done
  for _c in "${_reverts[@]}"; do
    if [[ "${_c}" == *..* ]]; then _l='--reverse'; else _l='--max-count=1'; fi
    git log --oneline "${_l}" "${_c}"
    git revert --mainline 1 --no-commit "${_c}"
  done

  local src
  for src in "${source[@]}"; do
    src="${src%%::*}"
    src="${src##*/}"
    [[ $src = *.patch ]] || continue
    echo "Applying patch $src..."
    patch -Np1 < "../$src"
  done
}

build() {
  cd $_gitname
  arch-meson . build -D openrc=disabled
  meson compile -C build
}

package() {
  cd $_gitname
  meson install -C build --destdir "${pkgdir}"
}
