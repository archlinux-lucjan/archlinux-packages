# Maintainer: Peter Jung ptr1337 <admin@ptr1337.dev>
# Maintainer: Piotr GÃ³rski <lucjan.lucjanov@gmail.com>

pkgname=scx-scheds-git
gitname=scx
pkgver=1.0.2.r13.g646cefd
pkgrel=3
pkgdesc="sched_ext schedulers"
arch=('x86_64')
url="https://github.com/sched-ext/scx"
license=('GPL-2.0-only')
depends=('libelf' 'zlib' 'jq')
makedepends=('git' 'python' 'meson' 'clang' 'llvm' 'llvm-libs' 'rust')
backup=('etc/default/scx' 'etc/systemd/journald@sched-ext.conf')
source=("git+https://github.com/sched-ext/scx")
sha256sums=('SKIP')
options=(!lto)
provides=("scx-scheds")
conflicts=("scx-scheds")

_backports=(
4705520d4000bffa76a3259b29e90154955eacc2 # scx_lavd: remove unnecessary options which has never been used
9dc7f94cb60095c7caa896ca7a933070326cb8be # scx_lavd: unifiy the deadline calculation and ineligibility calculation
15871fd032820deda7c90bba5b9901c5e9c6624d # scx_lavd: turn off pinned core less aggressively
623b05a282d9cb7bb092c6b1429a9332ceed5ce0 # scx_lavd: revise perf_cri factor to reflect wakeup, runtime, and run_freq
03a8c10ece2b13bf2fa1e64a808cb7fe16d14666 # scx_lavd: add cpdom_ctx to abstract compute domain and its DSQ
c1cf11f7b1862b70786329a6908c019ee8a6bd0d # scx_lavd: make ops.enqueue() core type aware
fa87e1c593cdb18e2a470f4b66c5fe4697da8e9e # scx_lavd: make ops.dispatch() core type aware
25bf98d2a05a1ab1ac1cd9f67f95f64dbce06bf8 # scx_lavd: make ops.select_cpu() core type aware
c35b6b27ff8f8e88a11885ee6313757f9245d695 # scx_lavd: consider task pinning for core-type-aware ops.enqueue()
c213a3e44f052d47d21bb11c78429d56719d9a80 # scx_lavd: make core compaction core type aware
1f1a3dc4f1cbe98d516a56d7780270aa0604d457 # scx_lavd: sort cores in descending order of max freq
4ecf3fc94e34504f21ab975a55133c421082b451 # scx_lavd: build cpdom map from rust
182b0bd249476a22992ef2bfab79557baed4c0a9 # scx_lavd: make the verifier in 6.8 kernel happy
b7b8c8de902eeb8619911f64a1468b13c3f94b03 # scx_lavd: fix build errors
b69f42be63870da266d814c1fdb8049ec8970941 # scx_asdf: Adaptive Shortest Deadline First scheduler
d307d7071545c75021e1c9b65f2dab58608fef32 # bolt: Introduce new scx_bolt scheduler
d1702515fdde41ffa1980a0cb8e333fedfa97159 # bolt: Add Topology object to Scheduler
261efd216ad21c1552fd316f9d7b241701214e56 # bolt: Move scheduler logic into separate mod
b9bc71fced0c8814466722639c07424c011b4711 # bolt: Use BPF_PROG_RUN to create domains
aeb3f23611e77ebe6afff9f19c931fcacd453755 # bolt: Create and initialize per-domain DSQ
ddcc7e4969b47a9c8e36538b5eb4698c6a6aa842 # bolt: Add tasks and pcpu logic
7a5d8cf9e19887f058670151af29d58ad5770b1d # scx_joule: Introduce scx_joule scheduler
)

_reverts=(
)

pkgver() {
  cd $gitname
  git describe --long --tags | sed 's/^v//;s/\([^-]*-g\)/r\1/;s/-/./g'
}

prepare() {
 cd $gitname

 local _c _l
  for _c in "${_backports[@]}"; do
    if [[ "${_c}" == *..* ]]; then _l='--reverse'; else _l='--max-count=1'; fi
    git log --oneline "${_l}" "${_c}"
    git cherry-pick --mainline 1 --no-commit "${_c}"
  done
  for _c in "${_reverts[@]}"; do
    if [[ "${_c}" == *..* ]]; then _l='--reverse'; else _l='--max-count=1'; fi
    git log --oneline "${_l}" "${_c}"
    git revert --mainline 1 --no-commit "${_c}"
  done

  local src
  for src in "${source[@]}"; do
    src="${src%%::*}"
    src="${src##*/}"
    [[ $src = *.patch ]] || continue
    echo "Applying patch $src..."
    patch -Np1 < "../$src"
  done
}

build() {
  cd $gitname
  arch-meson . build -D openrc=disabled
  meson compile -C build
}

package() {
  cd $gitname
  meson install -C build --destdir "${pkgdir}"
  install -Dm644 "LICENSE" "${pkgdir}/usr/share/licenses/$pkgname/LICENSE"
}
