# Maintainer: Peter Jung ptr1337 <admin@ptr1337.dev>
# Maintainer: Piotr GÃ³rski <lucjan.lucjanov@gmail.com>

pkgname=scx-scheds-git
_gitname=scx
pkgver=1.0.15.r258.g3c6fb461
pkgrel=1
pkgdesc='sched_ext schedulers and tools'
arch=('x86_64')
url="https://github.com/sched-ext/scx"
license=('GPL-2.0-only')
depends=('libelf' 'zlib' 'jq' 'protobuf' 'libseccomp' 'bpf' 'libbpf')
makedepends=('git' 'python' 'meson' 'clang' 'llvm' 'llvm-libs' 'rust')
backup=('etc/default/scx')
source=("git+https://github.com/sched-ext/scx")
sha256sums=('SKIP')
options=(!lto)
provides=("scx-scheds" "scxctl")
conflicts=("scx-scheds" "scxctl")

_backports=(
e63c15036f7514e6d861d85a515ae457e12b1d59 # scx_loader: Add chaos scheduler
417142a5d964b4ece2ce947ac5cc9fef193e4ce8 # meson: install scx_mitosis and scx_wd40
b15987ea05aa6002c933ba694d3c33604cccea77 # scx_loader: Add mitosis scheduler
f15193b33bf18ab3be924bc6ffdfc16108122c1c # scx_loader: Add wd40 scheduler
4a1c046aca21f9ffa85c7ac96ebcc86c5e2a8f4a # scxctl: cache DBUS results to eliminate redundant calls
4cf61e5a0a5e40bc71762f8274b53a50c82871e0 # scxctl: optimize scheduler list display with iterator patterns
89cc438eb3b8caa2d0e2e1c4ff0948a157b2cb82 # scxctl: use &str parameters for string utility functions
28c2738b5cf97f3d9ec2fc02015f20cae2012409 # scxctl: replace unwrap() calls with proper error handling
3696455a4c6b90ddb517dd3213f4dddfc47fb1fd # scxctl: extract helper functions to reduce duplication
79d5b8c321b26de94e4d500619740ab8bd0cf1d7 # scxctl: simplify string processing utility functions
598486d7bd5c1c47da151722d327b61c860fb149 # scxctl: some Rust formatting changes to satisfy the CI
)

_reverts=(
)

pkgver() {
  cd $_gitname
  # git describe
  git describe --long --tags | sed 's/^v//;s/\([^-]*-g\)/r\1/;s/-/./g'
  # alternative
  # _ver="$(cat meson.build | grep -m1 version: | cut -d "'" -f2 | tr - .)"
  # echo "${_ver}.r$(git rev-list --count HEAD).g$(git rev-parse --short HEAD)"
}

prepare() {
 cd $_gitname

 local _c _l
  for _c in "${_backports[@]}"; do
    if [[ "${_c}" == *..* ]]; then _l='--reverse'; else _l='--max-count=1'; fi
    git log --oneline "${_l}" "${_c}"
    git cherry-pick --mainline 1 --no-commit "${_c}"
  done
  for _c in "${_reverts[@]}"; do
    if [[ "${_c}" == *..* ]]; then _l='--reverse'; else _l='--max-count=1'; fi
    git log --oneline "${_l}" "${_c}"
    git revert --mainline 1 --no-commit "${_c}"
  done

  local src
  for src in "${source[@]}"; do
    src="${src%%::*}"
    src="${src##*/}"
    [[ $src = *.patch ]] || continue
    echo "Applying patch $src..."
    patch -Np1 < "../$src"
  done
}

build() {
  cd $_gitname
  arch-meson . build -D openrc=disabled \
    -D libbpf_a=disabled \
    -D bpftool=disabled \
    -D b_lto=true \
    -D b_lto_mode=thin \
    -D cargo_home="$srcdir"/scx
  meson compile -C build
}

package() {
  cd $_gitname
  meson install -C build --destdir "${pkgdir}"
}
