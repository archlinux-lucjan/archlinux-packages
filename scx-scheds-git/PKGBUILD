# Maintainer: Peter Jung ptr1337 <admin@ptr1337.dev>
# Maintainer: Piotr GÃ³rski <lucjan.lucjanov@gmail.com>

pkgname=scx-scheds-git
_gitname=scx
pkgver=1.0.5.r108.g59cfd40
pkgrel=2
pkgdesc='sched_ext schedulers and tools'
arch=('x86_64')
url="https://github.com/sched-ext/scx"
license=('GPL-2.0-only')
depends=('libelf' 'zlib' 'jq')
makedepends=('git' 'python' 'meson' 'clang' 'llvm' 'llvm-libs' 'rust')
backup=('etc/default/scx')
source=("git+https://github.com/sched-ext/scx")
sha256sums=('SKIP')
options=(!lto)
provides=("scx-scheds")
conflicts=("scx-scheds")

_backports=(
758ac2d64c2fbe1af886c67f0db4f56e3c42cb27 # scx_bpfland: pick a random idle CPU when prev_cpu is not valid
23bda0be53462aaeae2d8e2bde753aa2446135db # scx_bpfland: always refill task timeslice in ops.dispatch()
b98ddcd9c405da38f9e8db23fb00b0b213362932 # scx_bpfland: prioritize only per-CPU kthreads with --local-kthreads
1a07f0118d7f9cb2e007158c91f28284c3e24395 # scx_bpfland: override wakee's L3 domain with waker's in WAKE_SYNC
13959423708ffabca55fd0b6b924f839227f5f27 # scx_bpfland: improve WAKE_SYNC by reusing full-idle SMT cores
3207dbb2be4ea9a9f3d2910843d944b450002f41 # scheds: introduce scx_fair
df30545ed657a1e286051498ea277859cfcf96b2 # scx_fair: introduce lowlatency mode
29c9485483dc3659efac20cdadb2679b245366b9 # scx_fair: use cast_mask() from common.bpf.h
4e6d2c503d4a3cedc894ffb0f3e5799efdfa37a7 # scx_fair: always give tasks a chance to run on an idle CPU
2b71d323f493cb593b64299ba30e287e12ed5ef4 # scx_fair: introduce per-CPU DSQs
c8f1d376676b7715af8bde5a4ec2ef304917f8ae # scx_fair: apply minimum vruntime when task is dispatched
9a78a40f959eff1f150337e33c8cf2c0e94f1a9f # scx_fair: do not scale the assigned time slice based on task priority
d1998de8172bdffa9eeaf738a42d6b5df00470e2 # scx_fair: make lowlatency default and drop it as an option
9813c783fab5021ee3b7d8537cf92d762b9b879a # scx_fair: prevent per-CPU DSQ stall with per-CPU kthreads
2e9efde4625301a4d332ec604601a7c63bf6ef55 # scx_fair: code cleanup
1076fd7964b7113c137a03cd4e8bd1494520a69d # scx_fair: custom voluntary context switch metric
a99d60e9a6e1f73aeed4f1c42eefef0bf99889e4 # scx_fair: override wakee's L3 domain with waker's in WAKE_SYNC
04abd096b504512a2d6a2fe6697cd024c1137489 # scx_fair: bump up latency weight of wakee on sync wake-up
)

_reverts=(
)

pkgver() {
  cd $_gitname
  # git describe
  git describe --long --tags | sed 's/^v//;s/\([^-]*-g\)/r\1/;s/-/./g'
  # alternative
  # _ver="$(cat meson.build | grep -m1 version: | cut -d "'" -f2 | tr - .)"
  # echo "${_ver}.r$(git rev-list --count HEAD).g$(git rev-parse --short HEAD)"
}

prepare() {
 cd $_gitname

 local _c _l
  for _c in "${_backports[@]}"; do
    if [[ "${_c}" == *..* ]]; then _l='--reverse'; else _l='--max-count=1'; fi
    git log --oneline "${_l}" "${_c}"
    git cherry-pick --mainline 1 --no-commit "${_c}"
  done
  for _c in "${_reverts[@]}"; do
    if [[ "${_c}" == *..* ]]; then _l='--reverse'; else _l='--max-count=1'; fi
    git log --oneline "${_l}" "${_c}"
    git revert --mainline 1 --no-commit "${_c}"
  done

  local src
  for src in "${source[@]}"; do
    src="${src%%::*}"
    src="${src##*/}"
    [[ $src = *.patch ]] || continue
    echo "Applying patch $src..."
    patch -Np1 < "../$src"
  done
}

build() {
  cd $_gitname
  arch-meson . build -D openrc=disabled
  meson compile -C build
}

package() {
  cd $_gitname
  meson install -C build --destdir "${pkgdir}"
}
