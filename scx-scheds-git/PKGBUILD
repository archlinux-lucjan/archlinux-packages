# Maintainer: Peter Jung ptr1337 <admin@ptr1337.dev>
# Maintainer: Piotr GÃ³rski <lucjan.lucjanov@gmail.com>
# Contributor: Tejun Heo <tj@kernel.org>

pkgname=scx-scheds-git
_gitname=scx
pkgver=1.0.16.r212.ga09691c1
pkgrel=6
pkgdesc='sched_ext schedulers and tools'
url='https://github.com/sched-ext/scx'
arch=('x86_64')
license=('GPL-2.0-only')
depends=(
  jq
  libseccomp
  libelf
  zlib
)
makedepends=(
  cargo
  clang
  git
  llvm
  llvm-libs
  python
)
options=(!lto)
provides=("scx-scheds" "scxctl")
conflicts=("scx-scheds" "scxctl")
source=("git+https://github.com/sched-ext/scx")
sha256sums=('SKIP')

_backports=(
10ae9c52fd50e945885369ea18c794890768dae0 # scx_cosmos: Improve SMT handling
98fcaf1d755002803de2556db7913892c497b20f # scx_cosmos: Prioritize faster CPUs
f09d72c3761c1657409544956d237cd32ce0cdc3 # scx_cosmos: Drop flat/preferred idle scan
c842a108cba76d168abda74a246b1332eb863755 # scx_bpfland: Rework idle CPU and scheduling policy
6b07038ee8b287736a4f33a7b2c5784616a9028d # scheds: Introduce scx_beerland
966b53a65be802b7734f6a9e98bfdaad4e7190ae # scx_loader: Add beerland scheduler
a7d5578ba254208742c459567e9715160132e530 # EXPERIMENTAL: scx_beerland: Use lockless peek (requires kernel patch)
e50ba939fe3a999405e4b2509145e67af1ef7175 # scx_beerland: Better SMT handling
d4103367bb59381718b04f993802046408bdba72 # scx_beerland: Prevent migrations for non-overloaded CPUs
64d19c2871d2dea657cda19627c9d8346bc03733 # scx_beerland: Re-enqueue tasks on CPU preempted by a higher sched class
84042fa405dec50873d856ca717a635df9a25e66 # scx_loader: Add chaos scheduler
92d383a0f67fe232300a383442cc28834d05e5fd # scx_loader: Error when non-auto modes do not have args
3f2d4668f7a2cc53d19fd0b45bcff1c9d17031ad # scxctl: Implement error handling
)

_reverts=(
)

pkgver() {
  cd $_gitname
  git describe --long --tags | sed 's/^v//;s/\([^-]*-g\)/r\1/;s/-/./g'
}

prepare() {
  cd $_gitname

  local _c _l
   for _c in "${_backports[@]}"; do
     if [[ "${_c}" == *..* ]]; then _l='--reverse'; else _l='--max-count=1'; fi
     git log --oneline "${_l}" "${_c}"
     git cherry-pick --mainline 1 --no-commit "${_c}"
   done
   for _c in "${_reverts[@]}"; do
     if [[ "${_c}" == *..* ]]; then _l='--reverse'; else _l='--max-count=1'; fi
     git log --oneline "${_l}" "${_c}"
     git revert --mainline 1 --no-commit "${_c}"
   done

   export RUSTUP_TOOLCHAIN=stable
   cargo fetch --locked --target "$(rustc -vV | sed -n 's/host: //p')"
}

build() {
  cd $_gitname
  export RUSTUP_TOOLCHAIN=stable
  export CARGO_TARGET_DIR=target
  cargo build \
     --release \
     --frozen \
     --all-features \
     --workspace \
     --exclude scx_rlfifo \
     --exclude scx_mitosis \
     --exclude scx_wd40 \
     --exclude scxcash \
     --exclude xtask \
     --exclude vmlinux_docify \
     --exclude arenalib_selftests
}

#check() {
#  cd $_gitname
#  export RUSTUP_TOOLCHAIN=stable
#  cargo test \
#     --frozen \
#     --all-features \
#     --workspace \
#     --exclude scx_rlfifo \
#     --exclude scx_mitosis \
#     --exclude scx_wd40 \
#     --exclude scxcash \
#     --exclude xtask \
#     --exclude vmlinux_docify \
#     --exclude arenalib_selftests
#}

package() {
  cd $_gitname

  # Install all built executables (skip .so and .d files)
  find target/release \
    -maxdepth 1 -type f -executable ! -name '*.so' \
    -exec install -Dm755 -t "$pkgdir/usr/bin/" {} +

  # systemd service
  install -Dm644 services/systemd/scx_loader.service \
    -t "$pkgdir/usr/lib/systemd/system/"

  # D-Bus service
  install -Dm644 services/systemd/org.scx.Loader.service \
    -t "$pkgdir/usr/share/dbus-1/system-services/"

  # D-Bus configuration
  install -Dm644 tools/scx_loader/org.scx.Loader.conf \
    -t "$pkgdir/usr/share/dbus-1/system.d/"

  # scx_loader sample configuration (template)
  install -Dm644 services/scx_loader.toml \
    "$pkgdir/usr/share/scx_loader/config.toml"
}
