# Maintainer: Peter Jung ptr1337 <admin@ptr1337.dev>
# Maintainer: Piotr GÃ³rski <lucjan.lucjanov@gmail.com>

pkgname=scx-scheds-git
_gitname=scx
pkgver=1.0.15.r231.gab165d7a
pkgrel=2
pkgdesc='sched_ext schedulers and tools'
arch=('x86_64')
url="https://github.com/sched-ext/scx"
license=('GPL-2.0-only')
depends=('libelf' 'zlib' 'jq' 'protobuf' 'libseccomp' 'bpf' 'libbpf')
makedepends=('git' 'python' 'meson' 'clang' 'llvm' 'llvm-libs' 'rust')
backup=('etc/default/scx')
source=("git+https://github.com/sched-ext/scx")
sha256sums=('SKIP')
options=(!lto)
provides=("scx-scheds" "scxctl")
conflicts=("scx-scheds" "scxctl")

_backports=(
b328c621d432326d3d233aacaa9844e1e05e5d38 # scx_loader: Add chaos scheduler
b49313b1fc6060a834900077cccff501af03d7e8 # meson: install scx_mitosis and scx_wd40
fd9512c1f1393e6dbd61ff1b92529c61c87dcec2 # scx_loader: Add mitosis scheduler
a7310b630293bf84bc7e1b8a7946898519802d2d # scx_loader: Add wd40 scheduler
b61d59566b3ed734adfc924ebfd723ac6ed743ae # scxctl: cache DBUS results to eliminate redundant calls
6e9936913832de90794e00befa44376ee79663fd # scxctl: optimize scheduler list display with iterator patterns
55f8dbdf56df3415f07ccc1babecd2d043e8293e # scxctl: use &str parameters for string utility functions
95fbeb97fa69871fcfd6bad0ad2ac00df7d43d02 # scxctl: replace unwrap() calls with proper error handling
078bfc9711555d8cc8417ecccc096f8f06d0dce4 # scxctl: extract helper functions to reduce duplication
8af7ef4e51fbb3001647e1e42c5ff79125b10121 # scxctl: simplify string processing utility functions
06fdb467e35e94ae5feff62913e4cb507ce9c50d # scxctl: some Rust formatting changes to satisfy the CI
c7400ffcc3735554079caa9620047d7890a508dd # scx_chaos: Log unregister on drop
cb26d959298c8b60396a4b8d7ca57c8479d910eb # scx_cosmos: Consider wakeup frequency when determining task deadlines
)

_reverts=(
)

pkgver() {
  cd $_gitname
  # git describe
  git describe --long --tags | sed 's/^v//;s/\([^-]*-g\)/r\1/;s/-/./g'
  # alternative
  # _ver="$(cat meson.build | grep -m1 version: | cut -d "'" -f2 | tr - .)"
  # echo "${_ver}.r$(git rev-list --count HEAD).g$(git rev-parse --short HEAD)"
}

prepare() {
 cd $_gitname

 local _c _l
  for _c in "${_backports[@]}"; do
    if [[ "${_c}" == *..* ]]; then _l='--reverse'; else _l='--max-count=1'; fi
    git log --oneline "${_l}" "${_c}"
    git cherry-pick --mainline 1 --no-commit "${_c}"
  done
  for _c in "${_reverts[@]}"; do
    if [[ "${_c}" == *..* ]]; then _l='--reverse'; else _l='--max-count=1'; fi
    git log --oneline "${_l}" "${_c}"
    git revert --mainline 1 --no-commit "${_c}"
  done

  local src
  for src in "${source[@]}"; do
    src="${src%%::*}"
    src="${src##*/}"
    [[ $src = *.patch ]] || continue
    echo "Applying patch $src..."
    patch -Np1 < "../$src"
  done
}

build() {
  cd $_gitname
  arch-meson . build -D openrc=disabled \
    -D libbpf_a=disabled \
    -D bpftool=disabled \
    -D b_lto=true \
    -D b_lto_mode=thin \
    -D cargo_home="$srcdir"/scx
  meson compile -C build
}

package() {
  cd $_gitname
  meson install -C build --destdir "${pkgdir}"
}
