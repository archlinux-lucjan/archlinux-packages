# Maintainer: Peter Jung ptr1337 <admin@ptr1337.dev>
# Maintainer: Piotr GÃ³rski <lucjan.lucjanov@gmail.com>
# Contributor: Tejun Heo <tj@kernel.org>

pkgname=scx-scheds-git
_gitname=scx
pkgver=1.0.16.r212.ga09691c1
pkgrel=2
pkgdesc='sched_ext schedulers and tools'
url='https://github.com/sched-ext/scx'
arch=('x86_64')
license=('GPL-2.0-only')
depends=(
  jq
  libseccomp
  libelf
  zlib
)
makedepends=(
  cargo
  clang
  git
  llvm
  llvm-libs
  python
)
options=(!lto)
provides=("scx-scheds" "scxctl")
conflicts=("scx-scheds" "scxctl")
source=("git+https://github.com/sched-ext/scx")
sha256sums=('SKIP')

_backports=(
1922f501ef7c018b6e8ab8580534d7b0d9669e2a # scx_cosmos: Improve SMT handling
5d66ad08a753cc46b84161c1680a16fd794be03c # scx_cosmos: Prioritize faster CPUs
5c739b96d96a48fe9bb0b22ea6134a33e9945473 # scx_cosmos: Drop flat/preferred idle scan
ba3c2488bc49e668d34ed4eafd116ee883ce66a0 # scheds: Introduce scx_beerland
c5ed21d5c09328e2c757f48832268a2080201a74 # scx_loader: Add beerland scheduler
b896cc633ee391ea40544be1358d9bcda826e7f0 # EXPERIMENTAL: scx_beerland: Use lockless peek (requires kernel patch)
396a2b462782b4da469de94d66ebb42842707231 # scx_beerland: Better SMT handling
a3b77dae79ae256911d03907135246d428a53521 # scx_beerland: Prevent migrations for non-overloaded CPUs
4089bc829298c0e2774bf1f20f02dc72dcb3d110 # scx_beerland: Re-enqueue tasks on CPU preempted by a higher sched class
2bfddd91c49e620c1613f9d3d066d27d20040aad # scx_loader: Add chaos scheduler
b880ac245e0f8ebbbc55cf2f0e246a8e133e5c8c # scx_loader: Error when non-auto modes do not have args
e0449e6fa83a71c01acdc0f211324a2759c21dd7 # scxctl: Implement error handling
544f297e7cbfeddfd7f747fa4a2b615a42c12da2 # scx_bpfland: Rework idle CPU and scheduling policy
)

_reverts=(
)

pkgver() {
  cd $_gitname
  git describe --long --tags | sed 's/^v//;s/\([^-]*-g\)/r\1/;s/-/./g'
}

prepare() {
  cd $_gitname

  local _c _l
   for _c in "${_backports[@]}"; do
     if [[ "${_c}" == *..* ]]; then _l='--reverse'; else _l='--max-count=1'; fi
     git log --oneline "${_l}" "${_c}"
     git cherry-pick --mainline 1 --no-commit "${_c}"
   done
   for _c in "${_reverts[@]}"; do
     if [[ "${_c}" == *..* ]]; then _l='--reverse'; else _l='--max-count=1'; fi
     git log --oneline "${_l}" "${_c}"
     git revert --mainline 1 --no-commit "${_c}"
   done

   export RUSTUP_TOOLCHAIN=stable
   cargo fetch --locked --target "$(rustc -vV | sed -n 's/host: //p')"
}

build() {
  cd $_gitname
  export RUSTUP_TOOLCHAIN=stable
  export CARGO_TARGET_DIR=target
  cargo build \
     --release \
     --locked \
     --frozen \
     --workspace \
     --exclude scx_rlfifo \
     --exclude scx_mitosis \
     --exclude scx_wd40 \
     --exclude scxcash \
     --exclude xtask \
     --exclude vmlinux_docify \
     --exclude arenalib_selftests
}

#check() {
#  cd $_gitname
#  export RUSTUP_TOOLCHAIN=stable
#  cargo test \
#     --locked \
#     --frozen \
#     --workspace \
#     --exclude scx_rlfifo \
#     --exclude scx_mitosis \
#     --exclude scx_wd40 \
#     --exclude scxcash \
#     --exclude xtask \
#     --exclude vmlinux_docify \
#     --exclude arenalib_selftests
#}

package() {
  cd $_gitname

  # Install all built executables (skip .so and .d files)
  find target/release \
    -maxdepth 1 -type f -executable ! -name '*.so' \
    -exec install -Dm755 -t "$pkgdir/usr/bin/" {} +

  # systemd service
  install -Dm644 services/systemd/scx_loader.service \
    -t "$pkgdir/usr/lib/systemd/system/"

  # D-Bus service
  install -Dm644 services/systemd/org.scx.Loader.service \
    -t "$pkgdir/usr/share/dbus-1/system-services/"

  # D-Bus configuration
  install -Dm644 tools/scx_loader/org.scx.Loader.conf \
    -t "$pkgdir/usr/share/dbus-1/system.d/"

  # scx_loader sample configuration (template)
  install -Dm644 services/scx_loader.toml \
    "$pkgdir/usr/share/scx_loader/config.toml"
}
