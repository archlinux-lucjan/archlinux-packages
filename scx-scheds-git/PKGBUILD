# Maintainer: Peter Jung ptr1337 <admin@ptr1337.dev>
# Maintainer: Piotr GÃ³rski <lucjan.lucjanov@gmail.com>

pkgname=scx-scheds-git
gitname=scx
pkgver=0.1.10.r213.g3df7a13
pkgrel=5
pkgdesc="sched_ext schedulers"
arch=('x86_64')
url="https://github.com/sched-ext/scx"
license=('GPL-2.0-only')
depends=('libelf' 'zlib' 'jq')
makedepends=('git' 'python' 'meson' 'clang' 'llvm' 'llvm-libs' 'rust')
backup=('etc/default/scx' 'etc/systemd/journald@sched-ext.conf')
source=("git+https://github.com/sched-ext/scx")
sha256sums=('SKIP')
options=(!lto)
provides=("scx-scheds")
conflicts=("scx-scheds")

_backports=(
d440b1819f9f72da397b51b7f23af0b977b0dc60 # scx-scheds: Add After=graphical.target into service (third attempt)
c8a60e2566c6387aeed27190feb9764023035dbf # libalpm: make sure that symlink will be moved
67ca4995e442a7dced0e9b41aa21697c6e398978 # scx_bpfland: introduce dynamic nvcsw threshold
85d114839150911b722af57195312d03c7edf398 # scx_bpfland: introduce a tunable for the max nvcsw threshold
1ec98664b92e70232792ba4b7f9627aae1d0edf7 # scx_bpfland: prevent per-CPU kthreads starving other tasks
38cf6ffa8f0174714f8b00d0f7a3532c5ad2a728 # scx_bpfland: fix typo in slice_ns definition
7495ed210647fd768e6a093d7b034253324e9d35 # scx_bpfland: prevent slice delta overflow
1d77ac39fc167ec9a496500f247af518229aad94 # scx_bpfland: account unused time slice in sched_yield()
9b5859b639fd06aa2768a8d7f795582ec6785c7f # scx_bpfland: report interactive tasks to stdout
fd2854b9944def3ceccb3a8b9221eec03b9e2f95 # scx_bpfland: kick idle CPUs after dispatch to optimize task consumption
bd708cdcd679fa0548cac50a839bfa680ff6340d # scx_bpfland: optimize offline CPU handling
e2e9b952bee77a03383ebbc4b1162b34bf8ec03d # scx_bpfland: prevent tasks from abusing interactive priority boost
20c446b9ec46dea80fcae9da31ab746e505baf4e # scx_bpfland: introduce a tunable for the interactive time threshold
6ade889cf1986cb78b885ea40a2a7370b8b8cd64 # scx_bpfland: bump up max time slice to 20ms
)

_reverts=(
)

pkgver() {
  cd $gitname
  git describe --long --tags | sed 's/^v//;s/\([^-]*-g\)/r\1/;s/-/./g'
}

prepare() {
 cd $gitname

 local _c _l
  for _c in "${_backports[@]}"; do
    if [[ "${_c}" == *..* ]]; then _l='--reverse'; else _l='--max-count=1'; fi
    git log --oneline "${_l}" "${_c}"
    git cherry-pick --mainline 1 --no-commit "${_c}"
  done
  for _c in "${_reverts[@]}"; do
    if [[ "${_c}" == *..* ]]; then _l='--reverse'; else _l='--max-count=1'; fi
    git log --oneline "${_l}" "${_c}"
    git revert --mainline 1 --no-commit "${_c}"
  done

  local src
  for src in "${source[@]}"; do
    src="${src%%::*}"
    src="${src##*/}"
    [[ $src = *.patch ]] || continue
    echo "Applying patch $src..."
    patch -Np1 < "../$src"
  done
}

build() {
  cd $gitname
  arch-meson . build -D openrc=disabled
  meson compile -C build
}

package() {
  cd $gitname
  meson install -C build --destdir "${pkgdir}"
  install -Dm644 "LICENSE" "${pkgdir}/usr/share/licenses/$pkgname/LICENSE"
}
