# Maintainer: Peter Jung ptr1337 <admin@ptr1337.dev>
# Maintainer: Piotr GÃ³rski <lucjan.lucjanov@gmail.com>

pkgname=scx-scheds-git
_gitname=scx
pkgver=1.0.5.r112.g9f60053
pkgrel=1
pkgdesc='sched_ext schedulers and tools'
arch=('x86_64')
url="https://github.com/sched-ext/scx"
license=('GPL-2.0-only')
depends=('libelf' 'zlib' 'jq')
makedepends=('git' 'python' 'meson' 'clang' 'llvm' 'llvm-libs' 'rust')
backup=('etc/default/scx')
source=("git+https://github.com/sched-ext/scx")
sha256sums=('SKIP')
options=(!lto)
provides=("scx-scheds")
conflicts=("scx-scheds")

_backports=(
758ac2d64c2fbe1af886c67f0db4f56e3c42cb27 # scx_bpfland: pick a random idle CPU when prev_cpu is not valid
23bda0be53462aaeae2d8e2bde753aa2446135db # scx_bpfland: always refill task timeslice in ops.dispatch()
b98ddcd9c405da38f9e8db23fb00b0b213362932 # scx_bpfland: prioritize only per-CPU kthreads with --local-kthreads
1a07f0118d7f9cb2e007158c91f28284c3e24395 # scx_bpfland: override wakee's L3 domain with waker's in WAKE_SYNC
f0073757ba2e31b989efa162c9333f189ea65cac # scheds: introduce scx_fair
2ccdc88adb1b1c8ee298e05904f7fcecb3e8425d # scx_fair: introduce lowlatency mode
a83f2fdb0f0aede423e2539b08676749e4919c18 # scx_fair: use cast_mask() from common.bpf.h
a494a3cc2c1f65ddfe4d3854bb87b668ebaa7a40 # scx_fair: always give tasks a chance to run on an idle CPU
0a9861c2ce9482b14a6d64d3a9e45f050fceb15f # scx_fair: introduce per-CPU DSQs
b66136a1dae4def47401a1dc9e917bc0f16b9d21 # scx_fair: apply minimum vruntime when task is dispatched
64e85d6427a54c6c34ae7e87f02a12bca5d1fd15 # scx_fair: do not scale the assigned time slice based on task priority
5a7701ffa300b969ee98261fe37873350c53f5d1 # scx_fair: make lowlatency default and drop it as an option
7d440bc5ab5237116cb660ade76fabc8763b773a # scx_fair: prevent per-CPU DSQ stall with per-CPU kthreads
6e2a31c9a7e50e89e09e8623708c325945b59e8c # scx_fair: code cleanup
76c1bbb55a720866169e1af686fb69e5de8fcf83 # scx_fair: custom voluntary context switch metric
f9e393db7f024e1ba82423e3b39333bc2262bffd # scx_fair: always charge at least slice_min to vruntime
be6ca45664a21ea2af7aa7602fa59f7f802dafb0 # scx_fair: prevent DSQ starvation
d12942b5059c45943ac35bec6cfad012ea7c39a2 # WIP: scx-fair: drop per-CPU DSQs
922df9f88243a2c7cdf867c47902927aec8e8556 # WIP: scx_fair: drop BPF iterator
)

_reverts=(
)

pkgver() {
  cd $_gitname
  # git describe
  git describe --long --tags | sed 's/^v//;s/\([^-]*-g\)/r\1/;s/-/./g'
  # alternative
  # _ver="$(cat meson.build | grep -m1 version: | cut -d "'" -f2 | tr - .)"
  # echo "${_ver}.r$(git rev-list --count HEAD).g$(git rev-parse --short HEAD)"
}

prepare() {
 cd $_gitname

 local _c _l
  for _c in "${_backports[@]}"; do
    if [[ "${_c}" == *..* ]]; then _l='--reverse'; else _l='--max-count=1'; fi
    git log --oneline "${_l}" "${_c}"
    git cherry-pick --mainline 1 --no-commit "${_c}"
  done
  for _c in "${_reverts[@]}"; do
    if [[ "${_c}" == *..* ]]; then _l='--reverse'; else _l='--max-count=1'; fi
    git log --oneline "${_l}" "${_c}"
    git revert --mainline 1 --no-commit "${_c}"
  done

  local src
  for src in "${source[@]}"; do
    src="${src%%::*}"
    src="${src##*/}"
    [[ $src = *.patch ]] || continue
    echo "Applying patch $src..."
    patch -Np1 < "../$src"
  done
}

build() {
  cd $_gitname
  arch-meson . build -D openrc=disabled
  meson compile -C build
}

package() {
  cd $_gitname
  meson install -C build --destdir "${pkgdir}"
}
