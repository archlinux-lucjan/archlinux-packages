# Maintainer: Peter Jung ptr1337 <admin@ptr1337.dev>
# Maintainer: Piotr GÃ³rski <lucjan.lucjanov@gmail.com>

pkgname=scx-scheds-git
_gitname=scx
pkgver=1.0.12.r201.gfd0dd6b4
pkgrel=1
pkgdesc='sched_ext schedulers and tools'
arch=('x86_64')
url="https://github.com/sched-ext/scx"
license=('GPL-2.0-only')
depends=('libelf' 'zlib' 'jq' 'protobuf' 'libseccomp' 'bpf' 'libbpf')
makedepends=('git' 'python' 'meson' 'clang' 'llvm' 'llvm-libs' 'rust')
backup=('etc/default/scx')
source=("git+https://github.com/sched-ext/scx")
sha256sums=('SKIP')
options=(!lto)
provides=("scx-scheds" "scxctl")
conflicts=("scx-scheds" "scxctl")

_backports=(
8619ad3f82d410596709388cd92b9572b8ea807b # scx_rustland_core: Initialize task dsq_vtime and slice
8feefb968d6abbb9964f811047a922a32ee3a3be # scx_rustland_core: Dispatch per-CPU tasks to their only usable CPU
da944f38406bba3ee87df6103c47b7e54f5013db # scx_rustland_core: Avoid sched_setscheduler() in non-partial mode
1a7c377c2b81e6e6690cfadb0445a6fd80b6b179 # scx_rustland_core: Use BPF_RB_NO_WAKEUP
4aee6502671abd21ea998e29ace6bf4b3fc04bde # scx_rustland_core: Introduce a separate DSQ for the user-space scheduler
c0a72d436d68342828158ed47423ab2f06b3c146 # scx_rustland_core: Make usersched_needed per-CPU
5ad897ec257ed016cc9bceabfb32be33fa5f71a3 # scx_rustland_core: Use default built-in idle policy for sync wakeup
789c5d80eaf46ea4787923b9e0967f3d4726536a # scx_rustland_core: Do not allow per-CPU kthreads to preempt other tasks
a550831bcb19fc84ec82fe03ada86852588c60b6 # scx_rustland_core: Use SCX_LOCAL_DSQ / SCX_LOCAL_DSQ_ON consistently
30761a4843e4117737ab72e2fe187fa09ddde346 # scx_rustland_core: Drop cpumask generation counter
0332cefcdea969c8a1c8cc49f638da3ebc1ba3aa # scx_rustland_core: Expose nr_cpus_allowed to user-space
687675c6a016f2ec07b3b1ac4479da2f0b5df7ad # scx_rustland: Introduce --percpu-local
)

_reverts=(
)

pkgver() {
  cd $_gitname
  # git describe
  git describe --long --tags | sed 's/^v//;s/\([^-]*-g\)/r\1/;s/-/./g'
  # alternative
  # _ver="$(cat meson.build | grep -m1 version: | cut -d "'" -f2 | tr - .)"
  # echo "${_ver}.r$(git rev-list --count HEAD).g$(git rev-parse --short HEAD)"
}

prepare() {
 cd $_gitname

 local _c _l
  for _c in "${_backports[@]}"; do
    if [[ "${_c}" == *..* ]]; then _l='--reverse'; else _l='--max-count=1'; fi
    git log --oneline "${_l}" "${_c}"
    git cherry-pick --mainline 1 --no-commit "${_c}"
  done
  for _c in "${_reverts[@]}"; do
    if [[ "${_c}" == *..* ]]; then _l='--reverse'; else _l='--max-count=1'; fi
    git log --oneline "${_l}" "${_c}"
    git revert --mainline 1 --no-commit "${_c}"
  done

  local src
  for src in "${source[@]}"; do
    src="${src%%::*}"
    src="${src##*/}"
    [[ $src = *.patch ]] || continue
    echo "Applying patch $src..."
    patch -Np1 < "../$src"
  done
}

build() {
  cd $_gitname
  arch-meson . build -D openrc=disabled \
    -D libbpf_a=disabled \
    -D bpftool=disabled \
    -D b_lto=true \
    -D b_lto_mode=thin \
    -D cargo_home="$srcdir"/scx
  meson compile -C build
}

package() {
  cd $_gitname
  meson install -C build --destdir "${pkgdir}"
}
