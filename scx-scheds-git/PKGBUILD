# Maintainer: Peter Jung ptr1337 <admin@ptr1337.dev>
# Maintainer: Piotr GÃ³rski <lucjan.lucjanov@gmail.com>

pkgname=scx-scheds-git
_gitname=scx
pkgver=1.0.12.r201.gfd0dd6b4
pkgrel=7
pkgdesc='sched_ext schedulers and tools'
arch=('x86_64')
url="https://github.com/sched-ext/scx"
license=('GPL-2.0-only')
depends=('libelf' 'zlib' 'jq' 'protobuf' 'libseccomp' 'bpf' 'libbpf')
makedepends=('git' 'python' 'meson' 'clang' 'llvm' 'llvm-libs' 'rust')
backup=('etc/default/scx')
source=("git+https://github.com/sched-ext/scx")
sha256sums=('SKIP')
options=(!lto)
provides=("scx-scheds" "scxctl")
conflicts=("scx-scheds" "scxctl")

_backports=(
b10f674d5901fdf239384c59cad67c796fc91bcf # scx_rustland_core: Initialize task dsq_vtime and slice
1f0687aec15216eb94a8e1e1c807ff3a33532d74 # scx_rustland_core: Avoid sched_setscheduler() in non-partial mode
6963b7f3dba768abba0a34647e4b5b4fb0182f8e # scx_rustland_core: Use BPF_RB_NO_WAKEUP
7982c027c4daebe6214ec1b1c64a33ddfb1e49ba # scx_rustland_core: Do not allow per-CPU kthreads to preempt other tasks
b23c80cfdaf0bebf5f5647e19d512c32072a9e39 # scx_rustland_core: Drop cpumask generation counter
37a93afc0c333c494db52ee51cfbfef8a07d16f5 # scx_rustland_core: Expose nr_cpus_allowed to user-space
a0b3a888b3ee1ccbb099febc9b66f80b312140d1 # scx_rustland: Introduce --percpu-local
22f4bc6d5aaa444b9c0cadd61f2d88b7e24822ec # scx_rustland: Show version info
97090561178462f177fb024e8d115b4ec9c602dc # scx_rustland_core: Introduce a separate DSQ for the user-space scheduler
4cbfb1964fa7faad26fa21485219fb75e45af3ac # scx_rustland_core: Dispatch per-CPU tasks to their only usable CPU
39516070f8b2ac9b91a98b4da7d67aa85bd58e20 # scx_rustland_core: Use default built-in idle policy for sync wakeup
)

_reverts=(
)

pkgver() {
  cd $_gitname
  # git describe
  git describe --long --tags | sed 's/^v//;s/\([^-]*-g\)/r\1/;s/-/./g'
  # alternative
  # _ver="$(cat meson.build | grep -m1 version: | cut -d "'" -f2 | tr - .)"
  # echo "${_ver}.r$(git rev-list --count HEAD).g$(git rev-parse --short HEAD)"
}

prepare() {
 cd $_gitname

 local _c _l
  for _c in "${_backports[@]}"; do
    if [[ "${_c}" == *..* ]]; then _l='--reverse'; else _l='--max-count=1'; fi
    git log --oneline "${_l}" "${_c}"
    git cherry-pick --mainline 1 --no-commit "${_c}"
  done
  for _c in "${_reverts[@]}"; do
    if [[ "${_c}" == *..* ]]; then _l='--reverse'; else _l='--max-count=1'; fi
    git log --oneline "${_l}" "${_c}"
    git revert --mainline 1 --no-commit "${_c}"
  done

  local src
  for src in "${source[@]}"; do
    src="${src%%::*}"
    src="${src##*/}"
    [[ $src = *.patch ]] || continue
    echo "Applying patch $src..."
    patch -Np1 < "../$src"
  done
}

build() {
  cd $_gitname
  arch-meson . build -D openrc=disabled \
    -D libbpf_a=disabled \
    -D bpftool=disabled \
    -D b_lto=true \
    -D b_lto_mode=thin \
    -D cargo_home="$srcdir"/scx
  meson compile -C build
}

package() {
  cd $_gitname
  meson install -C build --destdir "${pkgdir}"
}
