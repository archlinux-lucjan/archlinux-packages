# Maintainer: Peter Jung ptr1337 <admin@ptr1337.dev>
# Maintainer: Piotr GÃ³rski <lucjan.lucjanov@gmail.com>

pkgname=scx-scheds-git
_gitname=scx
pkgver=1.0.5.r117.gb88f567
pkgrel=3
pkgdesc='sched_ext schedulers and tools'
arch=('x86_64')
url="https://github.com/sched-ext/scx"
license=('GPL-2.0-only')
depends=('libelf' 'zlib' 'jq')
makedepends=('git' 'python' 'meson' 'clang' 'llvm' 'llvm-libs' 'rust')
backup=('etc/default/scx')
source=("git+https://github.com/sched-ext/scx")
sha256sums=('SKIP')
options=(!lto)
provides=("scx-scheds")
conflicts=("scx-scheds")

_backports=(
e0c4591837585cb170dc51c67439fb5465e69304 # scx_bpfland: pick a random idle CPU when prev_cpu is not valid
0c64d577a84ee7546980ffa5afd592478a01b0f8 # scx_bpfland: always refill task timeslice in ops.dispatch()
a1fbd91eb95120eb7f995b32497fcb6f73b305b2 # scx_bpfland: clarify error code returned by pick_idle_cpu()
90a571b13411c2472a45c3bbeea17b5fb7050f41 # scx_bpfland: get rid of per-CPU DSQs
112a5d480b00a183b77184527ef2c6eb7c22446e # scx_bpfland: rework lowlatency mode to adjust tasks priority
19939ee8a0969fbd92daed208055479560338384 # scx_bpfland: tune default settings
2e40f34beb2b6cf92ac5af2e9b5fb84bcc678198 # scheds: introduce scx_fair
7a788bed05da3c91d350b6819d8ee638e5e4c64d # scx_fair: introduce lowlatency mode
6026d8af7f15bab9d5a6c58ff3b9eba10faaa54a # scx_fair: use cast_mask() from common.bpf.h
05587afd1a95bd03842e0c29794e5a254f385102 # scx_fair: always give tasks a chance to run on an idle CPU
6c201b3628732d42a6346ed6ede7246b19b9142b # scx_fair: introduce per-CPU DSQs
3321ca638c016ea6c5d8bd7488578534e58560d5 # scx_fair: apply minimum vruntime when task is dispatched
fafa51571cf15f2cbeb9433fa3900631810d9d41 # scx_fair: do not scale the assigned time slice based on task priority
d88679954488da0921acbce425f889faf8fb2169 # scx_fair: make lowlatency default and drop it as an option
c403356e1e81d4f9b7c8361f37e5ae7b64c7416c # scx_fair: prevent per-CPU DSQ stall with per-CPU kthreads
53dc5feae738e87df7c1a63e8adc7599303c9726 # scx_fair: code cleanup
cff8f0f9494916b34c2dad03e5e3890bae6dd999 # scx_fair: custom voluntary context switch metric
f8eccedcc41f10243c98415502893dc284e69076 # scx_fair: always charge at least slice_min to vruntime
efd1de6df465577d6646bb2588fb77a0c07e7ca7 # scx_fair: prevent DSQ starvation
badd1de274a61f5df32a248c6cc8486be62bbab9 # WIP: scx-fair: drop per-CPU DSQs
60a073a4a6d68a39fa3f1cb052b2ed12626b0aed # WIP: scx_fair: drop BPF iterator
77b8e655712f6179fcc4b677a2c5f60526ca5454 # scx_lavd: tracing all blocking locks and futexes
bd17589a6e2dfcb406b0646cff367c9350be1155 # scx_lavd: boost latency criticality when a task holds a lock
5b4b255cbbad670091f0d92b0d78769491ccdb0e # scx_lavd: do not preempt while holding a lock
648c95be9e4f2b5ea904865856ff4c7c0ec5dabf # scx_lavd: fix incorrect task comparison for preemption
b3c5a23693cb697addbeabc31bcde2c36845f0b0 # scx_rustland_core: use handle_mm_fault kprobe
)

_reverts=(
)

pkgver() {
  cd $_gitname
  # git describe
  git describe --long --tags | sed 's/^v//;s/\([^-]*-g\)/r\1/;s/-/./g'
  # alternative
  # _ver="$(cat meson.build | grep -m1 version: | cut -d "'" -f2 | tr - .)"
  # echo "${_ver}.r$(git rev-list --count HEAD).g$(git rev-parse --short HEAD)"
}

prepare() {
 cd $_gitname

 local _c _l
  for _c in "${_backports[@]}"; do
    if [[ "${_c}" == *..* ]]; then _l='--reverse'; else _l='--max-count=1'; fi
    git log --oneline "${_l}" "${_c}"
    git cherry-pick --mainline 1 --no-commit "${_c}"
  done
  for _c in "${_reverts[@]}"; do
    if [[ "${_c}" == *..* ]]; then _l='--reverse'; else _l='--max-count=1'; fi
    git log --oneline "${_l}" "${_c}"
    git revert --mainline 1 --no-commit "${_c}"
  done

  local src
  for src in "${source[@]}"; do
    src="${src%%::*}"
    src="${src##*/}"
    [[ $src = *.patch ]] || continue
    echo "Applying patch $src..."
    patch -Np1 < "../$src"
  done
}

build() {
  cd $_gitname
  arch-meson . build -D openrc=disabled
  meson compile -C build
}

package() {
  cd $_gitname
  meson install -C build --destdir "${pkgdir}"
}
