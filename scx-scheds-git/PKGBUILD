# Maintainer: Peter Jung ptr1337 <admin@ptr1337.dev>
# Maintainer: Piotr GÃ³rski <lucjan.lucjanov@gmail.com>

pkgname=scx-scheds-git
_gitname=scx
pkgver=1.0.13.r318.g5f8a603a
pkgrel=3
pkgdesc='sched_ext schedulers and tools'
arch=('x86_64')
url="https://github.com/sched-ext/scx"
license=('GPL-2.0-only')
depends=('libelf' 'zlib' 'jq' 'protobuf' 'libseccomp' 'bpf' 'libbpf')
makedepends=('git' 'python' 'meson' 'clang' 'llvm' 'llvm-libs' 'rust')
backup=('etc/default/scx')
source=("git+https://github.com/sched-ext/scx"
        '0001-meson-install-scx_mitosis-and-scx_wd40.patch'
        '0002-scx_loader-Add-missing-schedulers.patch')
sha256sums=('SKIP'
            'fa223cb6dba293436585b29e609e769c0a070847e38b0d4825a4b650cece6808'
            '9dcc935a394969e6a7b679264965d310d54fcabe2d518b21ac44388fbfdfac62')
options=(!lto)
provides=("scx-scheds" "scxctl")
conflicts=("scx-scheds" "scxctl")

_backports=(
258ea6454e068ed555c4e88703b2cf7967931f7a # scx_flash: Clarify --local-pcpu implementation
67f67e801d2dbe640e18ffaa2d8c96ad0bb238a5 # scx_flash: Soften primary domain affinity to favor full-idle SMT cores
a5265cd96b3f2f01cd2b882f087cc42e56e5aad5 # scx_flash: Smooth target performance level
afdfa8325be1cd3c3b460a5ec65016d0e7f0b094 # scx_flash: Get rid of optional DSQs
2e559cd5daea63ea66fbe164d32e5f7857d41f0f # scx_flash: Introduce --sticky-cpu
362e3ded78ad39e7b6516364a27ac598298768e8 # scx_flash: Use per-CPU DSQs in function of CPU utilization
56ca82240214cff944d1a0c95afce4e2820c0cec # scx_flash: Simplify nvcsw evaluation
aa827f1801becdd9243096229748bcb78d7515ec # scx_flash: Re-enable voluntary context switch prioritization by default
156acfeffd53b747f570b655e180c194ff8f73c1 # scx_flash: Introduce --cpu-busy-thresh
897d5ece152767716f7c3db225a9852e9d3d119f # scx_flash: Tune default options for latency
91d3502d2b4767002b37475ba07129aad7be378f # scx_loader: Update performance profiles for scx_flash
)

_reverts=(
)

pkgver() {
  cd $_gitname
  # git describe
  git describe --long --tags | sed 's/^v//;s/\([^-]*-g\)/r\1/;s/-/./g'
  # alternative
  # _ver="$(cat meson.build | grep -m1 version: | cut -d "'" -f2 | tr - .)"
  # echo "${_ver}.r$(git rev-list --count HEAD).g$(git rev-parse --short HEAD)"
}

prepare() {
 cd $_gitname

 local _c _l
  for _c in "${_backports[@]}"; do
    if [[ "${_c}" == *..* ]]; then _l='--reverse'; else _l='--max-count=1'; fi
    git log --oneline "${_l}" "${_c}"
    git cherry-pick --mainline 1 --no-commit "${_c}"
  done
  for _c in "${_reverts[@]}"; do
    if [[ "${_c}" == *..* ]]; then _l='--reverse'; else _l='--max-count=1'; fi
    git log --oneline "${_l}" "${_c}"
    git revert --mainline 1 --no-commit "${_c}"
  done

  local src
  for src in "${source[@]}"; do
    src="${src%%::*}"
    src="${src##*/}"
    [[ $src = *.patch ]] || continue
    echo "Applying patch $src..."
    patch -Np1 < "../$src"
  done
}

build() {
  cd $_gitname
  arch-meson . build -D openrc=disabled \
    -D libbpf_a=disabled \
    -D bpftool=disabled \
    -D b_lto=true \
    -D b_lto_mode=thin \
    -D cargo_home="$srcdir"/scx
  meson compile -C build
}

package() {
  cd $_gitname
  meson install -C build --destdir "${pkgdir}"
}
