# Maintainer: Peter Jung ptr1337 <admin@ptr1337.dev>
# Maintainer: Piotr GÃ³rski <lucjan.lucjanov@gmail.com>

pkgname=scx-scheds-git
_gitname=scx
pkgver=1.0.13.r318.g5f8a603a
pkgrel=1
pkgdesc='sched_ext schedulers and tools'
arch=('x86_64')
url="https://github.com/sched-ext/scx"
license=('GPL-2.0-only')
depends=('libelf' 'zlib' 'jq' 'protobuf' 'libseccomp' 'bpf' 'libbpf')
makedepends=('git' 'python' 'meson' 'clang' 'llvm' 'llvm-libs' 'rust')
backup=('etc/default/scx')
source=("git+https://github.com/sched-ext/scx"
        '0001-meson-install-scx_mitosis-and-scx_wd40.patch'
        '0002-scx_loader-Add-missing-schedulers.patch')
sha256sums=('SKIP'
            '9279b264b4672256ff44de831cf0e494a86889afbcd38fdde204846c30a95850'
            '275cbf24bb79a35dede7bfec5f2bc7adf4e38d12cc15e18d90e59509fa39583f')
options=(!lto)
provides=("scx-scheds" "scxctl")
conflicts=("scx-scheds" "scxctl")

_backports=(
179bb1b3d3f03757959ca502355408fc86a648da # scx_flash: Smooth target performance level
02c9f1a2b725d9e5bfaa4b5a845d372af774b89d # scx_flash: Get rid of optional DSQs
d97bad870919fdce01c7ce4ce05fcb09dc9f01c7 # scx_flash: Introduce --sticky-cpu
95a16acf21ee70a2fc97d438b2049af624d2b7ff # scx_flash: Use per-CPU DSQs in function of CPU utilization
2fc634e4371ca8091d9d5e737c3dc05a2c3d0447 # scx_flash: Introduce --cpu-busy-thresh
46ec0d604187655e0360b125dadf7b1ae7a21c2d # scx_flash: Simplify nvcsw evaluation
95589ce1ccbedfc19af812557e0178dabcca36ed # scx_flash: Re-enable voluntary context switch prioritization by default
e404b9690bbeb61a400d332bd0dc8a71964be55d # scx_flash: Tune default options for latency
e3309b5071a610161c9f6f6a57e3cda834544f68 # scx_loader: Update performance profiles for scx_flash
)

_reverts=(
)

pkgver() {
  cd $_gitname
  # git describe
  git describe --long --tags | sed 's/^v//;s/\([^-]*-g\)/r\1/;s/-/./g'
  # alternative
  # _ver="$(cat meson.build | grep -m1 version: | cut -d "'" -f2 | tr - .)"
  # echo "${_ver}.r$(git rev-list --count HEAD).g$(git rev-parse --short HEAD)"
}

prepare() {
 cd $_gitname

 local _c _l
  for _c in "${_backports[@]}"; do
    if [[ "${_c}" == *..* ]]; then _l='--reverse'; else _l='--max-count=1'; fi
    git log --oneline "${_l}" "${_c}"
    git cherry-pick --mainline 1 --no-commit "${_c}"
  done
  for _c in "${_reverts[@]}"; do
    if [[ "${_c}" == *..* ]]; then _l='--reverse'; else _l='--max-count=1'; fi
    git log --oneline "${_l}" "${_c}"
    git revert --mainline 1 --no-commit "${_c}"
  done

  local src
  for src in "${source[@]}"; do
    src="${src%%::*}"
    src="${src##*/}"
    [[ $src = *.patch ]] || continue
    echo "Applying patch $src..."
    patch -Np1 < "../$src"
  done
}

build() {
  cd $_gitname
  arch-meson . build -D openrc=disabled \
    -D libbpf_a=disabled \
    -D bpftool=disabled \
    -D b_lto=true \
    -D b_lto_mode=thin \
    -D cargo_home="$srcdir"/scx
  meson compile -C build
}

package() {
  cd $_gitname
  meson install -C build --destdir "${pkgdir}"
}
