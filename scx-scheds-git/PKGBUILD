# Maintainer: Peter Jung ptr1337 <admin@ptr1337.dev>
# Maintainer: Piotr GÃ³rski <lucjan.lucjanov@gmail.com>

pkgname=scx-scheds-git
_gitname=scx
pkgver=1.0.15.r320.gaa0e50a3
pkgrel=2
pkgdesc='sched_ext schedulers and tools'
arch=('x86_64')
url="https://github.com/sched-ext/scx"
license=('GPL-2.0-only')
depends=(
  jq
  libseccomp
  libelf
  zlib
)
makedepends=(
  clang
  git
  llvm
  llvm-libs
  python
  rust
)
source=("git+https://github.com/sched-ext/scx")
sha256sums=('SKIP')
options=(!lto)
provides=("scx-scheds" "scxctl")
conflicts=("scx-scheds" "scxctl")

_backports=(
13d00a0c13aa5956fa7b6818bc5f9e07996f1db6 # scx_loader: Add chaos scheduler
b91a1900581160e20c4460ff4eba1aad54f18ff7 # scx_loader: Add mitosis scheduler
6039a813b4e41f23cedeb64275da3d3d0af989a9 # scx_loader: Add wd40 scheduler
4dbe9f7df9ae4bf38c685630bde11b809ee75d9b # scxctl: cache DBUS results to eliminate redundant calls
92807ee5c1958aa948e9f6ad22fad8dc1a58ae9c # scxctl: optimize scheduler list display with iterator patterns
9fa51cd2b3c37ddb190751f5c514802f39bd0ff3 # scxctl: use &str parameters for string utility functions
1fc732ba6aa1d86e80f10b7d93c25915bfa4e4e6 # scxctl: replace unwrap() calls with proper error handling
747326bbb8b72d1dfe5467fc0f2e052744f35bd9 # scxctl: extract helper functions to reduce duplication
a74f0c946514d747d562fd66e92d30a78b9c02ba # scxctl: simplify string processing utility functions
c9a43ce52ab9d446bdc2ae9fce17021f6e80e075 # scxctl: some Rust formatting changes to satisfy the CI
)

_reverts=(
)

pkgver() {
  cd $_gitname
  git describe --long --tags | sed 's/^v//;s/\([^-]*-g\)/r\1/;s/-/./g'
}

prepare() {
  cd $_gitname

  local _c _l
   for _c in "${_backports[@]}"; do
     if [[ "${_c}" == *..* ]]; then _l='--reverse'; else _l='--max-count=1'; fi
     git log --oneline "${_l}" "${_c}"
     git cherry-pick --mainline 1 --no-commit "${_c}"
   done
   for _c in "${_reverts[@]}"; do
     if [[ "${_c}" == *..* ]]; then _l='--reverse'; else _l='--max-count=1'; fi
     git log --oneline "${_l}" "${_c}"
     git revert --mainline 1 --no-commit "${_c}"
   done

   local src
   for src in "${source[@]}"; do
     src="${src%%::*}"
     src="${src##*/}"
     [[ $src = *.patch ]] || continue
     echo "Applying patch $src..."
     patch -Np1 < "../$src"
   done

   cargo fetch --locked --target "$(rustc -vV | sed -n 's/host: //p')"
}

build() {
  cd $_gitname
  export CARGO_TARGET_DIR=target
  cargo build \
     --release \
     --workspace \
     --locked \
     --frozen \
     --exclude vmlinux_docify \
     --exclude scx_lib_selftests
}

# Only for stable releases. Compilation time increases twice
#check() {
#  cd $_gitname
#  cargo test \
#     --workspace \
#     --locked \
#     --frozen \
#     --exclude vmlinux_docify \
#     --exclude scx_lib_selftests
#}

package() {
  cd $_gitname

  # binary files
  find target/release -maxdepth 1 -type f -executable ! -name '*.so' \
    -exec install -Dm755 -t "$pkgdir/usr/bin/" {} +

  # systemd service
  install -Dm644 services/systemd/scx_loader.service \
    "$pkgdir/usr/lib/systemd/system/scx_loader.service"

  # dbus services
  install -Dm644 services/systemd/org.scx.Loader.service\
    "$pkgdir/usr/share/dbus-1/system-services/org.scx.Loader.service"

  # dbus config
  install -Dm644 tools/scx_loader/org.scx.Loader.conf \
    "$pkgdir/usr/share/dbus-1/system.d/org.scx.Loader.conf"

  # scx_loader config
  install -Dm644 services/scx_loader.toml \
    "$pkgdir/usr/share/scx_loader/config.toml"
}
