# Maintainer: Peter Jung ptr1337 <admin@ptr1337.dev>
# Maintainer: Piotr GÃ³rski <lucjan.lucjanov@gmail.com>

pkgname=scx-scheds-git
_gitname=scx
pkgver=1.0.12.r242.g3d049639
pkgrel=2
pkgdesc='sched_ext schedulers and tools'
arch=('x86_64')
url="https://github.com/sched-ext/scx"
license=('GPL-2.0-only')
depends=('libelf' 'zlib' 'jq' 'protobuf' 'libseccomp' 'bpf' 'libbpf')
makedepends=('git' 'python' 'meson' 'clang' 'llvm' 'llvm-libs' 'rust')
backup=('etc/default/scx')
source=("git+https://github.com/sched-ext/scx")
sha256sums=('SKIP')
options=(!lto)
provides=("scx-scheds" "scxctl")
conflicts=("scx-scheds" "scxctl")

_backports=(
62c606b6d1d9224797497aba43d72f5587aa0f4b # scx_rustland_core: Drop cpumask generation counter
345cf5199a6ff10e91eac2b9d21beb89d3f0a476 # scx_rustland_core: Expose nr_cpus_allowed to user-space
9aad2ad1874f77fc4af7d9f2e85502e951387c76 # scx_rustland: Introduce --percpu-local
cc27383b8cbb390916bab4b9e4d9781055640c30 # scx_rustland_core: Disable huge pages for the user-space scheduler
d9b3f679b41ea02832d825b87f2e135ba5828acd # scx_rustland_core: Idle CPU selection policy refactoring
d8a335c1fef507479cfa71a6f7280c3a95ee5335 # scx_rustland_core: Resume usage of per-CPU DSQs
ee77368d5ac7140e41431a8435aeec982558f005 # scx_rustland_core: Refactor dispatch_task()
3e2864ddfb85404da3728641712a3f6a2196ff3e # scx_rustland_core: Coding style fixes
b4b7cded8853e98e39f80de3c94b67e61ae03fe6 # scx_rustland_core: Use RingBuffer:consume_raw_n()
)

_reverts=(
)

pkgver() {
  cd $_gitname
  # git describe
  git describe --long --tags | sed 's/^v//;s/\([^-]*-g\)/r\1/;s/-/./g'
  # alternative
  # _ver="$(cat meson.build | grep -m1 version: | cut -d "'" -f2 | tr - .)"
  # echo "${_ver}.r$(git rev-list --count HEAD).g$(git rev-parse --short HEAD)"
}

prepare() {
 cd $_gitname

 local _c _l
  for _c in "${_backports[@]}"; do
    if [[ "${_c}" == *..* ]]; then _l='--reverse'; else _l='--max-count=1'; fi
    git log --oneline "${_l}" "${_c}"
    git cherry-pick --mainline 1 --no-commit "${_c}"
  done
  for _c in "${_reverts[@]}"; do
    if [[ "${_c}" == *..* ]]; then _l='--reverse'; else _l='--max-count=1'; fi
    git log --oneline "${_l}" "${_c}"
    git revert --mainline 1 --no-commit "${_c}"
  done

  local src
  for src in "${source[@]}"; do
    src="${src%%::*}"
    src="${src##*/}"
    [[ $src = *.patch ]] || continue
    echo "Applying patch $src..."
    patch -Np1 < "../$src"
  done
}

build() {
  cd $_gitname
  arch-meson . build -D openrc=disabled \
    -D libbpf_a=disabled \
    -D bpftool=disabled \
    -D b_lto=true \
    -D b_lto_mode=thin \
    -D cargo_home="$srcdir"/scx
  meson compile -C build
}

package() {
  cd $_gitname
  meson install -C build --destdir "${pkgdir}"
}
