# Maintainer: Peter Jung ptr1337 <admin@ptr1337.dev>
# Maintainer: Piotr GÃ³rski <lucjan.lucjanov@gmail.com>

pkgname=scx-scheds-git
_gitname=scx
pkgver=1.0.11.r55.g76e04cde
pkgrel=2
pkgdesc='sched_ext schedulers and tools'
arch=('x86_64')
url="https://github.com/sched-ext/scx"
license=('GPL-2.0-only')
depends=('libelf' 'zlib' 'jq')
makedepends=('git' 'python' 'meson' 'clang' 'llvm' 'llvm-libs' 'rust')
backup=('etc/default/scx')
source=("git+https://github.com/sched-ext/scx"
        '0001-meson-install-scx_wd40.patch'
        '0002-scx_loader-Add-chaos-scheduler.patch')
sha256sums=('SKIP'
            '5f30136e7f668d59be514ee2f1770b389572d8824d04f60bee8e0d644d302e4b'
            '6650af78947eb097546c8e1b6549cf4f917049996e9f0f69dc65d3ddaae68568')
options=(!lto)
provides=("scx-scheds" "scxctl")
conflicts=("scx-scheds" "scxctl")

_backports=(
2dfc5d9702b4d35315e7b7dd138b6425e1c7032d # scx_bpfland: Normalize task weight
520c330c19fbd9ce629ddbac30001be17c630518 # scx_p2dq: Refactor load balancing
5047119c4535eeb258cad479458fbe83675ef06d # scx_lavd: Remove @p from calc_time_slice().
25e13db6ec890c09694e0328b1dc8f890c5b7f83 # scx_lavd: Calculate the base time slice once every state is updated.
8d02d4030b77386e4b93bd8c6871ecdf197ccc5c # scx_lavd: Further prioritize kworkers.
282f9d8fdb84792c35ec01035cb8c4f157d0140f # scx_lavd: Relax the atomic visibility of sys_stat.
791b5b1e7f52e7c3cc8688aefa2f25fc32b65001 # scx_lavd: Early reject preemption effort.
75d98d2c5211e3f7ee572cd60579983d2aa3d634 # scx_lavd: Optimize switching to the performance mode.
8ae7a09738a57a44abb0605badda9b370686a97c # scx_lavd: Try to yield only for non-latency-critical tasks.
)

_reverts=(
)

pkgver() {
  cd $_gitname
  # git describe
  git describe --long --tags | sed 's/^v//;s/\([^-]*-g\)/r\1/;s/-/./g'
  # alternative
  # _ver="$(cat meson.build | grep -m1 version: | cut -d "'" -f2 | tr - .)"
  # echo "${_ver}.r$(git rev-list --count HEAD).g$(git rev-parse --short HEAD)"
}

prepare() {
 cd $_gitname

 local _c _l
  for _c in "${_backports[@]}"; do
    if [[ "${_c}" == *..* ]]; then _l='--reverse'; else _l='--max-count=1'; fi
    git log --oneline "${_l}" "${_c}"
    git cherry-pick --mainline 1 --no-commit "${_c}"
  done
  for _c in "${_reverts[@]}"; do
    if [[ "${_c}" == *..* ]]; then _l='--reverse'; else _l='--max-count=1'; fi
    git log --oneline "${_l}" "${_c}"
    git revert --mainline 1 --no-commit "${_c}"
  done

  local src
  for src in "${source[@]}"; do
    src="${src%%::*}"
    src="${src##*/}"
    [[ $src = *.patch ]] || continue
    echo "Applying patch $src..."
    patch -Np1 < "../$src"
  done
}

build() {
  cd $_gitname
  arch-meson . build -D openrc=disabled -D cargo_home="$srcdir"/scx
  meson compile -C build
}

package() {
  cd $_gitname
  meson install -C build --destdir "${pkgdir}"
}
