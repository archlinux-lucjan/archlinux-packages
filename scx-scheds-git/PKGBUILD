# Maintainer: Peter Jung ptr1337 <admin@ptr1337.dev>
# Maintainer: Piotr GÃ³rski <lucjan.lucjanov@gmail.com>

pkgname=scx-scheds-git
_gitname=scx
pkgver=1.0.5.r67.g2077b9a
pkgrel=1
pkgdesc='sched_ext schedulers and tools'
arch=('x86_64')
url="https://github.com/sched-ext/scx"
license=('GPL-2.0-only')
depends=('libelf' 'zlib' 'jq')
makedepends=('git' 'python' 'meson' 'clang' 'llvm' 'llvm-libs' 'rust')
backup=('etc/default/scx')
source=("git+https://github.com/sched-ext/scx")
sha256sums=('SKIP')
options=(!lto)
provides=("scx-scheds")
conflicts=("scx-scheds")

_backports=(
4bd3bbcb10e83a0e67aa95af2300af0fd4e35db2 # scx_bpfland: prevent per-CPU DSQ stall with per-CPU kthreads
bff2ed5e87a8c462a401fe504b54b6da43910bb2 # scheds: introduce scx_fair
b9d44ca0dc8d3c719fb556fc9b18e6cf950d43b1 # scx_fair: introduce lowlatency mode
ea7a6481d593cac61d638026a6e67a4618f56d30 # scx_fair: use cast_mask() from common.bpf.h
9b28183f8b850f7d25f95bd54ae14dbae376f6e8 # scx_fair: always give tasks a chance to run on an idle CPU
fd73b4988ff8251a8ebde82502ca6a3e2d466766 # scx_fair: introduce per-CPU DSQs
95321f6f45a28b36e3149c4aa92a312c1b31f0a8 # scx_fair: apply minimum vruntime when task is dispatched
fea05f31c6455decb094cc68558fe5c7c45c814b # scx_fair: do not scale the assigned time slice based on task priority
4942726ecb8b4749584e2d24b1cc341cf23dabd4 # scx_fair: make lowlatency default and drop it as an option
3417aa2a846e3ecdac353c232679b5bb7d22b094 # scx_fair: prevent per-CPU DSQ stall with per-CPU kthreads
)

_reverts=(
)

pkgver() {
  cd $_gitname
  # git describe
  git describe --long --tags | sed 's/^v//;s/\([^-]*-g\)/r\1/;s/-/./g'
  # alternative
  # _ver="$(cat meson.build | grep -m1 version: | cut -d "'" -f2 | tr - .)"
  # echo "${_ver}.r$(git rev-list --count HEAD).g$(git rev-parse --short HEAD)"
}

prepare() {
 cd $_gitname

 local _c _l
  for _c in "${_backports[@]}"; do
    if [[ "${_c}" == *..* ]]; then _l='--reverse'; else _l='--max-count=1'; fi
    git log --oneline "${_l}" "${_c}"
    git cherry-pick --mainline 1 --no-commit "${_c}"
  done
  for _c in "${_reverts[@]}"; do
    if [[ "${_c}" == *..* ]]; then _l='--reverse'; else _l='--max-count=1'; fi
    git log --oneline "${_l}" "${_c}"
    git revert --mainline 1 --no-commit "${_c}"
  done

  local src
  for src in "${source[@]}"; do
    src="${src%%::*}"
    src="${src##*/}"
    [[ $src = *.patch ]] || continue
    echo "Applying patch $src..."
    patch -Np1 < "../$src"
  done
}

build() {
  cd $_gitname
  arch-meson . build -D openrc=disabled
  meson compile -C build
}

package() {
  cd $_gitname
  meson install -C build --destdir "${pkgdir}"
}
