# Maintainer: Peter Jung ptr1337 <admin@ptr1337.dev>
# Maintainer: Piotr GÃ³rski <lucjan.lucjanov@gmail.com>

pkgname=scx-scheds-git
gitname=scx
pkgver=0.1.10.r190.ga72c905
pkgrel=14
pkgdesc="sched_ext schedulers"
arch=('x86_64')
url="https://github.com/sched-ext/scx"
license=('GPL-2.0-only')
depends=('libelf' 'zlib' 'jq')
makedepends=('git' 'python' 'meson' 'clang' 'llvm' 'llvm-libs' 'rust')
backup=('etc/default/scx' 'etc/systemd/journald@sched-ext.conf')
source=("git+https://github.com/sched-ext/scx")
sha256sums=('SKIP')
options=(!lto)
provides=("scx-scheds")
conflicts=("scx-scheds")

_backports=(
d440b1819f9f72da397b51b7f23af0b977b0dc60 # scx-scheds: Add After=graphical.target into service (third attempt)
c8a60e2566c6387aeed27190feb9764023035dbf # libalpm: make sure that symlink will be moved
f64cdd1a5152a4c0db0a15acd14024d74b845e11 # sched_utils: Add log recorder format customization
d2231b0aedd46422fd512f9f2ceb2705db219a7a # scx_bpfland: drop built-in idle CPU selection logic
e8a4d350adff23508a99131f5472efe937df394d # scx_bpfland: unify dispatching kthreads with direct CPU dispatches
7d15e3171c17dc0a8c813864da395b2ccc1ca735 # scx_bpfland: ensure task time slice never exceeds the slice_ns limit
cef6ca93cff435d97bd0ea48abbcacd2dd18da4c # scx_bpfland: adjust default time slice to 5ms
9e0db4ae17d8ce4ce86c205728d3ad6271977a6f # scx_bpfland: remove unnecessary RCU read protection
cfe2ed063d48dc5e66b4d62cf303f284511d949d # scx_bpfland: time-based starvation prevention
e93d8c3896b9fa27a80938275f074d3593e521a9 # scx_bpfland: optimize idle CPU selection when system is busy
a193a08499524c8bf0a354ebb27e576f8973a31f # scx_bpfland: introduce unbounded tasks
e52d34a8bc6a8c181b37fffe6a09f59cd14a4b8a # scx_bpfland: format output in a more human-readable way
)

_reverts=(
)

pkgver() {
  cd $gitname
  git describe --long --tags | sed 's/^v//;s/\([^-]*-g\)/r\1/;s/-/./g'
}

prepare() {
 cd $gitname

 local _c _l
  for _c in "${_backports[@]}"; do
    if [[ "${_c}" == *..* ]]; then _l='--reverse'; else _l='--max-count=1'; fi
    git log --oneline "${_l}" "${_c}"
    git cherry-pick --mainline 1 --no-commit "${_c}"
  done
  for _c in "${_reverts[@]}"; do
    if [[ "${_c}" == *..* ]]; then _l='--reverse'; else _l='--max-count=1'; fi
    git log --oneline "${_l}" "${_c}"
    git revert --mainline 1 --no-commit "${_c}"
  done

  local src
  for src in "${source[@]}"; do
    src="${src%%::*}"
    src="${src##*/}"
    [[ $src = *.patch ]] || continue
    echo "Applying patch $src..."
    patch -Np1 < "../$src"
  done
}

build() {
  cd $gitname
  arch-meson . build -D openrc=disabled
  meson compile -C build
}

package() {
  cd $gitname
  meson install -C build --destdir "${pkgdir}"
  install -Dm644 "LICENSE" "${pkgdir}/usr/share/licenses/$pkgname/LICENSE"
}
