# Maintainer: Peter Jung ptr1337 <admin@ptr1337.dev>
# Maintainer: Piotr GÃ³rski <lucjan.lucjanov@gmail.com>

pkgname=scx-scheds-git
_gitname=scx
pkgver=1.0.15.r201.g7f2ec812
pkgrel=1
pkgdesc='sched_ext schedulers and tools'
arch=('x86_64')
url="https://github.com/sched-ext/scx"
license=('GPL-2.0-only')
depends=('libelf' 'zlib' 'jq' 'protobuf' 'libseccomp' 'bpf' 'libbpf')
makedepends=('git' 'python' 'meson' 'clang' 'llvm' 'llvm-libs' 'rust')
backup=('etc/default/scx')
source=("git+https://github.com/sched-ext/scx")
sha256sums=('SKIP')
options=(!lto)
provides=("scx-scheds" "scxctl")
conflicts=("scx-scheds" "scxctl")

_backports=(
33fe75af6f78a2d69095d6f286f197addcf709fa # scx_loader: Add chaos scheduler
9a0d490776ca33c3d328701ba86a395bd1eea11a # meson: install scx_mitosis and scx_wd40
0de9efb24243afc4faf0845852906a01a1e013ad # scx_loader: Add mitosis scheduler
24a8f88a639b3430e93f635db951242cac50fa26 # scx_loader: Add wd40 scheduler
252233214f754d9940a6f4be332cf4a5007002a7 # scxctl: cache DBUS results to eliminate redundant calls
4dbf365685d42bc1774cb37e7e28efaf433b640a # scxctl: optimize scheduler list display with iterator patterns
e66fec655c0ff1c0bc4b54ccdfe1a3082c4137ac # scxctl: use &str parameters for string utility functions
caa42102b965d12ff3c09f53c5b195000dd5d199 # scxctl: replace unwrap() calls with proper error handling
a3a36e9986b1f9e4274f089137dc3a3e35176a78 # scxctl: extract helper functions to reduce duplication
3740640fb64bbd8ff48dab60445d05934731b697 # scxctl: simplify string processing utility functions
2ed451d7dd7c441a22b73819016206b82e3dcaf4 # scxctl: some Rust formatting changes to satisfy the CI
)

_reverts=(
)

pkgver() {
  cd $_gitname
  # git describe
  git describe --long --tags | sed 's/^v//;s/\([^-]*-g\)/r\1/;s/-/./g'
  # alternative
  # _ver="$(cat meson.build | grep -m1 version: | cut -d "'" -f2 | tr - .)"
  # echo "${_ver}.r$(git rev-list --count HEAD).g$(git rev-parse --short HEAD)"
}

prepare() {
 cd $_gitname

 local _c _l
  for _c in "${_backports[@]}"; do
    if [[ "${_c}" == *..* ]]; then _l='--reverse'; else _l='--max-count=1'; fi
    git log --oneline "${_l}" "${_c}"
    git cherry-pick --mainline 1 --no-commit "${_c}"
  done
  for _c in "${_reverts[@]}"; do
    if [[ "${_c}" == *..* ]]; then _l='--reverse'; else _l='--max-count=1'; fi
    git log --oneline "${_l}" "${_c}"
    git revert --mainline 1 --no-commit "${_c}"
  done

  local src
  for src in "${source[@]}"; do
    src="${src%%::*}"
    src="${src##*/}"
    [[ $src = *.patch ]] || continue
    echo "Applying patch $src..."
    patch -Np1 < "../$src"
  done
}

build() {
  cd $_gitname
  arch-meson . build -D openrc=disabled \
    -D libbpf_a=disabled \
    -D bpftool=disabled \
    -D b_lto=true \
    -D b_lto_mode=thin \
    -D cargo_home="$srcdir"/scx
  meson compile -C build
}

package() {
  cd $_gitname
  meson install -C build --destdir "${pkgdir}"
}
