# Maintainer: Peter Jung ptr1337 <admin@ptr1337.dev>
# Maintainer: Piotr GÃ³rski <lucjan.lucjanov@gmail.com>

pkgname=scx-scheds-git
_gitname=scx
pkgver=1.0.5.r295.gfae5396
pkgrel=1
pkgdesc='sched_ext schedulers and tools'
arch=('x86_64')
url="https://github.com/sched-ext/scx"
license=('GPL-2.0-only')
depends=('libelf' 'zlib' 'jq')
makedepends=('git' 'python' 'meson' 'clang' 'llvm' 'llvm-libs' 'rust')
backup=('etc/default/scx')
source=("git+https://github.com/sched-ext/scx")
sha256sums=('SKIP')
options=(!lto)
provides=("scx-scheds")
conflicts=("scx-scheds")

_backports=(
6059aab775429b8952d6afc37261a220a26e7c87 # scheds: introduce scx_fair
26357c622ed9954cbd7e64298258485fba3e5b28 # scx_fair: use blocker/waker metrics to determine the latency weight
c95fbac2d1151b1f99b56623293578c65562715b # scx_bpfland: drop lowlatency mode
dd558206b66e0af0b0636aa014e2887fa2d6087d # scx_bpfland: do not overly prioritize WAKE_SYNC tasks
47bbaedb2f7231ffc5cfc6daa5cb966bcc4a3dbe # scx_bpfland: consider all tasks as regular if priority DSQ is congested
1d3780aeb9942286233289db798ba8ac8d9e461d # WIP: scx_bpfland: strict domain affinity
796d3245557f48fb08c52b950fc7bbe939fdecac # scx_lavd: improve readabilty
517ef8944458615cbb63b49459b5f69897f134f3 # scx_lavd: drop all kernel lock tracing
)

_reverts=(
)

pkgver() {
  cd $_gitname
  # git describe
  git describe --long --tags | sed 's/^v//;s/\([^-]*-g\)/r\1/;s/-/./g'
  # alternative
  # _ver="$(cat meson.build | grep -m1 version: | cut -d "'" -f2 | tr - .)"
  # echo "${_ver}.r$(git rev-list --count HEAD).g$(git rev-parse --short HEAD)"
}

prepare() {
 cd $_gitname

 local _c _l
  for _c in "${_backports[@]}"; do
    if [[ "${_c}" == *..* ]]; then _l='--reverse'; else _l='--max-count=1'; fi
    git log --oneline "${_l}" "${_c}"
    git cherry-pick --mainline 1 --no-commit "${_c}"
  done
  for _c in "${_reverts[@]}"; do
    if [[ "${_c}" == *..* ]]; then _l='--reverse'; else _l='--max-count=1'; fi
    git log --oneline "${_l}" "${_c}"
    git revert --mainline 1 --no-commit "${_c}"
  done

  local src
  for src in "${source[@]}"; do
    src="${src%%::*}"
    src="${src##*/}"
    [[ $src = *.patch ]] || continue
    echo "Applying patch $src..."
    patch -Np1 < "../$src"
  done
}

build() {
  cd $_gitname
  arch-meson . build -D openrc=disabled
  meson compile -C build
}

package() {
  cd $_gitname
  meson install -C build --destdir "${pkgdir}"
}
