# Maintainer: Peter Jung ptr1337 <admin@ptr1337.dev>
# Maintainer: Piotr GÃ³rski <lucjan.lucjanov@gmail.com>

pkgname=scx-scheds-git
_gitname=scx
pkgver=1.0.11.r83.gd6db7818
pkgrel=6
pkgdesc='sched_ext schedulers and tools'
arch=('x86_64')
url="https://github.com/sched-ext/scx"
license=('GPL-2.0-only')
depends=('libelf' 'zlib' 'jq')
makedepends=('git' 'python' 'meson' 'clang' 'llvm' 'llvm-libs' 'rust')
backup=('etc/default/scx')
source=("git+https://github.com/sched-ext/scx"
        '0001-meson-install-scx_wd40.patch'
        '0002-scx_loader-Add-chaos-scheduler.patch')
sha256sums=('SKIP'
            '5f30136e7f668d59be514ee2f1770b389572d8824d04f60bee8e0d644d302e4b'
            '6650af78947eb097546c8e1b6549cf4f917049996e9f0f69dc65d3ddaae68568')
options=(!lto)
provides=("scx-scheds" "scxctl")
conflicts=("scx-scheds" "scxctl")

_backports=(
cc76100db4264e469ecea274114a5d00b326f46f # scx_bpfland: Rework preemption behavior
0cdb5fb6c572ec4b425c0aacfdb0060635625f61 # lib: remove unused include/ directory
4e14d3eadb1c108881b85688bfd3c29a09360dca # scx_rusty: copy allocator header into local code
f78591e1bef9f6c621d95fad3c28fe21bd3b74fb # lib/sdt_alloc: rename sdt_static_* functions to scx_static_*
69461a74aa5ba206b2706160488999ea0154cd43 # lib/sdt_alloc: rename sdt_alloc_* functions to scx_alloc_*
2816410c001984946c4727ca8c32dc733e404887 # lib/sdt_task: rename sdt_task_* functions to sdt_*
defe57cf96b4c92128323ef26cdb61045be86942 # lib/sdt_alloc: remove (unused, always_inline) attributes
4394c57cdf96dd46f6ae60e55b9f7491a51be8b1 # lib/sdt_alloc: remove sdt_* prefix from arena-related helper
e583f96a3d769472458cba8e72fa3b36e1fafb40 # lib/sdt_alloc: remove sdt_* prefix from internal variables/functions
)

_reverts=(
131828a04ada00d5a8da527398dbe607d8e63cc3 # include/scx: Bump _Q_MAX_CPUs for arena spinlocks
)

pkgver() {
  cd $_gitname
  # git describe
  git describe --long --tags | sed 's/^v//;s/\([^-]*-g\)/r\1/;s/-/./g'
  # alternative
  # _ver="$(cat meson.build | grep -m1 version: | cut -d "'" -f2 | tr - .)"
  # echo "${_ver}.r$(git rev-list --count HEAD).g$(git rev-parse --short HEAD)"
}

prepare() {
 cd $_gitname

 local _c _l
  for _c in "${_backports[@]}"; do
    if [[ "${_c}" == *..* ]]; then _l='--reverse'; else _l='--max-count=1'; fi
    git log --oneline "${_l}" "${_c}"
    git cherry-pick --mainline 1 --no-commit "${_c}"
  done
  for _c in "${_reverts[@]}"; do
    if [[ "${_c}" == *..* ]]; then _l='--reverse'; else _l='--max-count=1'; fi
    git log --oneline "${_l}" "${_c}"
    git revert --mainline 1 --no-commit "${_c}"
  done

  local src
  for src in "${source[@]}"; do
    src="${src%%::*}"
    src="${src##*/}"
    [[ $src = *.patch ]] || continue
    echo "Applying patch $src..."
    patch -Np1 < "../$src"
  done
}

build() {
  cd $_gitname
  arch-meson . build -D openrc=disabled -D cargo_home="$srcdir"/scx
  meson compile -C build
}

package() {
  cd $_gitname
  meson install -C build --destdir "${pkgdir}"
}
