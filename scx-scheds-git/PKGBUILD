# Maintainer: Peter Jung ptr1337 <admin@ptr1337.dev>
# Maintainer: Piotr GÃ³rski <lucjan.lucjanov@gmail.com>

pkgname=scx-scheds-git
_gitname=scx
pkgver=1.0.9.r14.gc01587da
pkgrel=5
pkgdesc='sched_ext schedulers and tools'
arch=('x86_64')
url="https://github.com/sched-ext/scx"
license=('GPL-2.0-only')
depends=('libelf' 'zlib' 'jq')
makedepends=('git' 'python' 'meson' 'clang' 'llvm' 'llvm-libs' 'rust')
backup=('etc/default/scx')
source=("git+https://github.com/sched-ext/scx")
sha256sums=('SKIP')
options=(!lto)
provides=("scx-scheds")
conflicts=("scx-scheds")

_backports=(
232a85a48e58117c1de176d3b228804f4ba639e0 # scheds: introduce scx_vder
cf56d6bb521183a37e31c34d657e5d58d8f0f865 # scx_vder: pcpu DSQ
1245da2e523eaa1286cf447d238a1b75de9d68cc # scx_p2dq: Add scx_p2dq scheduler
95c73c34852aa0a029a02072bd4258abb6b142ff # scripts: Add gen_enum_defs.py
8b2a365f6699ffa5ead2eee2516df376e13d83ab # scx_utils: Add enum_defs.autogen.h
d8b5336cf271402b4cdd5f4c88e41dfba9155ea6 # scx_utils: Include enum_defs.autogen.h
0dcd76fa772e3691e4232328a8e114e3010fc588 # scx_utils: Add __COMPAT_is_enq_cpu_selected() for BPF compatability
0f051e5347703e6fc8d73771bf8af5d96db32f84 # scx_qmap: Use __COMPAT_is_enq_cpu_selected() for BPF compatability
7b1b4152adddc43bc9daf39d6eedd7d7fc6df957 # scx_bpfland: Use __COMPAT_is_enq_cpu_selected() for BPF compatability
1c2dff2407b97e0af52636c559914b95a2fd0316 # scx_lavd: Use __COMPAT_is_enq_cpu_selected() for BPF compatability
)

_reverts=(
)

pkgver() {
  cd $_gitname
  # git describe
  git describe --long --tags | sed 's/^v//;s/\([^-]*-g\)/r\1/;s/-/./g'
  # alternative
  # _ver="$(cat meson.build | grep -m1 version: | cut -d "'" -f2 | tr - .)"
  # echo "${_ver}.r$(git rev-list --count HEAD).g$(git rev-parse --short HEAD)"
}

prepare() {
 cd $_gitname

 local _c _l
  for _c in "${_backports[@]}"; do
    if [[ "${_c}" == *..* ]]; then _l='--reverse'; else _l='--max-count=1'; fi
    git log --oneline "${_l}" "${_c}"
    git cherry-pick --mainline 1 --no-commit "${_c}"
  done
  for _c in "${_reverts[@]}"; do
    if [[ "${_c}" == *..* ]]; then _l='--reverse'; else _l='--max-count=1'; fi
    git log --oneline "${_l}" "${_c}"
    git revert --mainline 1 --no-commit "${_c}"
  done

  local src
  for src in "${source[@]}"; do
    src="${src%%::*}"
    src="${src##*/}"
    [[ $src = *.patch ]] || continue
    echo "Applying patch $src..."
    patch -Np1 < "../$src"
  done
}

build() {
  cd $_gitname
  arch-meson . build -D openrc=disabled -D cargo_home="$srcdir"/scx
  meson compile -C build
}

package() {
  cd $_gitname
  meson install -C build --destdir "${pkgdir}"
}
