# Maintainer: Peter Jung ptr1337 <admin@ptr1337.dev>
# Maintainer: Piotr GÃ³rski <lucjan.lucjanov@gmail.com>

pkgname=scx-scheds-git
_gitname=scx
pkgver=1.0.12.r201.gfd0dd6b4
pkgrel=4
pkgdesc='sched_ext schedulers and tools'
arch=('x86_64')
url="https://github.com/sched-ext/scx"
license=('GPL-2.0-only')
depends=('libelf' 'zlib' 'jq' 'protobuf' 'libseccomp' 'bpf' 'libbpf')
makedepends=('git' 'python' 'meson' 'clang' 'llvm' 'llvm-libs' 'rust')
backup=('etc/default/scx')
source=("git+https://github.com/sched-ext/scx")
sha256sums=('SKIP')
options=(!lto)
provides=("scx-scheds" "scxctl")
conflicts=("scx-scheds" "scxctl")

_backports=(
b10f674d5901fdf239384c59cad67c796fc91bcf # scx_rustland_core: Initialize task dsq_vtime and slice
8d100a3c91f6d12d7f57de530052e10458edf77c # scx_rustland_core: Dispatch per-CPU tasks to their only usable CPU
664f273e400e06ecd7539e73c4bcf79a6b2f0f6d # scx_rustland_core: Avoid sched_setscheduler() in non-partial mode
7dbdb6ac7dc4aff2f8c3dd34105bd8e51cb3ea4d # scx_rustland_core: Use BPF_RB_NO_WAKEUP
f2e5d8b5971584a96ad1939010d67a02ea1b5a37 # scx_rustland_core: Introduce a separate DSQ for the user-space scheduler
ee0a6b91d8dacbe04fd38b04c2b1cdec2960dc49 # scx_rustland_core: Use default built-in idle policy for sync wakeup
af9590c10e978467c19f326f5d4f8c25aaad7e83 # scx_rustland_core: Do not allow per-CPU kthreads to preempt other tasks
cf2a3f514ea5af574ab87cc2f01359521377d030 # scx_rustland_core: Use SCX_LOCAL_DSQ / SCX_LOCAL_DSQ_ON consistently
978d998cf1eb620301add67a18967fa6f350aed1 # scx_rustland_core: Drop cpumask generation counter
17247b5ec33c13d7750e67f660efb358aa6ce1ca # scx_rustland_core: Expose nr_cpus_allowed to user-space
74fa8fda23662d9ee9b3ae70e7c250c799af1982 # scx_rustland: Introduce --percpu-local
b50ad8572f64475289ee37ae58002c2c92da27ea # scx_rustland: Show version info
)

_reverts=(
)

pkgver() {
  cd $_gitname
  # git describe
  git describe --long --tags | sed 's/^v//;s/\([^-]*-g\)/r\1/;s/-/./g'
  # alternative
  # _ver="$(cat meson.build | grep -m1 version: | cut -d "'" -f2 | tr - .)"
  # echo "${_ver}.r$(git rev-list --count HEAD).g$(git rev-parse --short HEAD)"
}

prepare() {
 cd $_gitname

 local _c _l
  for _c in "${_backports[@]}"; do
    if [[ "${_c}" == *..* ]]; then _l='--reverse'; else _l='--max-count=1'; fi
    git log --oneline "${_l}" "${_c}"
    git cherry-pick --mainline 1 --no-commit "${_c}"
  done
  for _c in "${_reverts[@]}"; do
    if [[ "${_c}" == *..* ]]; then _l='--reverse'; else _l='--max-count=1'; fi
    git log --oneline "${_l}" "${_c}"
    git revert --mainline 1 --no-commit "${_c}"
  done

  local src
  for src in "${source[@]}"; do
    src="${src%%::*}"
    src="${src##*/}"
    [[ $src = *.patch ]] || continue
    echo "Applying patch $src..."
    patch -Np1 < "../$src"
  done
}

build() {
  cd $_gitname
  arch-meson . build -D openrc=disabled \
    -D libbpf_a=disabled \
    -D bpftool=disabled \
    -D b_lto=true \
    -D b_lto_mode=thin \
    -D cargo_home="$srcdir"/scx
  meson compile -C build
}

package() {
  cd $_gitname
  meson install -C build --destdir "${pkgdir}"
}
