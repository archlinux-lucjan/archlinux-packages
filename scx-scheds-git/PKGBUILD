# Maintainer: Peter Jung ptr1337 <admin@ptr1337.dev>
# Maintainer: Piotr GÃ³rski <lucjan.lucjanov@gmail.com>

pkgname=scx-scheds-git
_gitname=scx
pkgver=1.0.15.r218.g059ce35c
pkgrel=4
pkgdesc='sched_ext schedulers and tools'
arch=('x86_64')
url="https://github.com/sched-ext/scx"
license=('GPL-2.0-only')
depends=('libelf' 'zlib' 'jq' 'protobuf' 'libseccomp' 'bpf' 'libbpf')
makedepends=('git' 'python' 'meson' 'clang' 'llvm' 'llvm-libs' 'rust')
backup=('etc/default/scx')
source=("git+https://github.com/sched-ext/scx")
sha256sums=('SKIP')
options=(!lto)
provides=("scx-scheds" "scxctl")
conflicts=("scx-scheds" "scxctl")

_backports=(
30a52fe60afe8269773bea69c1efac32a8443d65 # scx_loader: Add chaos scheduler
152f41ebca4dc905dd3099d8ccbb505bf9bcaed5 # meson: install scx_mitosis and scx_wd40
def9e296ef2f4459923b2d025693bd7a28823fdb # scx_loader: Add mitosis scheduler
8bd09ef1a1fc165db61c384ea54fa6d2523b53ea # scx_loader: Add wd40 scheduler
04bc84552893502bb73701f4d0e95dc93d2811ae # scxctl: cache DBUS results to eliminate redundant calls
1847af22f293d6d651651ff3f94a809e1621643c # scxctl: optimize scheduler list display with iterator patterns
12ef099b87043359e39258c57a9c71a7055dcdda # scxctl: use &str parameters for string utility functions
99c8768711b18c25712e6b227b1b7cbf34fb56b6 # scxctl: replace unwrap() calls with proper error handling
83328369fc8673b0ce671bbe824e380e3e10c1e5 # scxctl: extract helper functions to reduce duplication
fd3116a96902fc32c94536dad4c817917be1655d # scxctl: simplify string processing utility functions
5d8c5d3350eff9a9d877108c6c63987b52874bc5 # scxctl: some Rust formatting changes to satisfy the CI
52b3cefc77f987d9e6b15bfb8cb2619602c1b3ef # mitosis: add version info
3b8197399d5e28fb60adf092ebcbec32dc930ebd # scx_mitosis: Add "Unregister" log message
3e99b5b418349d22b0c6208ab5325e8f7866e43e # mitosis: replace layered with mitosis
)

_reverts=(
)

pkgver() {
  cd $_gitname
  # git describe
  git describe --long --tags | sed 's/^v//;s/\([^-]*-g\)/r\1/;s/-/./g'
  # alternative
  # _ver="$(cat meson.build | grep -m1 version: | cut -d "'" -f2 | tr - .)"
  # echo "${_ver}.r$(git rev-list --count HEAD).g$(git rev-parse --short HEAD)"
}

prepare() {
 cd $_gitname

 local _c _l
  for _c in "${_backports[@]}"; do
    if [[ "${_c}" == *..* ]]; then _l='--reverse'; else _l='--max-count=1'; fi
    git log --oneline "${_l}" "${_c}"
    git cherry-pick --mainline 1 --no-commit "${_c}"
  done
  for _c in "${_reverts[@]}"; do
    if [[ "${_c}" == *..* ]]; then _l='--reverse'; else _l='--max-count=1'; fi
    git log --oneline "${_l}" "${_c}"
    git revert --mainline 1 --no-commit "${_c}"
  done

  local src
  for src in "${source[@]}"; do
    src="${src%%::*}"
    src="${src##*/}"
    [[ $src = *.patch ]] || continue
    echo "Applying patch $src..."
    patch -Np1 < "../$src"
  done
}

build() {
  cd $_gitname
  arch-meson . build -D openrc=disabled \
    -D libbpf_a=disabled \
    -D bpftool=disabled \
    -D b_lto=true \
    -D b_lto_mode=thin \
    -D cargo_home="$srcdir"/scx
  meson compile -C build
}

package() {
  cd $_gitname
  meson install -C build --destdir "${pkgdir}"
}
