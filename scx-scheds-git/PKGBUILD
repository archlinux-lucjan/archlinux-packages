# Maintainer: Peter Jung ptr1337 <admin@ptr1337.dev>
# Maintainer: Piotr GÃ³rski <lucjan.lucjanov@gmail.com>

pkgname=scx-scheds-git
_gitname=scx
pkgver=1.0.12.r508.g525209d8
pkgrel=6
pkgdesc='sched_ext schedulers and tools'
arch=('x86_64')
url="https://github.com/sched-ext/scx"
license=('GPL-2.0-only')
depends=('libelf' 'zlib' 'jq' 'protobuf' 'libseccomp' 'bpf' 'libbpf')
makedepends=('git' 'python' 'meson' 'clang' 'llvm' 'llvm-libs' 'rust')
backup=('etc/default/scx')
source=("git+https://github.com/sched-ext/scx"
        '0001-meson-install-scx_wd40.patch'
        '0002-scx_loader-Add-chaos-scheduler.patch')
sha256sums=('SKIP'
            'b2a62369bc36f82a43f8387bc7689d246b62e29e931f244afb7331c9b66fd01a'
            '4247b9f34285cf0fa63a251b4800c253424d752087527055d07f3d333d231d3b')
options=(!lto)
provides=("scx-scheds" "scxctl")
conflicts=("scx-scheds" "scxctl")

_backports=(
2d31ef74814a686b2762cef278b8f295199577f5 # scx_bpfland: Rework sync wakeup logic (again)
e8f64b018bf50d1ff04d49e28d2d7fff32041787 # scx_wd40: update setup_topology_node to match new signature
af119ec13f505f184604cc30132893238baed121 # scx_wd40: print diagnostic using info!()
98a4a8e1042d6832036e8ffdc932912824ad09e5 # scx_wd40: annotate topology nodes with ID
04d2fe05fda1b8c5cadf9954cd4ffcfed3208268 # lib/topology: store topology pointers as u64
80448656ac516b605c4710734db50b9102598eab # scx_wd40: remove cpu_dom_id_map
0ce0c5f4e61afb46d1f559d6d9ca7262f2e30fbb # scx_wd40: attach domains to topology arrays
56820daeef8be6be8f709decc257fd4834c34b2f # lib/topology: fix overly restrictive bounds checking
)

_reverts=(
)

pkgver() {
  cd $_gitname
  # git describe
  git describe --long --tags | sed 's/^v//;s/\([^-]*-g\)/r\1/;s/-/./g'
  # alternative
  # _ver="$(cat meson.build | grep -m1 version: | cut -d "'" -f2 | tr - .)"
  # echo "${_ver}.r$(git rev-list --count HEAD).g$(git rev-parse --short HEAD)"
}

prepare() {
 cd $_gitname

 local _c _l
  for _c in "${_backports[@]}"; do
    if [[ "${_c}" == *..* ]]; then _l='--reverse'; else _l='--max-count=1'; fi
    git log --oneline "${_l}" "${_c}"
    git cherry-pick --mainline 1 --no-commit "${_c}"
  done
  for _c in "${_reverts[@]}"; do
    if [[ "${_c}" == *..* ]]; then _l='--reverse'; else _l='--max-count=1'; fi
    git log --oneline "${_l}" "${_c}"
    git revert --mainline 1 --no-commit "${_c}"
  done

  local src
  for src in "${source[@]}"; do
    src="${src%%::*}"
    src="${src##*/}"
    [[ $src = *.patch ]] || continue
    echo "Applying patch $src..."
    patch -Np1 < "../$src"
  done
}

build() {
  cd $_gitname
  arch-meson . build -D openrc=disabled \
    -D libbpf_a=disabled \
    -D bpftool=disabled \
    -D b_lto=true \
    -D b_lto_mode=thin \
    -D cargo_home="$srcdir"/scx
  meson compile -C build
}

package() {
  cd $_gitname
  meson install -C build --destdir "${pkgdir}"
}
