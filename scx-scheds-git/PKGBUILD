# Maintainer: Peter Jung ptr1337 <admin@ptr1337.dev>
# Maintainer: Piotr GÃ³rski <lucjan.lucjanov@gmail.com>

pkgname=scx-scheds-git
_gitname=scx
pkgver=1.0.15.r299.ga97b5dc5
pkgrel=1
pkgdesc='sched_ext schedulers and tools'
arch=('x86_64')
url="https://github.com/sched-ext/scx"
license=('GPL-2.0-only')
depends=('libelf' 'zlib' 'jq' 'protobuf' 'libseccomp' 'bpf' 'libbpf')
makedepends=('git' 'python' 'clang' 'llvm' 'llvm-libs' 'rust')
source=("git+https://github.com/sched-ext/scx")
sha256sums=('SKIP')
options=(!lto)
provides=("scx-scheds" "scxctl")
conflicts=("scx-scheds" "scxctl")

_backports=(
f7ce8f9fb83d12dd078cf8238afc5497a99d883b # scx_loader: Add chaos scheduler
4b9c312cbb972dcdd3a225e1049eee201628e967 # meson: install scx_mitosis and scx_wd40
3032a809d85508a64424ef217aa83e5d8d8f2ee1 # scx_loader: Add mitosis scheduler
dbdabb65417fdb6e4318dfb07ff8b77a52cfce50 # scx_loader: Add wd40 scheduler
f557fc6dc36a956cda970c8e61fa38115127f77d # scxctl: cache DBUS results to eliminate redundant calls
56b505f6d71e591789e69027248d713e5ca0225b # scxctl: optimize scheduler list display with iterator patterns
0d320b1b368c93172ad4ca7403e8a30f7150345c # scxctl: use &str parameters for string utility functions
f83495b91d5220a761a38ee027737f59af52bc3c # scxctl: replace unwrap() calls with proper error handling
93efa2f666cd05bfb0fc25faa3b94afe695490c3 # scxctl: extract helper functions to reduce duplication
5bba68dfd69f80791ffaaa384c3f191e30e38542 # scxctl: simplify string processing utility functions
87f3448bffd31b6dfb0f4961f6dc80d50fe36456 # scxctl: some Rust formatting changes to satisfy the CI
)

_reverts=(
)

pkgver() {
  cd $_gitname
  # git describe
  git describe --long --tags | sed 's/^v//;s/\([^-]*-g\)/r\1/;s/-/./g'
  # alternative
  # _ver="$(cat meson.build | grep -m1 version: | cut -d "'" -f2 | tr - .)"
  # echo "${_ver}.r$(git rev-list --count HEAD).g$(git rev-parse --short HEAD)"
}

prepare() {
 cd $_gitname

 local _c _l
  for _c in "${_backports[@]}"; do
    if [[ "${_c}" == *..* ]]; then _l='--reverse'; else _l='--max-count=1'; fi
    git log --oneline "${_l}" "${_c}"
    git cherry-pick --mainline 1 --no-commit "${_c}"
  done
  for _c in "${_reverts[@]}"; do
    if [[ "${_c}" == *..* ]]; then _l='--reverse'; else _l='--max-count=1'; fi
    git log --oneline "${_l}" "${_c}"
    git revert --mainline 1 --no-commit "${_c}"
  done

  local src
  for src in "${source[@]}"; do
    src="${src%%::*}"
    src="${src##*/}"
    [[ $src = *.patch ]] || continue
    echo "Applying patch $src..."
    patch -Np1 < "../$src"
  done
}

build() {
  cd $_gitname
  cargo build --release --workspace --exclude vmlinux_docify --exclude scx_lib_selftests
}

package() {
  cd $_gitname

  # binary
  mkdir -p "$pkgdir/usr/bin"
  for f in target/release/*; do
        if [[ -f "$f" && -x "$f" && ! "$f" =~ \.so$ ]]; then
            install -Dm755 "$f" "$pkgdir/usr/bin/"
        fi
  done

  # systemd service
  install -Dm644 services/systemd/scx_loader.service \
    "$pkgdir/usr/lib/systemd/system/scx_loader.service"

  # dbus services
  install -Dm644 services/systemd/org.scx.Loader.service\
    "$pkgdir/usr/share/dbus-1/system-services/org.scx.Loader.service"

  # dbus config
  install -Dm644 tools/scx_loader/org.scx.Loader.conf \
    "$pkgdir/usr/share/dbus-1/system.d/org.scx.Loader.conf"

  # config
  install -Dm644 services/scx_loader.toml \
    "$pkgdir/usr/share/scx_loader/config.toml"
}
