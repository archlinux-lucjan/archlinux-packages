# Maintainer: Peter Jung ptr1337 <admin@ptr1337.dev>
# Maintainer: Piotr GÃ³rski <lucjan.lucjanov@gmail.com>

pkgname=scx-scheds-git
_gitname=scx
pkgver=1.0.5.r258.gd56650c
pkgrel=3
pkgdesc='sched_ext schedulers and tools'
arch=('x86_64')
url="https://github.com/sched-ext/scx"
license=('GPL-2.0-only')
depends=('libelf' 'zlib' 'jq')
makedepends=('git' 'python' 'meson' 'clang' 'llvm' 'llvm-libs' 'rust')
backup=('etc/default/scx')
source=("git+https://github.com/sched-ext/scx")
sha256sums=('SKIP')
options=(!lto)
provides=("scx-scheds")
conflicts=("scx-scheds")

_backports=(
27cab6c2810ec102ba045a5c752e585cacc51216 # scx_bpfland: reduce idle CPU selection overhead
4765eadd725aa6c155c89688c4d4e52f78f00d7e # scx_bpfland: do not allow kthreads to preempt other tasks
c68fe1c55b7bdf33871bea4343b401ba6b9871b1 # scx_bpfland: evaluate nvcsw without using kernel metrics
8bf6a0e3a6603aab2588eb2550ddb9ed41288a27 # scx_bpfland: get rid of MAX_LATENCY_WEIGHT
06e0764f7cc158d867231dd7f4be475cdc688bcd # scx_bpfland: get rid of the global dynamic nvcsw threshold
b97393beb5276442f43ec16b2ca05ed41a768e43 # scheds: introduce scx_fair
0f58a9cd39a98c9217513814887788aa380a00aa # scx_lavd: calculate task's latency criticality in the direct dispatch
fe5554b83d80af8b1941d945b8fa95eace26a6c1 # scx_lavd: move reset_lock_futex_boost() to ops.running()
82b25a94f418bcff621887c2517699798d6b0b24 # scx_lavd: boost task's latency criticality when pinned to a cpu
)

_reverts=(
)

pkgver() {
  cd $_gitname
  # git describe
  git describe --long --tags | sed 's/^v//;s/\([^-]*-g\)/r\1/;s/-/./g'
  # alternative
  # _ver="$(cat meson.build | grep -m1 version: | cut -d "'" -f2 | tr - .)"
  # echo "${_ver}.r$(git rev-list --count HEAD).g$(git rev-parse --short HEAD)"
}

prepare() {
 cd $_gitname

 local _c _l
  for _c in "${_backports[@]}"; do
    if [[ "${_c}" == *..* ]]; then _l='--reverse'; else _l='--max-count=1'; fi
    git log --oneline "${_l}" "${_c}"
    git cherry-pick --mainline 1 --no-commit "${_c}"
  done
  for _c in "${_reverts[@]}"; do
    if [[ "${_c}" == *..* ]]; then _l='--reverse'; else _l='--max-count=1'; fi
    git log --oneline "${_l}" "${_c}"
    git revert --mainline 1 --no-commit "${_c}"
  done

  local src
  for src in "${source[@]}"; do
    src="${src%%::*}"
    src="${src##*/}"
    [[ $src = *.patch ]] || continue
    echo "Applying patch $src..."
    patch -Np1 < "../$src"
  done
}

build() {
  cd $_gitname
  arch-meson . build -D openrc=disabled
  meson compile -C build
}

package() {
  cd $_gitname
  meson install -C build --destdir "${pkgdir}"
}
