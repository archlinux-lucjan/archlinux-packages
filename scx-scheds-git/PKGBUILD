# Maintainer: Peter Jung ptr1337 <admin@ptr1337.dev>
# Maintainer: Piotr GÃ³rski <lucjan.lucjanov@gmail.com>

pkgname=scx-scheds-git
_gitname=scx
pkgver=1.0.5.r67.g2077b9a
pkgrel=2
pkgdesc='sched_ext schedulers and tools'
arch=('x86_64')
url="https://github.com/sched-ext/scx"
license=('GPL-2.0-only')
depends=('libelf' 'zlib' 'jq')
makedepends=('git' 'python' 'meson' 'clang' 'llvm' 'llvm-libs' 'rust')
backup=('etc/default/scx')
source=("git+https://github.com/sched-ext/scx")
sha256sums=('SKIP')
options=(!lto)
provides=("scx-scheds")
conflicts=("scx-scheds")

_backports=(
3009b49cee4381ecc123296e3847baf0599f3f84 # scx_bpfland: prevent per-CPU DSQ stall with per-CPU kthreads
07d8b3e92f7a48326c7d637169e304160c3cb13c # scheds: introduce scx_fair
2af764734692b1295227253e4542bd4b2f641e3a # scx_fair: introduce lowlatency mode
369be1b3ed0d9e47fd7c55d9347f921abb8343ce # scx_fair: use cast_mask() from common.bpf.h
e569ccef81b3e0e0a8a8c2ec2beffbbb99cb882f # scx_fair: always give tasks a chance to run on an idle CPU
ecdf01bdc70e2386598cabcbd32f4565a70e7bd1 # scx_fair: introduce per-CPU DSQs
0a8e8430fc90121df8df0c9e6b4510f184a7d658 # scx_fair: apply minimum vruntime when task is dispatched
91357ca71951c08931b01613e882c06ea6ee6121 # scx_fair: do not scale the assigned time slice based on task priority
7c889cc87660cbd734e1d00c01c5ccc71a1a9aa7 # scx_fair: make lowlatency default and drop it as an option
957d022066fa08b1f58e8b704e7c8fc11679e24c # scx_fair: prevent per-CPU DSQ stall with per-CPU kthreads
)

_reverts=(
)

pkgver() {
  cd $_gitname
  # git describe
  git describe --long --tags | sed 's/^v//;s/\([^-]*-g\)/r\1/;s/-/./g'
  # alternative
  # _ver="$(cat meson.build | grep -m1 version: | cut -d "'" -f2 | tr - .)"
  # echo "${_ver}.r$(git rev-list --count HEAD).g$(git rev-parse --short HEAD)"
}

prepare() {
 cd $_gitname

 local _c _l
  for _c in "${_backports[@]}"; do
    if [[ "${_c}" == *..* ]]; then _l='--reverse'; else _l='--max-count=1'; fi
    git log --oneline "${_l}" "${_c}"
    git cherry-pick --mainline 1 --no-commit "${_c}"
  done
  for _c in "${_reverts[@]}"; do
    if [[ "${_c}" == *..* ]]; then _l='--reverse'; else _l='--max-count=1'; fi
    git log --oneline "${_l}" "${_c}"
    git revert --mainline 1 --no-commit "${_c}"
  done

  local src
  for src in "${source[@]}"; do
    src="${src%%::*}"
    src="${src##*/}"
    [[ $src = *.patch ]] || continue
    echo "Applying patch $src..."
    patch -Np1 < "../$src"
  done
}

build() {
  cd $_gitname
  arch-meson . build -D openrc=disabled
  meson compile -C build
}

package() {
  cd $_gitname
  meson install -C build --destdir "${pkgdir}"
}
