# Maintainer: Peter Jung ptr1337 <admin@ptr1337.dev>
# Maintainer: Piotr GÃ³rski <lucjan.lucjanov@gmail.com>

pkgname=scx-scheds-git
_gitname=scx
pkgver=1.0.14.r411.gbcb8759b
pkgrel=1
pkgdesc='sched_ext schedulers and tools'
arch=('x86_64')
url="https://github.com/sched-ext/scx"
license=('GPL-2.0-only')
depends=('libelf' 'zlib' 'jq' 'protobuf' 'libseccomp' 'bpf' 'libbpf')
makedepends=('git' 'python' 'meson' 'clang' 'llvm' 'llvm-libs' 'rust')
backup=('etc/default/scx')
source=("git+https://github.com/sched-ext/scx")
sha256sums=('SKIP')
options=(!lto)
provides=("scx-scheds" "scxctl")
conflicts=("scx-scheds" "scxctl")

_backports=(
bc25c1ab4f97f4de7d1cd670ca97a5eb4f3b5bbb # scx_loader: add Restart method
2c820654585e63aed97093bbbafa0bdf1678eda6 # scxctl: Add restart command
2be2ac5f19522ef74ce631f82c2b855eed758e98 # scxctl: cache DBUS results to eliminate redundant calls
692283eb8554834cff89f96bc7ae0487165166a9 # scxctl: optimize scheduler list display with iterator patterns
7aedd4815b19a3affcb91de9ea61c9bede48c40f # scxctl: use &str parameters for string utility functions
f99a7de661f5044370d4208e3a2a691dddfd6382 # scxctl: replace unwrap() calls with proper error handling
4a6a81ab61c39a8a8a56390b3db7fb894d49386f # scxctl: extract helper functions to reduce duplication
5c21976a1eb7fc8c106e3367b7b0089d8ee65414 # scxctl: simplify string processing utility functions
5986c91b1af03038d1ca8d02f1a88aa86aa91c9a # scxctl: some Rust formatting changes to satisfy the CI part 2
0b40ca1338f6cfdb9c310ab84667b449de0916b0 # scx_loader: Add chaos scheduler
00579497d67686e360d0ef75ad2a444466abf507 # meson: install scx_mitosis and scx_wd40
9517ed18f50977b59e9c5f9197c0c9260dbbd487 # scx_loader: Add mitosis scheduler
4963c6646485401125465b1828f32af80d370745 # scx_loader: Add wd40 scheduler
)

_reverts=(
)

pkgver() {
  cd $_gitname
  # git describe
  git describe --long --tags | sed 's/^v//;s/\([^-]*-g\)/r\1/;s/-/./g'
  # alternative
  # _ver="$(cat meson.build | grep -m1 version: | cut -d "'" -f2 | tr - .)"
  # echo "${_ver}.r$(git rev-list --count HEAD).g$(git rev-parse --short HEAD)"
}

prepare() {
 cd $_gitname

 local _c _l
  for _c in "${_backports[@]}"; do
    if [[ "${_c}" == *..* ]]; then _l='--reverse'; else _l='--max-count=1'; fi
    git log --oneline "${_l}" "${_c}"
    git cherry-pick --mainline 1 --no-commit "${_c}"
  done
  for _c in "${_reverts[@]}"; do
    if [[ "${_c}" == *..* ]]; then _l='--reverse'; else _l='--max-count=1'; fi
    git log --oneline "${_l}" "${_c}"
    git revert --mainline 1 --no-commit "${_c}"
  done

  local src
  for src in "${source[@]}"; do
    src="${src%%::*}"
    src="${src##*/}"
    [[ $src = *.patch ]] || continue
    echo "Applying patch $src..."
    patch -Np1 < "../$src"
  done
}

build() {
  cd $_gitname
  arch-meson . build -D openrc=disabled \
    -D libbpf_a=disabled \
    -D bpftool=disabled \
    -D b_lto=true \
    -D b_lto_mode=thin \
    -D cargo_home="$srcdir"/scx
  meson compile -C build
}

package() {
  cd $_gitname
  meson install -C build --destdir "${pkgdir}"
}
