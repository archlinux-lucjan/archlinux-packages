# Maintainer: Peter Jung ptr1337 <admin@ptr1337.dev>
# Maintainer: Piotr GÃ³rski <lucjan.lucjanov@gmail.com>
# Contributor: Tejun Heo <tj@kernel.org>

pkgname=scx-scheds-git
_gitname=scx
pkgver=1.0.17.r1.g76e7eadc
pkgrel=1
pkgdesc='sched_ext schedulers and tools'
url='https://github.com/sched-ext/scx'
arch=('x86_64')
license=('GPL-2.0-only')
depends=(
  jq
  libseccomp
  libelf
  zlib
)
makedepends=(
  cargo
  clang
  git
  llvm
  llvm-libs
  python
)
options=(!lto)
provides=("scx-scheds" "scxctl")
conflicts=("scx-scheds" "scxctl")
source=("git+https://github.com/sched-ext/scx")
sha256sums=('SKIP')

_backports=(
7b5bc0579f5eaa034da0c37214b026c980638e7a # scx_cosmos: Improve SMT handling
4e39682721d36a892a64b544a7a78fafdbd2654e # scx_cosmos: Prioritize faster CPUs
54cdd9024b49a1533d1255803f93916052f39459 # scx_cosmos: Drop flat/preferred idle scan
163ab842600316f0938f35d11329d1672349ee28 # scx_bpfland: Rework idle CPU selection and scheduling policy
41045a135946a0fe73082719e72ae89fd3a9f610 # scx_loader: Update performance profiles for scx_bpfland
147bfad40eed41b8710c49435f2fd291f62a0c31 # scheds: Introduce scx_beerland
bb2f2254d47e7e0a0d13d767152b151a7c7ae238 # scx_loader: Add beerland scheduler
f87ab638f1340351ce2e4d16f3f1deec5589eaa6 # EXPERIMENTAL: scx_beerland: Use lockless peek (requires kernel patch)
3fdb0ecb39e89762c8596bf9c4b090270a04e357 # scx_beerland: Better SMT handling
1bef1aaa001eb6e2389db0638bb3ab1746d3cd82 # scx_beerland: Prevent migrations for non-overloaded CPUs
53833497690ef02b0dd22cf5969c03e36559e462 # scx_beerland: Re-enqueue tasks on CPU preempted by a higher sched class
2cd0a2b7d3e4552bf12e34e5025f8f78b1df3dad # scx_loader: Add chaos scheduler
4c4ef99d6c1c909664649cb883ef56dee52807e3 # scx_loader: Error when non-auto modes do not have args
35aeefcdada0ce4691592644827a9917eb3a3094 # scxctl: Implement error handling
7d0e0d989afd7d422bb6714d571664b4cc7c5fab # gitconfig: some formatting changes
)

_reverts=(
)

pkgver() {
  cd $_gitname
  git describe --long --tags | sed 's/^v//;s/\([^-]*-g\)/r\1/;s/-/./g'
}

prepare() {
  cd $_gitname

  local _c _l
   for _c in "${_backports[@]}"; do
     if [[ "${_c}" == *..* ]]; then _l='--reverse'; else _l='--max-count=1'; fi
     git log --oneline "${_l}" "${_c}"
     git cherry-pick --mainline 1 --no-commit "${_c}"
   done
   for _c in "${_reverts[@]}"; do
     if [[ "${_c}" == *..* ]]; then _l='--reverse'; else _l='--max-count=1'; fi
     git log --oneline "${_l}" "${_c}"
     git revert --mainline 1 --no-commit "${_c}"
   done

   export RUSTUP_TOOLCHAIN=stable
   cargo fetch --locked --target "$(rustc -vV | sed -n 's/host: //p')"
}

build() {
  cd $_gitname
  export RUSTUP_TOOLCHAIN=stable
  export CARGO_TARGET_DIR=target
  cargo build \
     --release \
     --frozen \
     --all-features \
     --workspace \
     --exclude scx_rlfifo \
     --exclude scx_mitosis \
     --exclude scx_wd40 \
     --exclude scxcash \
     --exclude xtask \
     --exclude vmlinux_docify \
     --exclude scx_arena_selftests
}

#check() {
#  cd $_gitname
#  export RUSTUP_TOOLCHAIN=stable
#  cargo test \
#     --frozen \
#     --all-features \
#     --workspace \
#     --exclude scx_rlfifo \
#     --exclude scx_mitosis \
#     --exclude scx_wd40 \
#     --exclude scxcash \
#     --exclude xtask \
#     --exclude vmlinux_docify \
#     --exclude scx_arena_selftests
#}

package() {
  cd $_gitname

  # Install all built executables (skip .so and .d files)
  find target/release \
    -maxdepth 1 -type f -executable ! -name '*.so' \
    -exec install -Dm755 -t "$pkgdir/usr/bin/" {} +

  # systemd service
  install -Dm644 services/systemd/scx_loader.service \
    -t "$pkgdir/usr/lib/systemd/system/"

  # D-Bus service
  install -Dm644 services/systemd/org.scx.Loader.service \
    -t "$pkgdir/usr/share/dbus-1/system-services/"

  # D-Bus configuration
  install -Dm644 tools/scx_loader/org.scx.Loader.conf \
    -t "$pkgdir/usr/share/dbus-1/system.d/"

  # scx_loader sample configuration (template)
  install -Dm644 services/scx_loader.toml \
    "$pkgdir/usr/share/scx_loader/config.toml"
}
