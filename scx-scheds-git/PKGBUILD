# Maintainer: Peter Jung ptr1337 <admin@ptr1337.dev>
# Maintainer: Piotr GÃ³rski <lucjan.lucjanov@gmail.com>

pkgname=scx-scheds-git
_gitname=scx
pkgver=1.0.15.r294.g0ce2658b
pkgrel=1
pkgdesc='sched_ext schedulers and tools'
arch=('x86_64')
url="https://github.com/sched-ext/scx"
license=('GPL-2.0-only')
depends=('libelf' 'zlib' 'jq' 'protobuf' 'libseccomp' 'bpf' 'libbpf')
makedepends=('git' 'python' 'meson' 'clang' 'llvm' 'llvm-libs' 'rust')
source=("git+https://github.com/sched-ext/scx")
sha256sums=('SKIP')
options=(!lto)
provides=("scx-scheds" "scxctl")
conflicts=("scx-scheds" "scxctl")

_backports=(
a53cd2d13fa6c159bc7183d3383c0f0544350bf3 # scx_loader: Add chaos scheduler
dc93427d29db826a5dceeddc8cb21541b702e5d2 # meson: install scx_mitosis and scx_wd40
1cde1064500db9743a6c604cbfaed80043b44a53 # scx_loader: Add mitosis scheduler
9a9a3b1232de876c2c15008be9f0cf71dfee7fa8 # scx_loader: Add wd40 scheduler
add3bfc388e2b6643d7d53ea5c4b3bc6c44545d5 # scxctl: cache DBUS results to eliminate redundant calls
08a15e654d54878983c7beb8bc2a0f55479415a5 # scxctl: optimize scheduler list display with iterator patterns
b5c93956f8dc6ac76d280b6bb5fd90e10729e4bd # scxctl: use &str parameters for string utility functions
25cb11c6387fb1c985090b78ea11ae0f091baca2 # scxctl: replace unwrap() calls with proper error handling
9c2a64455bfa22f68a2a21677c5a9d631b478069 # scxctl: extract helper functions to reduce duplication
b9c58d63e9df7fca8e616579b246096b997ae6c2 # scxctl: simplify string processing utility functions
18fa8ba81d1b87c3722730470ce252a7c457992a # scxctl: some Rust formatting changes to satisfy the CI
406c58a19f9f28e4c29b60c7945eaec4bd416120 # scx-scheds: drop scx.service
27b549630bfd79b8872cb6c7bb773c7352c44d78 # scx-scheds: drop openrc support
0fad63bfb484e2bd7bcc7bb63051491311b0486c # scx-scheds: moving files to the services directory
)

_reverts=(
)

pkgver() {
  cd $_gitname
  # git describe
  git describe --long --tags | sed 's/^v//;s/\([^-]*-g\)/r\1/;s/-/./g'
  # alternative
  # _ver="$(cat meson.build | grep -m1 version: | cut -d "'" -f2 | tr - .)"
  # echo "${_ver}.r$(git rev-list --count HEAD).g$(git rev-parse --short HEAD)"
}

prepare() {
 cd $_gitname

 local _c _l
  for _c in "${_backports[@]}"; do
    if [[ "${_c}" == *..* ]]; then _l='--reverse'; else _l='--max-count=1'; fi
    git log --oneline "${_l}" "${_c}"
    git cherry-pick --mainline 1 --no-commit "${_c}"
  done
  for _c in "${_reverts[@]}"; do
    if [[ "${_c}" == *..* ]]; then _l='--reverse'; else _l='--max-count=1'; fi
    git log --oneline "${_l}" "${_c}"
    git revert --mainline 1 --no-commit "${_c}"
  done

  local src
  for src in "${source[@]}"; do
    src="${src%%::*}"
    src="${src##*/}"
    [[ $src = *.patch ]] || continue
    echo "Applying patch $src..."
    patch -Np1 < "../$src"
  done
}

build() {
  cd $_gitname
  arch-meson . build -D cargo_home="$srcdir"/scx \
    -D libbpf_a=disabled \
    -D bpftool=disabled \
    -D b_lto=true \
    -D b_lto_mode=thin
  meson compile -C build
}

package() {
  cd $_gitname
  meson install -C build --destdir "${pkgdir}"
}
