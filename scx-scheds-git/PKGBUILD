# Maintainer: Peter Jung ptr1337 <admin@ptr1337.dev>
# Maintainer: Piotr GÃ³rski <lucjan.lucjanov@gmail.com>
# Contributor: Tejun Heo <tj@kernel.org>

pkgname=scx-scheds-git
_gitname=scx
pkgver=1.0.16.r123.g050776cd
pkgrel=2
pkgdesc='sched_ext schedulers and tools'
url='https://github.com/sched-ext/scx'
arch=('x86_64')
license=('GPL-2.0-only')
depends=(
  jq
  libseccomp
  libelf
  zlib
)
makedepends=(
  clang
  git
  llvm
  llvm-libs
  python
  rust
)
options=(!lto)
provides=("scx-scheds" "scxctl")
conflicts=("scx-scheds" "scxctl")
source=("git+https://github.com/sched-ext/scx")
sha256sums=('SKIP')

_backports=(
ba735fbf633acc81d67e7c209a72ba97b9db798a # scheds: Introduce scx_beerland
5d892064c11b599d8755ca26ed41bad6280f5de8 # scx_loader: Add beerland scheduler
d4afbeec1d084f958b56b359dd551542ef62cd6d # scx_loader: Add chaos scheduler
ac63dbdee658c7206cd2cae87ce7c3a12af4a8f6 # scx_loader: Add mitosis scheduler
7bf908f21cadf7073dd3494f56862a535d740104 # scx_loader: Add wd40 scheduler
8ac12b13fafd1b3d775ae3714cc382da742d7b92 # scx_loader: Error when non-auto modes do not have args
c64d34cc219876d3df457b3b76485e1ed851ebec # scxctl: Implement error handling
)

_reverts=(
)

pkgver() {
  cd $_gitname
  git describe --long --tags | sed 's/^v//;s/\([^-]*-g\)/r\1/;s/-/./g'
}

prepare() {
  cd $_gitname

  local _c _l
   for _c in "${_backports[@]}"; do
     if [[ "${_c}" == *..* ]]; then _l='--reverse'; else _l='--max-count=1'; fi
     git log --oneline "${_l}" "${_c}"
     git cherry-pick --mainline 1 --no-commit "${_c}"
   done
   for _c in "${_reverts[@]}"; do
     if [[ "${_c}" == *..* ]]; then _l='--reverse'; else _l='--max-count=1'; fi
     git log --oneline "${_l}" "${_c}"
     git revert --mainline 1 --no-commit "${_c}"
   done

   cargo fetch --locked --target "$(rustc -vV | sed -n 's/host: //p')"
}

build() {
  cd $_gitname
  export CARGO_TARGET_DIR=target
  cargo build \
     --release \
     --workspace \
     --locked \
     --frozen \
     --exclude scx_rlfifo \
     --exclude vmlinux_docify \
     --exclude arenalib_selftests
}

#check() {
#  cd $_gitname
#  cargo test \
#     --workspace \
#     --locked \
#     --frozen \
#     --exclude scx_rlfifo \
#     --exclude vmlinux_docify \
#     --exclude arenalib_selftests
#}

package() {
  cd $_gitname

  # Install all built executables (skip .so and .d files)
  find target/release -maxdepth 1 -type f -executable ! -name '*.so' \
    -exec install -Dm755 -t "$pkgdir/usr/bin/" {} +

  # systemd service
  install -Dm644 services/systemd/scx_loader.service \
    -t "$pkgdir/usr/lib/systemd/system/"

  # D-Bus service
  install -Dm644 services/systemd/org.scx.Loader.service \
    -t "$pkgdir/usr/share/dbus-1/system-services/"

  # D-Bus configuration
  install -Dm644 tools/scx_loader/org.scx.Loader.conf \
    -t "$pkgdir/usr/share/dbus-1/system.d/"

  # scx_loader sample configuration (template)
  install -Dm644 services/scx_loader.toml \
    "$pkgdir/usr/share/scx_loader/config.toml"
}
