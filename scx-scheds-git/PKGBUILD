# Maintainer: Peter Jung ptr1337 <admin@ptr1337.dev>
# Maintainer: Piotr GÃ³rski <lucjan.lucjanov@gmail.com>
# Contributor: Tejun Heo <tj@kernel.org>

pkgname=scx-scheds-git
_gitname=scx
pkgver=1.0.16.r212.ga09691c1
pkgrel=7
pkgdesc='sched_ext schedulers and tools'
url='https://github.com/sched-ext/scx'
arch=('x86_64')
license=('GPL-2.0-only')
depends=(
  jq
  libseccomp
  libelf
  zlib
)
makedepends=(
  cargo
  clang
  git
  llvm
  llvm-libs
  python
)
options=(!lto)
provides=("scx-scheds" "scxctl")
conflicts=("scx-scheds" "scxctl")
source=("git+https://github.com/sched-ext/scx")
sha256sums=('SKIP')

_backports=(
10ae9c52fd50e945885369ea18c794890768dae0 # scx_cosmos: Improve SMT handling
98fcaf1d755002803de2556db7913892c497b20f # scx_cosmos: Prioritize faster CPUs
f09d72c3761c1657409544956d237cd32ce0cdc3 # scx_cosmos: Drop flat/preferred idle scan
7185affb04fc37186667ae57c8892cfe0e814f73 # scx_bpfland: Rework idle CPU and scheduling policy
9c69b4136687def8c6203a8298af7c7d5e5f196d # scheds: Introduce scx_beerland
42f0c591b0724ccfd2f90792f5dd42bf4fa78393 # scx_loader: Add beerland scheduler
dfdeee50b5de15875e8cb26c569c964817fc73e3 # EXPERIMENTAL: scx_beerland: Use lockless peek (requires kernel patch)
fcbd04d133df00d3add0359e654c8e80b256dbcf # scx_beerland: Better SMT handling
9ca2d58e844599699e25885e2c87f3c9cf1bade4 # scx_beerland: Prevent migrations for non-overloaded CPUs
9f118ff8259d32391d687fde6dfc63573e99c596 # scx_beerland: Re-enqueue tasks on CPU preempted by a higher sched class
e9a09ee02819070bd6c92be8467149914c658225 # scx_loader: Add chaos scheduler
0726534d8fe79a6168bcc7a256ae127b8df47cfc # scx_loader: Error when non-auto modes do not have args
fbec0e63580fc840dce28919e8319322651ff6ca # scxctl: Implement error handling
)

_reverts=(
)

pkgver() {
  cd $_gitname
  git describe --long --tags | sed 's/^v//;s/\([^-]*-g\)/r\1/;s/-/./g'
}

prepare() {
  cd $_gitname

  local _c _l
   for _c in "${_backports[@]}"; do
     if [[ "${_c}" == *..* ]]; then _l='--reverse'; else _l='--max-count=1'; fi
     git log --oneline "${_l}" "${_c}"
     git cherry-pick --mainline 1 --no-commit "${_c}"
   done
   for _c in "${_reverts[@]}"; do
     if [[ "${_c}" == *..* ]]; then _l='--reverse'; else _l='--max-count=1'; fi
     git log --oneline "${_l}" "${_c}"
     git revert --mainline 1 --no-commit "${_c}"
   done

   export RUSTUP_TOOLCHAIN=stable
   cargo fetch --locked --target "$(rustc -vV | sed -n 's/host: //p')"
}

build() {
  cd $_gitname
  export RUSTUP_TOOLCHAIN=stable
  export CARGO_TARGET_DIR=target
  cargo build \
     --release \
     --frozen \
     --all-features \
     --workspace \
     --exclude scx_rlfifo \
     --exclude scx_mitosis \
     --exclude scx_wd40 \
     --exclude scxcash \
     --exclude xtask \
     --exclude vmlinux_docify \
     --exclude arenalib_selftests
}

#check() {
#  cd $_gitname
#  export RUSTUP_TOOLCHAIN=stable
#  cargo test \
#     --frozen \
#     --all-features \
#     --workspace \
#     --exclude scx_rlfifo \
#     --exclude scx_mitosis \
#     --exclude scx_wd40 \
#     --exclude scxcash \
#     --exclude xtask \
#     --exclude vmlinux_docify \
#     --exclude arenalib_selftests
#}

package() {
  cd $_gitname

  # Install all built executables (skip .so and .d files)
  find target/release \
    -maxdepth 1 -type f -executable ! -name '*.so' \
    -exec install -Dm755 -t "$pkgdir/usr/bin/" {} +

  # systemd service
  install -Dm644 services/systemd/scx_loader.service \
    -t "$pkgdir/usr/lib/systemd/system/"

  # D-Bus service
  install -Dm644 services/systemd/org.scx.Loader.service \
    -t "$pkgdir/usr/share/dbus-1/system-services/"

  # D-Bus configuration
  install -Dm644 tools/scx_loader/org.scx.Loader.conf \
    -t "$pkgdir/usr/share/dbus-1/system.d/"

  # scx_loader sample configuration (template)
  install -Dm644 services/scx_loader.toml \
    "$pkgdir/usr/share/scx_loader/config.toml"
}
