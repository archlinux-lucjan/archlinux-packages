# Maintainer: Peter Jung ptr1337 <admin@ptr1337.dev>
# Maintainer: Piotr GÃ³rski <lucjan.lucjanov@gmail.com>

pkgname=scx-scheds-git
_gitname=scx
pkgver=1.0.12.r174.gd247349f
pkgrel=5
pkgdesc='sched_ext schedulers and tools'
arch=('x86_64')
url="https://github.com/sched-ext/scx"
license=('GPL-2.0-only')
depends=('libelf' 'zlib' 'jq' 'protobuf' 'libseccomp' 'bpf' 'libbpf')
makedepends=('git' 'python' 'meson' 'clang' 'llvm' 'llvm-libs' 'rust')
backup=('etc/default/scx')
source=("git+https://github.com/sched-ext/scx")
sha256sums=('SKIP')
options=(!lto)
provides=("scx-scheds" "scxctl")
conflicts=("scx-scheds" "scxctl")

_backports=(
f48f526198f74180f28d1497e5b9717b24cd990d # scx_rustland_core: Initialize task dsq_vtime and slice
fc3f923d336da9e183d4e342bf09597db7a9051e # scx_rustland_core: Dispatch per-CPU tasks to their only usable CPU
b13217d600b278d7e2ccddd0a334855a756d0fa4 # scx_rustland_core: Avoid sched_setscheduler() in non-partial mode
864b65ff7f75d1398bf336fcc4a7d9e34bacea7a # scx_rustland_core: Use BPF_RB_NO_WAKEUP
c150242037f50d8b3b05d433be82c348ad473ae9 # scx_rustland_core: Introduce a separate DSQ for the user-space scheduler
6b9c4f4600c22707b9ccfef022cc98cf0c2476c8 # scx_rustland_core: Make usersched_needed per-CPU
7b0b5d1122738f04161ed781390a96779e627ff0 # scx_rustland_core: Drop cpumask generation counter
fe8874c712bde205f20ff6291acae70af15135bc # scx_rustland_core: Expose nr_cpus_allowed to user-space
2592c28278cf61e35c16ccb5cbd3e44f93830243 # scx_rustland_core: Re-introduce prioritization of faulting tasks
f949cd54b4328fd0d83766cb5d84de2aa7124c61 # scx_rustland: Dispatch per-CPU tasks directly
2168a410f379142d2af729b291a64141b2ecc40d # lib: split generic bitmap ops from cpumask-related routines
42d5858eb1328a1652c07ad8dc14f426c96bf354 # lib: introduce topology library
c5cb9b4c0e8d7ebab3cefee866ba9294a5446736 # scx_p2dq: use-arena backed topology in BPF
6b3928b00dd2768b1b8d379ac13452afd2ac2843 # scx_lavd: Add --preempt-shift option.
)

_reverts=(
)

pkgver() {
  cd $_gitname
  # git describe
  git describe --long --tags | sed 's/^v//;s/\([^-]*-g\)/r\1/;s/-/./g'
  # alternative
  # _ver="$(cat meson.build | grep -m1 version: | cut -d "'" -f2 | tr - .)"
  # echo "${_ver}.r$(git rev-list --count HEAD).g$(git rev-parse --short HEAD)"
}

prepare() {
 cd $_gitname

 local _c _l
  for _c in "${_backports[@]}"; do
    if [[ "${_c}" == *..* ]]; then _l='--reverse'; else _l='--max-count=1'; fi
    git log --oneline "${_l}" "${_c}"
    git cherry-pick --mainline 1 --no-commit "${_c}"
  done
  for _c in "${_reverts[@]}"; do
    if [[ "${_c}" == *..* ]]; then _l='--reverse'; else _l='--max-count=1'; fi
    git log --oneline "${_l}" "${_c}"
    git revert --mainline 1 --no-commit "${_c}"
  done

  local src
  for src in "${source[@]}"; do
    src="${src%%::*}"
    src="${src##*/}"
    [[ $src = *.patch ]] || continue
    echo "Applying patch $src..."
    patch -Np1 < "../$src"
  done
}

build() {
  cd $_gitname
  arch-meson . build -D openrc=disabled \
    -D libbpf_a=disabled \
    -D bpftool=disabled \
    -D b_lto=true \
    -D b_lto_mode=thin \
    -D cargo_home="$srcdir"/scx
  meson compile -C build
}

package() {
  cd $_gitname
  meson install -C build --destdir "${pkgdir}"
}
