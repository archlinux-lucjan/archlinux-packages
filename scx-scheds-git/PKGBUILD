# Maintainer: Peter Jung ptr1337 <admin@ptr1337.dev>
# Maintainer: Piotr GÃ³rski <lucjan.lucjanov@gmail.com>
# Contributor: Tejun Heo <tj@kernel.org>

pkgname=scx-scheds-git
_gitname=scx
pkgver=1.0.16.r234.g8d597bf3
pkgrel=1
pkgdesc='sched_ext schedulers and tools'
url='https://github.com/sched-ext/scx'
arch=('x86_64')
license=('GPL-2.0-only')
depends=(
  jq
  libseccomp
  libelf
  zlib
)
makedepends=(
  cargo
  clang
  git
  llvm
  llvm-libs
  python
)
options=(!lto)
provides=("scx-scheds" "scxctl")
conflicts=("scx-scheds" "scxctl")
source=("git+https://github.com/sched-ext/scx")
sha256sums=('SKIP')

_backports=(
cb48d4a384e2209706dd3095b2dfd4bfb934b2b9 # scx_cosmos: Improve SMT handling
4aa7273098fb22e37075e659281f33220212f8e3 # scx_cosmos: Prioritize faster CPUs
f44cfb886c6828fba3bc820171ce15ef796d641d # scx_cosmos: Drop flat/preferred idle scan
f2d48cd29496b25750f319a07a1869378d2e7dec # scx_bpfland: Rework idle CPU selection and scheduling policy
9057086e4e27ec48b6a034bfe04d82f6bc2c7ee7 # scheds: Introduce scx_beerland
9f83e73337f6a5c854534542acb3836901f8abbc # scx_loader: Add beerland scheduler
d23212536d4ac6928ef4296f2e49cce5e0dc439a # EXPERIMENTAL: scx_beerland: Use lockless peek (requires kernel patch)
74d7ccf82f3f6faac5a42925d489fb9eaae30e6c # scx_beerland: Better SMT handling
acc07138e2df11b675b4d97d2ae880515ad60378 # scx_beerland: Prevent migrations for non-overloaded CPUs
80d6caf9d2f2bd14b22a2975e5e0bd17a456145d # scx_beerland: Re-enqueue tasks on CPU preempted by a higher sched class
65e263af1571bf7036d7982bfba983531702bdd6 # scx_loader: Add chaos scheduler
719ae5982d4982a8c21c1e3810d654586d72df69 # scx_loader: Error when non-auto modes do not have args
054a64f44fc5e7db52bb1228f2b5fe576b199b08 # scxctl: Implement error handling
)

_reverts=(
)

pkgver() {
  cd $_gitname
  git describe --long --tags | sed 's/^v//;s/\([^-]*-g\)/r\1/;s/-/./g'
}

prepare() {
  cd $_gitname

  local _c _l
   for _c in "${_backports[@]}"; do
     if [[ "${_c}" == *..* ]]; then _l='--reverse'; else _l='--max-count=1'; fi
     git log --oneline "${_l}" "${_c}"
     git cherry-pick --mainline 1 --no-commit "${_c}"
   done
   for _c in "${_reverts[@]}"; do
     if [[ "${_c}" == *..* ]]; then _l='--reverse'; else _l='--max-count=1'; fi
     git log --oneline "${_l}" "${_c}"
     git revert --mainline 1 --no-commit "${_c}"
   done

   export RUSTUP_TOOLCHAIN=stable
   cargo fetch --locked --target "$(rustc -vV | sed -n 's/host: //p')"
}

build() {
  cd $_gitname
  export RUSTUP_TOOLCHAIN=stable
  export CARGO_TARGET_DIR=target
  cargo build \
     --release \
     --frozen \
     --all-features \
     --workspace \
     --exclude scx_rlfifo \
     --exclude scx_mitosis \
     --exclude scx_wd40 \
     --exclude scxcash \
     --exclude xtask \
     --exclude vmlinux_docify \
     --exclude arenalib_selftests
}

#check() {
#  cd $_gitname
#  export RUSTUP_TOOLCHAIN=stable
#  cargo test \
#     --frozen \
#     --all-features \
#     --workspace \
#     --exclude scx_rlfifo \
#     --exclude scx_mitosis \
#     --exclude scx_wd40 \
#     --exclude scxcash \
#     --exclude xtask \
#     --exclude vmlinux_docify \
#     --exclude arenalib_selftests
#}

package() {
  cd $_gitname

  # Install all built executables (skip .so and .d files)
  find target/release \
    -maxdepth 1 -type f -executable ! -name '*.so' \
    -exec install -Dm755 -t "$pkgdir/usr/bin/" {} +

  # systemd service
  install -Dm644 services/systemd/scx_loader.service \
    -t "$pkgdir/usr/lib/systemd/system/"

  # D-Bus service
  install -Dm644 services/systemd/org.scx.Loader.service \
    -t "$pkgdir/usr/share/dbus-1/system-services/"

  # D-Bus configuration
  install -Dm644 tools/scx_loader/org.scx.Loader.conf \
    -t "$pkgdir/usr/share/dbus-1/system.d/"

  # scx_loader sample configuration (template)
  install -Dm644 services/scx_loader.toml \
    "$pkgdir/usr/share/scx_loader/config.toml"
}
