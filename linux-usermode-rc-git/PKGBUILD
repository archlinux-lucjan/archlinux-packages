# Maintainer: Piotr Gorski <lucjan.lucjanov@gmail.com>
# Contributor: Haruue Icymoon <haruue@caoyue.com.cn>

pkgbase=linux-usermode-rc-git
pkgname=('linux-usermode-rc-git' 'linux-usermode-rc-git-modules')
_major=4.18
_kernelname=-usermodelinux-git
_srcname=linux-stable-rc
pkgver=4.18.16.r0.g6b3252287aa2
pkgrel=1
pkgdesc="User mode Linux kernel and modules"
arch=('x86_64')
license=('GPL2')
url="http://user-mode-linux.sourceforge.net/"
depends=('coreutils')
makedepends=('bc' 'inetutils' 'git' 'gcc7')
source=(
  "git://git.kernel.org/pub/scm/linux/kernel/git/stable/linux-stable-rc.git#branch=linux-${_major}.y"
  'config'
  '70-uml.hook')

sha256sums=('SKIP'
            '7c51e095cb95e2ab070b7f331e7bc72d1ac127e913be971f9c41cf3595bf1db6'
            '452b8d4d71e1565ca91b1bebb280693549222ef51c47ba8964e411b2d461699c')

pkgver() {
  cd ${_srcname}
        
  git describe --long --tags | sed -E 's/^v//;s/([^-]*-g)/r\1/;s/-/./g;s/\.rc/rc/'
} 

prepare() {
  cd ${_srcname}

  msg2 "Fix naming schema in EXTRAVERSION"
  _rc="$(cat Makefile | grep -m1 -e EXTRAVERSION | grep -o "[[:digit:]]*")"
  sed -i -e "s|EXTRAVERSION = -rc${_rc}|EXTRAVERSION =|g" Makefile
  
  msg2 "Setting version..."
  scripts/setlocalversion --save-scmversion
  echo "-$pkgrel" > localversion.10-pkgrel
  echo "$_kernelname" > localversion.20-pkgname

  msg2 "Setting config..."
  cp ../config .config
  yes "" | make ARCH=um config >/dev/null
  
  msg2 "Save configuration for later reuse"
  cat .config > "${startdir}/config.last"
}

build() {
  cd ${_srcname}
  unset LDFLAGS CFLAGS
  make ARCH=um CC=gcc-7 vmlinux modules 
}

_package() {
  conflicts=('linux-usermode-rc' 'linux-usermode-git' 'linux-usermode')
  
  cd ${_srcname}
  mkdir -p "$pkgdir/usr/bin" "$pkgdir/usr/share/kernel-usermode"
  install -m 644 System.map ${pkgdir}/usr/share/kernel-usermode/System.map
  install -m 755 vmlinux ${pkgdir}/usr/bin/
}

_package-modules() {
  conflicts=('linux-usermode-rc-modules' 'linux-usermode-git-modules'
             'linux-usermode-modules')
  
  cd ${_srcname}
  # get kernel version, but discard the first result
  make ARCH=um kernelrelease > /dev/null
  _kernver="$(make ARCH=um kernelrelease)"
  #  make ARCH=um INSTALL_MOD_PATH="${pkgdir}/usr" modules_install
  make ARCH=um INSTALL_MOD_PATH="${pkgdir}/usr" _modinst_
  rm -f $pkgdir/usr/lib/modules/${_kernver}/{source,build}
  # sed expression for following substitutions
  local _subst="
        s|%PKGBASE%|${pkgbase}|g
        s|%KERNVER%|${_kernver}|g
  "
  # install pacman hook
  sed "${_subst}" ../70-uml.hook |
        install -Dm644 /dev/stdin "${pkgdir}/usr/share/libalpm/hooks/70-uml.hook"
}

pkgname=("${pkgbase}" "${pkgbase}-modules")
for _p in ${pkgname[@]}; do
  eval "package_${_p}() {
    $(declare -f "_package${_p#${pkgbase}}")
    _package${_p#${pkgbase}}
  }"
done

# vim:set ts=8 sts=2 sw=2 et:
