From e2f879754f2c7a7a507500bdc5bf1e387c6412d0 Mon Sep 17 00:00:00 2001
From: Piotr Gorski <lucjan.lucjanov@gmail.com>
Date: Wed, 2 Apr 2025 13:31:39 +0200
Subject: [PATCH 2/2] scx_loader: Add chaos scheduler

Signed-off-by: Piotr Gorski <lucjan.lucjanov@gmail.com>
---
 rust/scx_loader/configuration.md | 13 +++++++++++--
 rust/scx_loader/src/config.rs    | 18 ++++++++++++++++++
 rust/scx_loader/src/lib.rs       |  4 ++++
 rust/scx_loader/src/main.rs      |  1 +
 4 files changed, 34 insertions(+), 2 deletions(-)

diff --git a/rust/scx_loader/configuration.md b/rust/scx_loader/configuration.md
index a8bbc5f4..c427f5de 100644
--- a/rust/scx_loader/configuration.md
+++ b/rust/scx_loader/configuration.md
@@ -60,12 +60,18 @@ auto_mode = []
 gaming_mode = []
 lowlatency_mode = []
 powersave_mode = []
+
+[scheds.scx_chaos]
+auto_mode = []
+gaming_mode = []
+lowlatency_mode = ["-y"]
+powersave_mode = []
 ```
 
 **`default_sched`:**
 
 * This field specifies the scheduler that will be started automatically when `scx_loader` starts (e.g., on boot).
-* It should be set to the name of a supported scheduler (e.g., `"scx_bpfland"`, `"scx_rusty"`, `"scx_lavd"`, `"scx_flash"`, `"scx_p2dq"`, `"scx_wd40"`).
+* It should be set to the name of a supported scheduler (e.g., `"scx_bpfland"`, `"scx_rusty"`, `"scx_lavd"`, `"scx_flash"`, `"scx_p2dq"`, `"scx_wd40"`, `"scx_chaos"`).
 * If this field is not present or is set to an empty string, no scheduler will be started automatically.
 
 **`default_mode`:**
@@ -76,7 +82,7 @@ powersave_mode = []
 
 **`[scheds.scx_name]`:**
 
-* This section defines the custom flags for a specific scheduler. Replace `scx_name` with the actual name of the scheduler (e.g., `scx_bpfland`, `scx_rusty`, `scx_lavd`, `scx_flash`, `scx_p2dq`, `scx_wd40`).
+* This section defines the custom flags for a specific scheduler. Replace `scx_name` with the actual name of the scheduler (e.g., `scx_bpfland`, `scx_rusty`, `scx_lavd`, `scx_flash`, `scx_p2dq`, `scx_wd40`, `scx_chaos`).
 
 **`auto_mode`, `gaming_mode`, `lowlatency_mode`, `powersave_mode`, `server_mode`:**
 
@@ -105,6 +111,9 @@ The example configuration above shows how to set custom flags for different sche
     * Server mode: `--keep-running`
 * For `scx_wd40`:
     * No custom flags are defined, so the default flags for each mode will be used.
+* For `scx_chaos`:
+    * Low Latency mode: `-y`
+    * Server mode: `--keep-running`
 
 ## Fallback Behavior
 
diff --git a/rust/scx_loader/src/config.rs b/rust/scx_loader/src/config.rs
index 35fc5683..104cce1a 100644
--- a/rust/scx_loader/src/config.rs
+++ b/rust/scx_loader/src/config.rs
@@ -105,6 +105,10 @@ pub fn get_default_config() -> Config {
                 "scx_wd40".to_string(),
              get_default_sched_for_config(&SupportedSched::WD40),
             ),
+            (
+                "scx_chaos".to_string(),
+             get_default_sched_for_config(&SupportedSched::Chaos),
+            ),
         ]),
     }
 }
@@ -222,6 +226,13 @@ fn get_default_scx_flags_for_mode(scx_sched: &SupportedSched, sched_mode: SchedM
         },
         // scx_wd40 doesn't support any of these modes
         SupportedSched::WD40 => vec![],
+        SupportedSched::Chaos => match sched_mode {
+            SchedMode::Gaming => vec![],
+            SchedMode::LowLatency => vec!["-y"],
+            SchedMode::PowerSave => vec![],
+            SchedMode::Server => vec!["--keep-running"],
+            SchedMode::Auto => vec![],
+        },
     }
 }
 
@@ -282,6 +293,13 @@ gaming_mode = []
 lowlatency_mode = []
 powersave_mode = []
 server_mode = []
+
+[scheds.scx_chaos]
+auto_mode = []
+gaming_mode = []
+lowlatency_mode = ["-y"]
+powersave_mode = []
+server_mode = ["--keep-running"]
 "#;
 
         let parsed_config = parse_config_content(config_str).expect("Failed to parse config");
diff --git a/rust/scx_loader/src/lib.rs b/rust/scx_loader/src/lib.rs
index f2fe9685..85bcf292 100644
--- a/rust/scx_loader/src/lib.rs
+++ b/rust/scx_loader/src/lib.rs
@@ -34,6 +34,8 @@ pub enum SupportedSched {
     Tickless,
     #[serde(rename = "scx_wd40")]
     WD40,
+    #[serde(rename = "scx_chaos")]
+    Chaos,
 }
 
 impl FromStr for SupportedSched {
@@ -48,6 +50,7 @@ impl FromStr for SupportedSched {
             "scx_tickless" => Ok(SupportedSched::Tickless),
             "scx_rusty" => Ok(SupportedSched::Rusty),
             "scx_wd40" => Ok(SupportedSched::WD40),
+            "scx_chaos" => Ok(SupportedSched::Chaos),
             _ => Err(anyhow::anyhow!("{scx_name} is not supported")),
         }
     }
@@ -70,6 +73,7 @@ impl From<SupportedSched> for &str {
             SupportedSched::Tickless => "scx_tickless",
             SupportedSched::Rusty => "scx_rusty",
             SupportedSched::WD40 => "scx_wd40",
+            SupportedSched::Chaos => "scx_chaos",
         }
     }
 }
diff --git a/rust/scx_loader/src/main.rs b/rust/scx_loader/src/main.rs
index 0db72dba..950a2661 100644
--- a/rust/scx_loader/src/main.rs
+++ b/rust/scx_loader/src/main.rs
@@ -96,6 +96,7 @@ impl ScxLoader {
             "scx_tickless",
             "scx_rusty",
             "scx_wd40",
+            "scx_chaos",
         ]
     }
 
-- 
2.49.0

