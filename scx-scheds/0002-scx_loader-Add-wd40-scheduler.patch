From 27aacfb91a65688cc65230a61c48005041d0f90e Mon Sep 17 00:00:00 2001
From: Piotr Gorski <lucjan.lucjanov@gmail.com>
Date: Fri, 13 Jun 2025 15:50:55 +0200
Subject: [PATCH 2/3] scx_loader: Add wd40 scheduler

Signed-off-by: Piotr Gorski <lucjan.lucjanov@gmail.com>
---
 rust/scx_loader/configuration.md | 12 ++++++++++--
 rust/scx_loader/src/config.rs    | 13 +++++++++++++
 rust/scx_loader/src/lib.rs       |  4 ++++
 rust/scx_loader/src/main.rs      |  1 +
 4 files changed, 28 insertions(+), 2 deletions(-)

diff --git a/rust/scx_loader/configuration.md b/rust/scx_loader/configuration.md
index c228d2ee..78902e26 100644
--- a/rust/scx_loader/configuration.md
+++ b/rust/scx_loader/configuration.md
@@ -60,12 +60,18 @@ auto_mode = []
 gaming_mode = []
 lowlatency_mode = []
 powersave_mode = []
+
+[scheds.scx_wd40]
+auto_mode = []
+gaming_mode = []
+lowlatency_mode = []
+powersave_mode = []
 ```
 
 **`default_sched`:**
 
 * This field specifies the scheduler that will be started automatically when `scx_loader` starts (e.g., on boot).
-* It should be set to the name of a supported scheduler (e.g., `"scx_bpfland"`, `"scx_rusty"`, `"scx_lavd"`, `"scx_flash"`, `"scx_p2dq"`, `"scx_rustland"`).
+* It should be set to the name of a supported scheduler (e.g., `"scx_bpfland"`, `"scx_rusty"`, `"scx_lavd"`, `"scx_flash"`, `"scx_p2dq"`, `"scx_rustland"`, `"scx_wd40"`).
 * If this field is not present or is set to an empty string, no scheduler will be started automatically.
 
 **`default_mode`:**
@@ -76,7 +82,7 @@ powersave_mode = []
 
 **`[scheds.scx_name]`:**
 
-* This section defines the custom flags for a specific scheduler. Replace `scx_name` with the actual name of the scheduler (e.g., `scx_bpfland`, `scx_rusty`, `scx_lavd`, `scx_flash`, `scx_p2dq`, `scx_rustland`).
+* This section defines the custom flags for a specific scheduler. Replace `scx_name` with the actual name of the scheduler (e.g., `scx_bpfland`, `scx_rusty`, `scx_lavd`, `scx_flash`, `scx_p2dq`, `scx_rustland`, `scx_wd40`).
 
 **`auto_mode`, `gaming_mode`, `lowlatency_mode`, `powersave_mode`, `server_mode`:**
 
@@ -105,6 +111,8 @@ The example configuration above shows how to set custom flags for different sche
     * Server mode: `--keep-running`
 * For `scx_rustland`:
     * No custom flags are defined, so the default flags for each mode will be used.
+* For `scx_wd40`:
+    * No custom flags are defined, so the default flags for each mode will be used.
 
 ## Fallback Behavior
 
diff --git a/rust/scx_loader/src/config.rs b/rust/scx_loader/src/config.rs
index 17afc196..c67ab6bb 100644
--- a/rust/scx_loader/src/config.rs
+++ b/rust/scx_loader/src/config.rs
@@ -105,6 +105,10 @@ pub fn get_default_config() -> Config {
                 "scx_rustland".to_string(),
                 get_default_sched_for_config(&SupportedSched::Rustland),
             ),
+            (
+                "scx_wd40".to_string(),
+                get_default_sched_for_config(&SupportedSched::WD40),
+            ),
         ]),
     }
 }
@@ -229,6 +233,8 @@ fn get_default_scx_flags_for_mode(scx_sched: &SupportedSched, sched_mode: SchedM
         },
         // scx_rustland doesn't support any of these modes
         SupportedSched::Rustland => vec![],
+        // scx_wd40 doesn't support any of these modes
+        SupportedSched::WD40 => vec![],
     }
 }
 
@@ -289,6 +295,13 @@ gaming_mode = []
 lowlatency_mode = []
 powersave_mode = []
 server_mode = []
+
+[scheds.scx_wd40]
+auto_mode = []
+gaming_mode = []
+lowlatency_mode = []
+powersave_mode = []
+server_mode = []
 "#;
 
         let parsed_config = parse_config_content(config_str).expect("Failed to parse config");
diff --git a/rust/scx_loader/src/lib.rs b/rust/scx_loader/src/lib.rs
index 9e0911ab..3d225275 100644
--- a/rust/scx_loader/src/lib.rs
+++ b/rust/scx_loader/src/lib.rs
@@ -34,6 +34,8 @@ pub enum SupportedSched {
     Tickless,
     #[serde(rename = "scx_rustland")]
     Rustland,
+    #[serde(rename = "scx_wd40")]
+    WD40,
 }
 
 impl FromStr for SupportedSched {
@@ -48,6 +50,7 @@ impl FromStr for SupportedSched {
             "scx_tickless" => Ok(SupportedSched::Tickless),
             "scx_rustland" => Ok(SupportedSched::Rustland),
             "scx_rusty" => Ok(SupportedSched::Rusty),
+            "scx_wd40" => Ok(SupportedSched::WD40),
             _ => Err(anyhow::anyhow!("{scx_name} is not supported")),
         }
     }
@@ -70,6 +73,7 @@ impl From<SupportedSched> for &str {
             SupportedSched::Tickless => "scx_tickless",
             SupportedSched::Rustland => "scx_rustland",
             SupportedSched::Rusty => "scx_rusty",
+            SupportedSched::WD40 => "scx_wd40",
         }
     }
 }
diff --git a/rust/scx_loader/src/main.rs b/rust/scx_loader/src/main.rs
index f2ca9935..1363a0c6 100644
--- a/rust/scx_loader/src/main.rs
+++ b/rust/scx_loader/src/main.rs
@@ -96,6 +96,7 @@ impl ScxLoader {
             "scx_tickless",
             "scx_rustland",
             "scx_rusty",
+            "scx_wd40",
         ]
     }
 
-- 
2.49.0

