# Maintainer: Tejun Heo <tj@kernel.org>
# Maintainer: Peter Jung ptr1337 <admin@ptr1337.dev>
# Maintainer: Piotr GÃ³rski <lucjan.lucjanov@gmail.com>

pkgname=scx-scheds
_gitname=scx
pkgver=1.0.10
pkgrel=1.5
pkgdesc='sched_ext schedulers and tools'
url='https://github.com/sched-ext/scx'
arch=('x86_64')
license=('GPL-2.0-only')
depends=('libelf' 'zlib' 'jq')
makedepends=('git' 'python' 'meson' 'clang' 'llvm' 'llvm-libs' 'rust')
backup=('etc/default/scx')
options=(!lto)
provides=("scxctl")
conflicts=("scxctl")
source=("git+https://github.com/sched-ext/scx?signed#tag=v$pkgver")
sha256sums=('e586b4b3bbc02b256a05023bf7d092655cbf41bd26575dd9062cc94f61b97a3f')
validpgpkeys=(
  697C63013E65270255EBC2608744DC1EB26B5A9A  # Tejun Heo <tj@kernel.org>
  F5504C7B7B8107B40EF9E97AA1148BB3207BCC33  # David Vernet
)

_backports=(
5f999aa10d2ab984b303fae71d1f5eb5813480a2 # scxctl: Initial code merge
d47691925c88e011fa8819fe26f34a58cff3db85 # scxctl: Update repo link
ee5a0386c5fdb1be061e8c30a07558a78630f5f2 # scxctl: Cleanup description
6ecf467faaac0f86c646bc1069305017469eb8de # scxctl: Relicense to GPL-2.0
5b716c8594b0a749512ee3caeea6a02186c8500f # scxctl: Sync version with scx version
7ebad1bad56f67999315ee605667dc137b65a9d8 # scxctl: Add to main Cargo build
9c84ff68f8b75b6aeb53a4ca6d4deed2101d0784 # scxctl: bump version to 1.0.10
9d945d65fc126e9b955491c483c469b2dbecd3f1 # scx_loader: add SchedMode/str converters
d431b48e5281921e59328752f79f72b674f84d47 # scxctl: use scx_loader crate
)

_reverts=(
)

prepare() {
 cd $_gitname

 local _c _l
  for _c in "${_backports[@]}"; do
    if [[ "${_c}" == *..* ]]; then _l='--reverse'; else _l='--max-count=1'; fi
    git log --oneline "${_l}" "${_c}"
    git cherry-pick --mainline 1 --no-commit "${_c}"
  done
  for _c in "${_reverts[@]}"; do
    if [[ "${_c}" == *..* ]]; then _l='--reverse'; else _l='--max-count=1'; fi
    git log --oneline "${_l}" "${_c}"
    git revert --mainline 1 --no-commit "${_c}"
  done

  local src
  for src in "${source[@]}"; do
    src="${src%%::*}"
    src="${src##*/}"
    [[ $src = *.patch ]] || continue
    echo "Applying patch $src..."
    patch -Np1 < "../$src"
  done
}

build() {
  cd $_gitname
  arch-meson . build -D openrc=disabled -D cargo_home="$srcdir"/scx
  meson compile -C build
}

package() {
  cd $_gitname
  meson install -C build --destdir "${pkgdir}"
}
