# Maintainer: Peter Jung ptr1337 <admin@ptr1337.dev>
# Maintainer: Piotr GÃ³rski <lucjan.lucjanov@gmail.com>
# Contributor: Tejun Heo <tj@kernel.org>

pkgname=scx-scheds
_gitname=scx
pkgver=1.0.16
pkgrel=1.6
pkgdesc='sched_ext schedulers and tools'
url='https://github.com/sched-ext/scx'
arch=('x86_64')
license=('GPL-2.0-only')
depends=(
  jq
  libseccomp
  libelf
  zlib
)
makedepends=(
  clang
  git
  llvm
  llvm-libs
  python
  rust
)
options=(!lto)
provides=("scxctl")
conflicts=("scxctl")
source=("git+https://github.com/sched-ext/scx?signed#tag=v$pkgver")
sha256sums=('4b0355b523c0245f03340c90593c934f876cdfe33145e9c55c20c80bd13b346f')
validpgpkeys=(
  697C63013E65270255EBC2608744DC1EB26B5A9A  # Tejun Heo <tj@kernel.org>
  F5504C7B7B8107B40EF9E97AA1148BB3207BCC33  # David Vernet <void@manifault.com>
  A8775C60262EEF2AA34A864F5DAD005C4BFEA770  # Jake Hilton <jake@hillion.co.uk>
)

_backports=(
72106c2e08a47f9c6c2ae3602f4c41b81fe038d4 # services: drop basic scx.service
0ab8d2eb244e3575e14eb25d0bf5ba4085a0ca5f # scx_loader: Add chaos scheduler
407e66759e4410206e4a7b9e185ee4f2331bbe40 # scx_loader: Add mitosis scheduler
0b05f9ecdd6966420d45b0eb01034e8802b9f953 # scx_loader: Add wd40 scheduler
3e7b89396bac984ac49551fc200d360cb1df794d # scxctl: cache DBUS results to eliminate redundant calls
ca1784db910b06ca3b95feeb5189e2eab78f420e # scxctl: optimize scheduler list display with iterator patterns
02f6c7ff2d1df20595539f4157b067eeb5d4b802 # scxctl: use &str parameters for string utility functions
3c9bbb50593217826555fd8519ed4eebd1b925da # scxctl: replace unwrap() calls with proper error handling
2adecf703c01060b06bc6c79c5837d7c897b01f2 # scxctl: extract helper functions to reduce duplication
9279e864869da6ed3031192fdde1cc5b736d8462 # scxctl: simplify string processing utility functions
9716066529a29c74633a77d6b9ae26a34eb89ab1 # scxctl: some Rust formatting changes to satisfy the CI
)

_reverts=(
)

prepare() {
  cd $_gitname

  local _c _l
   for _c in "${_backports[@]}"; do
     if [[ "${_c}" == *..* ]]; then _l='--reverse'; else _l='--max-count=1'; fi
     git log --oneline "${_l}" "${_c}"
     git cherry-pick --mainline 1 --no-commit "${_c}"
   done
   for _c in "${_reverts[@]}"; do
     if [[ "${_c}" == *..* ]]; then _l='--reverse'; else _l='--max-count=1'; fi
     git log --oneline "${_l}" "${_c}"
     git revert --mainline 1 --no-commit "${_c}"
   done

   cargo fetch --locked --target "$(rustc -vV | sed -n 's/host: //p')"
}

build() {
  cd $_gitname
  export CARGO_TARGET_DIR=target
  cargo build \
     --release \
     --workspace \
     --locked \
     --frozen \
     --exclude scx_rlfifo \
     --exclude vmlinux_docify \
     --exclude scx_lib_selftests
}

#check() {
#  cd $_gitname
#  cargo test \
#     --workspace \
#     --locked \
#     --frozen \
#     --exclude scx_rlfifo \
#     --exclude vmlinux_docify \
#     --exclude scx_lib_selftests
#}

package() {
  cd $_gitname

  # binary files
  find target/release -maxdepth 1 -type f -executable ! -name '*.so' \
    -exec install -Dm755 -t "$pkgdir/usr/bin/" {} +

  # systemd service
  install -Dm644 services/systemd/scx_loader.service \
    "$pkgdir/usr/lib/systemd/system/scx_loader.service"

  # dbus service
  install -Dm644 services/systemd/org.scx.Loader.service\
    "$pkgdir/usr/share/dbus-1/system-services/org.scx.Loader.service"

  # dbus config
  install -Dm644 tools/scx_loader/org.scx.Loader.conf \
    "$pkgdir/usr/share/dbus-1/system.d/org.scx.Loader.conf"

  # scx_loader config
  install -Dm644 services/scx_loader.toml \
    "$pkgdir/usr/share/scx_loader/config.toml"
}
