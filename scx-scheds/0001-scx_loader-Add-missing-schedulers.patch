From 6995b138bcfe55062d8c8b77be18be73eff91558 Mon Sep 17 00:00:00 2001
From: Piotr Gorski <lucjan.lucjanov@gmail.com>
Date: Sat, 6 Sep 2025 01:42:27 +0200
Subject: [PATCH 1/2] scx_loader: Add missing schedulers

Signed-off-by: Piotr Gorski <lucjan.lucjanov@gmail.com>
---
 tools/scx_loader/configuration.md | 28 +++++++++++++++++++++++++
 tools/scx_loader/src/config.rs    | 35 +++++++++++++++++++++++++++++++
 tools/scx_loader/src/lib.rs       | 12 +++++++++++
 tools/scx_loader/src/main.rs      |  3 +++
 4 files changed, 78 insertions(+)

diff --git a/tools/scx_loader/configuration.md b/tools/scx_loader/configuration.md
index d0cd6ee1..435f2cf3 100644
--- a/tools/scx_loader/configuration.md
+++ b/tools/scx_loader/configuration.md
@@ -76,6 +76,27 @@ gaming_mode = ["-c", "0", "-p", "0"]
 lowlatency_mode = ["-m", "performance", "-c", "0", "-p", "0", "-w"]
 powersave_mode = ["-m", "powersave", "-d", "-p", "5000"]
 server_mode = ["-a", "-s", "20000"]
+
+[scheds.scx_chaos]
+auto_mode = []
+gaming_mode = []
+lowlatency_mode = ["-y"]
+powersave_mode = []
+server_mode = ["--keep-running"]
+
+[scheds.scx_mitosis]
+auto_mode = []
+gaming_mode = []
+lowlatency_mode = []
+powersave_mode = []
+server_mode = []
+
+[scheds.scx_wd40]
+auto_mode = []
+gaming_mode = []
+lowlatency_mode = []
+powersave_mode = []
+server_mode = []
 ```
 
 **`default_sched`:**
@@ -137,6 +158,13 @@ The example configuration above shows how to set custom flags for different sche
     * Low Latency mode: `-m performance -c 0 -p 0 -w`
     * Power Save mode: `-m powersave -d -p 5000`
     * Server mode: `-a -s 20000`
+* For `scx_chaos`:
+    * Low Latency mode: `-y`
+    * Server mode: `--keep-running`
+* For `scx_mitosis`:
+    * No custom flags are defined, so the default flags for each mode will be used.
+* For `scx_wd40`:
+    * No custom flags are defined, so the default flags for each mode will be used.
 
 ## Fallback Behavior
 
diff --git a/tools/scx_loader/src/config.rs b/tools/scx_loader/src/config.rs
index 84e010c9..f4565084 100644
--- a/tools/scx_loader/src/config.rs
+++ b/tools/scx_loader/src/config.rs
@@ -87,6 +87,9 @@ pub fn get_default_config() -> Config {
         SupportedSched::Tickless,
         SupportedSched::Rustland,
         SupportedSched::Cosmos,
+        SupportedSched::Chaos,
+        SupportedSched::Mitosis,
+        SupportedSched::WD40,
     ];
     let scheds_map = HashMap::from(supported_scheds.map(|x| init_default_config_entry(x)));
     Config {
@@ -234,6 +237,17 @@ fn get_default_scx_flags_for_mode(scx_sched: &SupportedSched, sched_mode: SchedM
             SchedMode::Server => vec!["-a", "-s", "20000"],
             SchedMode::Auto => vec!["-d"],
         },
+        SupportedSched::Chaos => match sched_mode {
+            SchedMode::Gaming => vec![],
+            SchedMode::LowLatency => vec!["-y"],
+            SchedMode::PowerSave => vec![],
+            SchedMode::Server => vec!["--keep-running"],
+            SchedMode::Auto => vec![],
+        },
+        // scx_mitosis doesn't support any of these modes
+        SupportedSched::Mitosis => vec![],
+        // scx_wd40 doesn't support any of these modes
+        SupportedSched::WD40 => vec![],
     }
 }
 
@@ -310,6 +324,27 @@ gaming_mode = ["-c", "0", "-p", "0"]
 lowlatency_mode = ["-m", "performance", "-c", "0", "-p", "0", "-w"]
 powersave_mode = ["-m", "powersave", "-d", "-p", "5000"]
 server_mode = ["-a", "-s", "20000"]
+
+[scheds.scx_chaos]
+auto_mode = []
+gaming_mode = []
+lowlatency_mode = ["-y"]
+powersave_mode = []
+server_mode = ["--keep-running"]
+
+[scheds.scx_mitosis]
+auto_mode = []
+gaming_mode = []
+lowlatency_mode = []
+powersave_mode = []
+server_mode = []
+
+[scheds.scx_wd40]
+auto_mode = []
+gaming_mode = []
+lowlatency_mode = []
+powersave_mode = []
+server_mode = []
 "#;
 
         let parsed_config = parse_config_content(config_str).expect("Failed to parse config");
diff --git a/tools/scx_loader/src/lib.rs b/tools/scx_loader/src/lib.rs
index bc8eb9a8..6333c8df 100644
--- a/tools/scx_loader/src/lib.rs
+++ b/tools/scx_loader/src/lib.rs
@@ -36,6 +36,12 @@ pub enum SupportedSched {
     Rustland,
     #[serde(rename = "scx_cosmos")]
     Cosmos,
+    #[serde(rename = "scx_chaos")]
+    Chaos,
+    #[serde(rename = "scx_mitosis")]
+    Mitosis,
+    #[serde(rename = "scx_wd40")]
+    WD40,
 }
 
 impl FromStr for SupportedSched {
@@ -44,13 +50,16 @@ impl FromStr for SupportedSched {
     fn from_str(scx_name: &str) -> anyhow::Result<SupportedSched> {
         match scx_name {
             "scx_bpfland" => Ok(SupportedSched::Bpfland),
+            "scx_chaos" => Ok(SupportedSched::Chaos),
             "scx_cosmos" => Ok(SupportedSched::Cosmos),
             "scx_flash" => Ok(SupportedSched::Flash),
             "scx_lavd" => Ok(SupportedSched::Lavd),
+            "scx_mitosis" => Ok(SupportedSched::Mitosis),
             "scx_p2dq" => Ok(SupportedSched::P2DQ),
             "scx_tickless" => Ok(SupportedSched::Tickless),
             "scx_rustland" => Ok(SupportedSched::Rustland),
             "scx_rusty" => Ok(SupportedSched::Rusty),
+            "scx_wd40" => Ok(SupportedSched::WD40),
             _ => Err(anyhow::anyhow!("{scx_name} is not supported")),
         }
     }
@@ -67,13 +76,16 @@ impl From<SupportedSched> for &str {
     fn from(scx_name: SupportedSched) -> Self {
         match scx_name {
             SupportedSched::Bpfland => "scx_bpfland",
+            SupportedSched::Chaos => "scx_chaos",
             SupportedSched::Cosmos => "scx_cosmos",
             SupportedSched::Flash => "scx_flash",
             SupportedSched::Lavd => "scx_lavd",
+            SupportedSched::Mitosis => "scx_mitosis",
             SupportedSched::P2DQ => "scx_p2dq",
             SupportedSched::Tickless => "scx_tickless",
             SupportedSched::Rustland => "scx_rustland",
             SupportedSched::Rusty => "scx_rusty",
+            SupportedSched::WD40 => "scx_wd40",
         }
     }
 }
diff --git a/tools/scx_loader/src/main.rs b/tools/scx_loader/src/main.rs
index 20d71acb..2459114a 100644
--- a/tools/scx_loader/src/main.rs
+++ b/tools/scx_loader/src/main.rs
@@ -101,13 +101,16 @@ impl ScxLoader {
     async fn supported_schedulers(&self) -> Vec<&str> {
         vec![
             "scx_bpfland",
+            "scx_chaos",
             "scx_cosmos",
             "scx_flash",
             "scx_lavd",
+            "scx_mitosis",
             "scx_p2dq",
             "scx_tickless",
             "scx_rustland",
             "scx_rusty",
+            "scx_wd40",
         ]
     }
     async fn start_scheduler(
-- 
2.51.0

