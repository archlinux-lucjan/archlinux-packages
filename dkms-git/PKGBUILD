# Maintainer: Piotr Górski <lucjan.lucjanov@gmail.com>
# Contributor: Sébastien Luttringer
# Contributor: Balwinder S "bsd" Dheeman (bdheeman AT gmail.com)

pkgname=dkms-git
_pkgname=dkms
pkgver=2.8.2.r2.g0a05477
pkgrel=2
pkgdesc='Dynamic Kernel Modules System'
arch=('any')
url='http://linux.dell.com/dkms/'
license=('GPL2')
depends=('bash' 'kmod' 'gcc' 'make' 'patch')
makedepends=('git')
optdepends=('linux-headers: build modules against the Arch kernel'
            'linux-lts-headers: build modules against the LTS kernel'
            'linux-zen-headers: build modules against the ZEN kernel'
            'linux-hardened-headers: build modules against the HARDENED kernel')
backup=('etc/dkms/framework.conf')
install=$_pkgname.install
conflicts=('dkms')
provides=('dkms')
source=('git+https://github.com/dell/dkms'
        'hook.install'
        'hook.remove'
        'hook.upgrade'
        'hook.sh'
        '0001-Revert-Make-newly-installed-modules-available-immedi.patch')
md5sums=('SKIP'
         'be9784c5c5bbc92fa2d18f0b5f4cd0c4'
         'fa7e55e109140f556d8db2410b2a9d7c'
         'a9adccf8af1354dda5f2507011dca849'
         'e048f2b7e7b59131eb9a21ca44ae418d'
         'd3b91ef709f567a375f4bbdbd3291d2b')

pkgver() {
  cd dkms
  git describe --tags --long | sed 's/^v//;s/\([^-]*-g\)/r\1/;s/-/./g'
}
                  
prepare() {
  cd dkms

  # apply patch from the source array (should be a pacman feature)
  local filename
  for filename in "${source[@]}"; do
    if [[ "$filename" =~ \.patch$ ]]; then
      msg2 "Applying patch ${filename##*/}"
      patch -p1 -N -i "$srcdir/${filename##*/}"
    fi
  done

  # /usr move
  msg2 '/usr move patching'
  for i in dkms{,_framework.conf,.bash-completion,.8,_common.postinst}; do
    sed -ri 's,/lib/modules,/usr/lib/modules,g' "$i"
  done
}

package() {
  # alpm hooks
  install -D -m 644 hook.install "$pkgdir/usr/share/libalpm/hooks/70-dkms-install.hook"
  # both upgrade and remove hooks are removing dkms modules.
  # remove always call depmod while upgrade never, as install will later.
  # upgrade is run before remove in order to have the cleanest depmod file,
  # if something goes wrong before the depmod call in install hook.
  install -D -m 644 hook.upgrade "$pkgdir/usr/share/libalpm/hooks/70-dkms-upgrade.hook"
  install -D -m 644 hook.remove "$pkgdir/usr/share/libalpm/hooks/71-dkms-remove.hook"
  # hook helper
  install -D -m 755 hook.sh "$pkgdir/usr/lib/dkms/alpm-hook"
  # upstream installer
  cd dkms
  # we don't need kconf files, so we install them outside $pkgdir
  make \
    DESTDIR="$pkgdir" \
    SBIN="$pkgdir/usr/bin" \
    BASHDIR="$pkgdir/usr/share/bash-completion/completions" \
    KCONF="$srcdir"/kconf \
    install
}

# vim:set ts=2 sw=2 et:
