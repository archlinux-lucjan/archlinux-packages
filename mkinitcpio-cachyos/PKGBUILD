# Maintainer: Piotr Gorski <lucjan.lucjanov@gmail.com>
# Maintainer: Giancarlo Razzolini <grazzolini@archlinux.org>
# Maintainer: Dave Reisner <dreisner@archlinux.org>
# Maintainer: Thomas BÃ¤chler <thomas@archlinux.org>

pkgname=mkinitcpio-cachyos
_pkgname=mkinitcpio
pkgver=31
pkgrel=1
pkgdesc="Modular initramfs image creation utility"
arch=('any')
url='https://github.com/archlinux/mkinitcpio'
license=('GPL')
depends=('awk' 'mkinitcpio-busybox>=1.19.4-2' 'kmod' 'util-linux>=2.23' 'libarchive' 'coreutils'
         'bash' 'binutils' 'diffutils' 'findutils' 'grep' 'filesystem>=2011.10-1' 'zstd' 'systemd')
makedepends=('asciidoc')
optdepends=('gzip: Use gzip compression for the initramfs image'
            'xz: Use lzma or xz compression for the initramfs image'
            'bzip2: Use bzip2 compression for the initramfs image'
            'lzop: Use lzo compression for the initramfs image'
            'lz4: Use lz4 compression for the initramfs image'
            'mkinitcpio-nfs-utils: Support for root filesystem on NFS')
provides=('initramfs' "mkinitcpio=$pkgver")
conflicts=('mkinitcpio')
backup=('etc/mkinitcpio.conf')
source=("https://sources.archlinux.org/other/$_pkgname/$_pkgname-$pkgver.tar.gz"{,.sig}
        '0001-Fix-the-warning-about-missing-modules.builtin.modinf.patch'
        '0001-mkinitcpio-cachyos.patch')
install=mkinitcpio.install
sha512sums=('4ef87c2e4f579b292c38f9c487e78b3b99f6db77909cab322e860e5ca70aca3747fcfc272e2e15c9a3605c924ab178057b8b23151f98debc5d96e65f3c0c49d5'
            'SKIP'
            'fd348d6fcff249672b495db50fa67ce06d5d9a0c8f749c8b488bc1e4b43c9b850a5ad87392230fbe8b715422bb14e760bb0ad219cfcf1d7e132c6a7e4dd118a6'
            '18187229251eb0ef22c0f5d4403ba92475039dc6dc3418c508e5ebf9d348f3797408ee9e22518af21e1bebd43693f7d9e5826260d2225a54706d5202e2f991dc')
b2sums=('0113e288906e3b5fa485c29c00e7df60d85addd96718c45531031a686f18c739fa18303b6cac374d35b85edb7b663e221c8dc9158dff08c75858a4ed4dd154bf'
        'SKIP'
        '5a05cee0382284d6cc0a2033e872b7c4c9f01ddfe6d3550974b5eab9a8a18690d1115b57d8d08153497fed08fd55b69f8b4a4cbcbe67795d615cc06ea7c86618'
        'c888674cd52f310ca4074e405b16bd2a7247a28ceab3ce113e81319c8f3fb7ea80cfcf870cc47a273d226c4579cb6690ad58ee27efa143de87c80d7e7319cfeb')
validpgpkeys=('ECCAC84C1BA08A6CC8E63FBBF22FB1D78A77AEAB')    # Giancarlo Razzolini

prepare() {
 cd $_pkgname-$pkgver

 local src
  for src in "${source[@]}"; do
    src="${src%%::*}"
    src="${src##*/}"
    [[ $src = *.patch ]] || continue
    echo "Applying patch $src..."
    patch -Np1 < "../$src"
  done
}

check() {
  make -C "$_pkgname-$pkgver" check
}

package() {
  make -C "$_pkgname-$pkgver" DESTDIR="$pkgdir" install
}
