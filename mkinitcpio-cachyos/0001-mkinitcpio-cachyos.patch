From c27a6e72ec0dab059055562c3f79c5c2a40bdc6a Mon Sep 17 00:00:00 2001
From: Piotr Gorski <lucjan.lucjanov@gmail.com>
Date: Wed, 26 Oct 2022 19:28:31 +0200
Subject: [PATCH] mkinitcpio cachyos

Signed-off-by: Piotr Gorski <lucjan.lucjanov@gmail.com>
---
 Makefile                                 |  3 +-
 functions                                | 32 ++++----
 install/strip                            |  1 +
 libalpm/hooks/60-mkinitcpio-remove.hook  |  2 +-
 libalpm/hooks/90-mkinitcpio-install.hook |  2 +-
 libalpm/scripts/mkinitcpio               | 95 ++++++++++++++++++++++++
 libalpm/scripts/mkinitcpio-install       | 44 -----------
 libalpm/scripts/mkinitcpio-remove        | 61 ---------------
 man/mkinitcpio.conf.5.txt                |  8 +-
 mkinitcpio                               |  2 +
 mkinitcpio.conf                          |  6 ++
 11 files changed, 131 insertions(+), 125 deletions(-)
 create mode 100644 libalpm/scripts/mkinitcpio
 delete mode 100644 libalpm/scripts/mkinitcpio-install
 delete mode 100644 libalpm/scripts/mkinitcpio-remove

diff --git a/Makefile b/Makefile
index 9ef0f6a..e6f3789 100644
--- a/Makefile
+++ b/Makefile
@@ -73,9 +73,8 @@ install: all
 	install -m644 shell/zsh-completion $(DESTDIR)/usr/share/zsh/site-functions/_mkinitcpio
 
 	install -m644 libalpm/hooks/90-mkinitcpio-install.hook $(DESTDIR)/usr/share/libalpm/hooks/90-mkinitcpio-install.hook
-	install -m755 libalpm/scripts/mkinitcpio-install $(DESTDIR)/usr/share/libalpm/scripts/mkinitcpio-install
 	install -m644 libalpm/hooks/60-mkinitcpio-remove.hook $(DESTDIR)/usr/share/libalpm/hooks/60-mkinitcpio-remove.hook
-	install -m755 libalpm/scripts/mkinitcpio-remove $(DESTDIR)/usr/share/libalpm/scripts/mkinitcpio-remove
+	install -m755 libalpm/scripts/mkinitcpio $(DESTDIR)/usr/share/libalpm/scripts/mkinitcpio
 
 doc: $(MANPAGES)
 man/%: man/%.txt Makefile
diff --git a/functions b/functions
index 2148ed8..6d7d015 100644
--- a/functions
+++ b/functions
@@ -849,7 +849,7 @@ try_enable_color() {
 
 install_modules() {
     local m moduledest=$BUILDROOT/lib/modules/$KERNELVERSION
-    local -a xz_comp gz_comp zst_comp
+    MODULES_DECOMPRESS="yes" && local -a xz_comp gz_comp zst_comp
 
     [[ $KERNELVERSION == none ]] && return 0
 
@@ -860,20 +860,22 @@ install_modules() {
 
     cp "$@" "$moduledest/kernel"
 
-    # unzip modules prior to recompression
-    for m in "$@"; do
-        case $m in
-            *.xz)
-                xz_comp+=("$moduledest/kernel/${m##*/}")
-                ;;
-            *.gz)
-                gz_comp+=("$moduledest/kernel/${m##*/}")
-                ;;
-            *.zst)
-                zst_comp+=("$moduledest/kernel/${m##*/}")
-                ;;
-        esac
-    done
+    if [[ "$MODULES_DECOMPRESS" = yes ]]; then
+        # unzip modules prior to recompression
+        for m in "$@"; do
+            case "$m" in
+                *.xz)
+                    xz_comp+=("$moduledest/kernel/${m##*/}")
+                    ;;
+                *.gz)
+                    gz_comp+=("$moduledest/kernel/${m##*/}")
+                    ;;
+                *.zst)
+                    zst_comp+=("$moduledest/kernel/${m##*/}")
+                    ;;
+            esac
+        done
+    fi
     (( ${#xz_comp[*]} )) && xz -d "${xz_comp[@]}"
     (( ${#gz_comp[*]} )) && gzip -d "${gz_comp[@]}"
     (( ${#zst_comp[*]} )) && zstd -d --rm -q "${zst_comp[@]}"
diff --git a/install/strip b/install/strip
index f8eb49d..b71ed54 100644
--- a/install/strip
+++ b/install/strip
@@ -18,6 +18,7 @@ build() {
             *application/x-pie-executable*)
                 # Binaries
                 strip --strip-all "$bin"
+                ;;
             *application/x-object*)
                 # Kernel objects
                 strip --strip-debug "$bin"
diff --git a/libalpm/hooks/60-mkinitcpio-remove.hook b/libalpm/hooks/60-mkinitcpio-remove.hook
index 9827afc..9600ce1 100644
--- a/libalpm/hooks/60-mkinitcpio-remove.hook
+++ b/libalpm/hooks/60-mkinitcpio-remove.hook
@@ -12,5 +12,5 @@ Target = mkinitcpio-git
 [Action]
 Description = Removing linux initcpios...
 When = PreTransaction
-Exec = /usr/share/libalpm/scripts/mkinitcpio-remove
+Exec = /usr/share/libalpm/scripts/mkinitcpio remove
 NeedsTargets
diff --git a/libalpm/hooks/90-mkinitcpio-install.hook b/libalpm/hooks/90-mkinitcpio-install.hook
index cf480bd..5b02fb8 100644
--- a/libalpm/hooks/90-mkinitcpio-install.hook
+++ b/libalpm/hooks/90-mkinitcpio-install.hook
@@ -8,5 +8,5 @@ Target = usr/lib/initcpio/*
 [Action]
 Description = Updating linux initcpios...
 When = PostTransaction
-Exec = /usr/share/libalpm/scripts/mkinitcpio-install
+Exec = /usr/share/libalpm/scripts/mkinitcpio install
 NeedsTargets
diff --git a/libalpm/scripts/mkinitcpio b/libalpm/scripts/mkinitcpio
new file mode 100644
index 0000000..95c7e4d
--- /dev/null
+++ b/libalpm/scripts/mkinitcpio
@@ -0,0 +1,95 @@
+#!/usr/bin/env bash
+
+ set -e
+
+args=()
+package=0
+
+process_preset() {
+    if [[ -n "${pkgbase}" && -e $preset ]]; then
+        if ! cmp "$preset" > /dev/null 2>&1 <(sed "s|%PKGBASE%|${pkgbase}|g" /usr/share/mkinitcpio/hook.preset); then
+            if [[ ! -e $preset.pacsave ]]; then
+                # save the preset as pacsave
+                mv -- "$preset" "$preset.pacsave" && return 0
+            fi
+        else
+            # remove the preset
+            rm -- "$preset" && return 0
+        fi
+    fi
+}
+
+install_kernel() {
+    preset="/etc/mkinitcpio.d/${1}.preset"
+    if [[ ! -e $preset ]]; then
+        if [[ -e $preset.pacsave ]]; then
+            # move the pacsave to the template
+            mv -- "${preset}.pacsave" "$preset"
+        else
+            # create the preset from the template
+            sed "s|%PKGBASE%|${1}|g" /usr/share/mkinitcpio/hook.preset \
+                | install -Dm644 /dev/stdin "$preset"
+        fi
+    fi
+
+    # always install the kernel
+    install -Dm644 "${line}" "/boot/vmlinuz-${1}"
+
+    # compound args for each kernel
+    args+=(-p "${1}")
+}
+
+remove_kernel() {
+    # remove the actual kernel and images for the package being removed
+    kernel="/boot/vmlinuz-${1}"
+    preset="/etc/mkinitcpio.d/${1}.preset"
+    initramfs="/boot/initramfs-${1}.img"
+    fallback_initramfs="/boot/initramfs-${1}-fallback.img"
+    # remove the installed kernel
+    rm -f -- "$kernel"
+
+    process_preset "${1}" "$preset"
+
+    # remove images
+    rm -f -- "$initramfs" "$fallback_initramfs"
+}
+
+while read -r line; do
+    if [[ "$line" != */vmlinuz ]]; then
+        # triggers when it's a change to usr/lib/initcpio/*
+        package=1
+        continue
+    fi
+
+    if ! read -r pkgbase > /dev/null 2>&1 < "${line%/vmlinuz}/pkgbase"; then
+        # if the kernel has no pkgbase, we skip it
+        continue
+    fi
+
+    case "$1" in
+        install) install_kernel "$pkgbase";;
+        remove) remove_kernel "$pkgbase";;
+    esac
+done
+
+if (( package )) && compgen -G /etc/mkinitcpio.d/"*.preset" > /dev/null; then
+    case "$1" in
+        install)
+            # change to use all presets
+            args=(-P)
+            ;;
+        remove)
+          shopt -s nullglob
+          for preset in /etc/mkinitcpio.d/*.preset; do
+              pkgbase=${preset##*/}
+              pkgbase=${pkgbase%.preset}
+              process_preset "${pkgbase}" "$preset"
+          done
+          shopt -u nullglob
+          ;;
+    esac
+fi
+
+if [[ "$1" == "install" ]] && (( ${#args[@]} )); then
+    mkinitcpio "${args[@]}"
+fi
diff --git a/libalpm/scripts/mkinitcpio-install b/libalpm/scripts/mkinitcpio-install
deleted file mode 100644
index d2e5041..0000000
--- a/libalpm/scripts/mkinitcpio-install
+++ /dev/null
@@ -1,44 +0,0 @@
-#!/bin/bash -e
-
-args=()
-all=0
-
-while read -r line; do
-    if [[ $line != */vmlinuz ]]; then
-        # triggers when it's a change to usr/lib/initcpio/*
-        all=1
-        continue
-    fi
-
-    if ! read -r pkgbase > /dev/null 2>&1 < "${line%/vmlinuz}/pkgbase"; then
-        # if the kernel has no pkgbase, we skip it
-        continue
-    fi
-
-    preset="/etc/mkinitcpio.d/${pkgbase}.preset"
-    if [[ ! -e $preset ]]; then
-        if [[ -e $preset.pacsave ]]; then
-            # move the pacsave to the template
-            mv "${preset}.pacsave" "$preset"
-        else
-            # create the preset from the template
-            sed "s|%PKGBASE%|${pkgbase}|g" /usr/share/mkinitcpio/hook.preset \
-                | install -Dm644 /dev/stdin "$preset"
-        fi
-    fi
-
-    # always install the kernel
-    install -Dm644 "${line}" "/boot/vmlinuz-${pkgbase}"
-
-    # compound args for each kernel
-    args+=(-p "${pkgbase}")
-done
-
-if (( all )) && compgen -G /etc/mkinitcpio.d/"*.preset" > /dev/null; then
-    # change to use all presets
-    args=(-P)
-fi
-
-if (( ${#args[@]} )); then
-    mkinitcpio "${args[@]}"
-fi
diff --git a/libalpm/scripts/mkinitcpio-remove b/libalpm/scripts/mkinitcpio-remove
deleted file mode 100644
index 17b4b31..0000000
--- a/libalpm/scripts/mkinitcpio-remove
+++ /dev/null
@@ -1,61 +0,0 @@
-#!/bin/bash -e
-
-package=0
-
-process_preset() {
-    if [[ -n "${pkgbase}" && -e $preset ]]; then
-        if ! cmp $preset > /dev/null 2>&1 <(sed "s|%PKGBASE%|${pkgbase}|g" /usr/share/mkinitcpio/hook.preset); then
-            if [[ ! -e $preset.pacsave ]]; then
-                # save the preset as pacsave
-                mv $preset $preset.pacsave && return 0
-            fi
-        else
-            # remove the preset
-            rm $preset && return 0
-        fi
-    fi
-}
-
-while read -r line; do
-    if [[ $line != */vmlinuz ]]; then
-        # triggers when it's a change to usr/lib/initcpio/*
-        package=1
-        continue
-    fi
-
-    if ! read -r pkgbase > /dev/null 2>&1 < "${line%/vmlinuz}/pkgbase"; then
-        # if the kernel has no pkgbase, we skip it
-        continue
-    fi
-
-    # remove the actual kernel and images for the package being removed
-    kernel="/boot/vmlinuz-${pkgbase}"
-    preset="/etc/mkinitcpio.d/${pkgbase}.preset"
-    initramfs="/boot/initramfs-${pkgbase}.img"
-    fallback_initramfs="/boot/initramfs-${pkgbase}-fallback.img"
-    if [[ -e $kernel ]]; then
-        # remove the installed kernel
-        rm $kernel
-    fi
-
-    process_preset "${pkgbase}" $preset
-
-    if [[ -e $initramfs ]]; then
-        # remove the main image
-        rm $initramfs
-    fi
-    if [[ -e $fallback_initramfs ]]; then
-        # remove the fallback image
-        rm $fallback_initramfs
-    fi
-done
-
-if (( package )) && compgen -G /etc/mkinitcpio.d/"*.preset" > /dev/null; then
-    shopt -s nullglob
-    for preset in /etc/mkinitcpio.d/*.preset; do
-        pkgbase=${preset##*/}
-        pkgbase=${pkgbase%.preset}
-        process_preset "${pkgbase}" $preset
-    done
-    shopt -u nullglob
-fi
diff --git a/man/mkinitcpio.conf.5.txt b/man/mkinitcpio.conf.5.txt
index 0383360..fdb8d91 100644
--- a/man/mkinitcpio.conf.5.txt
+++ b/man/mkinitcpio.conf.5.txt
@@ -69,6 +69,12 @@ despite being "valid".
 	program. This option is generally not used. It can be potentially dangerous
 	and may cause invalid images to be generated without any sign of an error.
 
+*DECOMPRESS_MODULES*::
+
+	Switch (yes/no) to decide wether kernel modules should be compressed or
+	uncompressed during initramfs creation. Enabled by default for faster bootup
+	and smaller initramfs size. Disable it to reduce RAM usage in early userspace.
+
 See Also
 --------
 *mkinitcpio*(8)
@@ -79,4 +85,4 @@ mkinitcpio is created and maintained by the Arch Linux Developer community.
 
 Copyright
 ---------
-Copyright (c) Arch Linux 2006-2021
+Copyright (c) Arch Linux 2006-2022
diff --git a/mkinitcpio b/mkinitcpio
index 2781e3a..687f2b6 100755
--- a/mkinitcpio
+++ b/mkinitcpio
@@ -658,6 +658,8 @@ if [[ $KERNELVERSION != 'none' ]]; then
     [[ -d $_d_kmoduledir ]] || die "'$_d_kmoduledir' is not a valid kernel module directory"
 fi
 
+MODULES_DECOMPRESS=${MODULES_DECOMPRESS:-"yes"}
+
 _d_workdir=$(initialize_buildroot "$KERNELVERSION" "$_opttargetdir") || cleanup 1
 BUILDROOT=${_opttargetdir:-$_d_workdir/root}
 
diff --git a/mkinitcpio.conf b/mkinitcpio.conf
index 3494fab..8acf414 100644
--- a/mkinitcpio.conf
+++ b/mkinitcpio.conf
@@ -65,3 +65,9 @@ HOOKS=(base udev autodetect modconf block filesystems keyboard fsck)
 # COMPRESSION_OPTIONS
 # Additional options for the compressor
 #COMPRESSION_OPTIONS=()
+
+# MODULES_DECOMPRESS
+# Decompress kernel modules during initramfs creation.
+# Enable to speedup boot process, disable to save RAM
+# during early userspace. Switch (yes/no).
+#MODULES_DECOMPRESS="yes"
-- 
2.38.1.143.g1fc3c0ad40

